{"version":3,"sources":["webpack:///./src/app/vendor/view-ledger/view-ledger.component.css","webpack:///./src/app/vendor/view-ledger/view-ledger.component.html","webpack:///./src/app/vendor/view-ledger/view-ledger.component.ts","webpack:///./src/app/vendor/view-ledger/view-ledger.module.ts","webpack:///./src/app/vendor/view-ledger/view-ledger.routing.ts"],"names":[],"mappings":"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","file":"view-ledger-view-ledger-module.js","sourcesContent":["module.exports = \".ant-row{\\n    margin-bottom: 7px;\\n}\\n.logTable {\\n    background-color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmVuZG9yL3ZpZXctbGVkZ2VyL3ZpZXctbGVkZ2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLHVCQUF1QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL3ZlbmRvci92aWV3LWxlZGdlci92aWV3LWxlZGdlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFudC1yb3d7XG4gICAgbWFyZ2luLWJvdHRvbTogN3B4O1xufVxuLmxvZ1RhYmxlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn0iXX0= */\"","module.exports = \"<div nz-row>\\n  <div nz-col nzSpan=\\\"24\\\">\\n    <a [routerLink]=\\\"[ '/dashboard','vendor', 'view-vednor']\\\">Back</a>\\n  </div>\\n</div>\\n\\n<div nz-row>\\n  <div nz-col nzSpan=\\\"12\\\" nzOffset=\\\"6\\\">\\n    <nz-card style=\\\"margin-bottom: 10px;\\\" nzTitle=\\\"Shop Name: {{shopName}}\\\">\\n      <nz-table nzNoResult=\\\"   \\\">\\n\\n        <tbody>\\n          <tr>\\n            <th>Shope PhoneNumber</th>\\n            <td style=\\\"border-bottom: none;\\\">{{shopPhoneNumber}}</td>\\n          </tr>\\n          <tr>\\n            <th>Available Amount:</th>\\n            <td style=\\\"border-bottom: none;\\\">{{avilableAmount | number}}</td>\\n          </tr>\\n          <tr>\\n            <th>Withdrawn Amount</th>\\n            <td style=\\\"border-bottom: none;\\\">{{withdrwanAmount| number}}</td>\\n          </tr>\\n          <tr>\\n            <th>Total Amount</th>\\n            <td style=\\\"border-bottom: none;\\\">{{Total_Amount| number}}</td>\\n          </tr>\\n        </tbody>\\n      </nz-table>\\n    </nz-card>\\n  </div>\\n</div>\\n<nz-card>\\n  <nz-list [nzDataSource]=\\\"shopLogs\\\" [nzLoading]=\\\"isLoadingLogs\\\" [nzRenderItem]=\\\"conar\\\" [nzItemLayout]=\\\"'horizontal'\\\">\\n    <ng-template #conar let-item>\\n      <ng-container *ngIf=\\\"item.Type==1\\\">\\n        <nz-list-item [nzContent]=\\\"desc\\\">\\n          <nz-list-item-meta [nzTitle]=\\\"title\\\" nzAvatar=\\\" \\\" [nzDescription]=\\\"content\\\">\\n          </nz-list-item-meta>\\n          <ng-template #title>\\n            <span style=\\\"    color: #00897b;\\\">Amount Credited For Shop billings</span>\\n          </ng-template>\\n          <ng-template #desc>\\n            <a style=\\\"margin-right: 30%\\\">{{item.Amount | number}} Inr (C)</a> {{item.Time | date:'medium'}}\\n          </ng-template>\\n          <ng-template #content>\\n            <b>\\\"{{item.Data.Shop_Name}}\\\"</b>&nbsp; Shop got Total {{item.Amount | number}} Rs For\\n            {{item.Data.Buyer_Name}}'s bill.{{item.Data.Buyer_Name}} purchased {{item.Data.ProductData.Product_Name}} X\\n            {{item.Data.ProductData.Product_Quantity}} at {{item.Data.Shop_Name}}.His total bill is\\n            {{item.Data.ProductData.Product_Sub_Total}} Rs and Bill Number is <b>{{item.Data.BillNumber}}</b>\\n          </ng-template>\\n        </nz-list-item>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"item.Type==2\\\">\\n        <nz-list-item [nzContent]=\\\"desc\\\">\\n          <nz-list-item-meta [nzTitle]=\\\"title\\\" nzAvatar=\\\" \\\" [nzDescription]=\\\"content\\\">\\n          </nz-list-item-meta>\\n          <ng-template #title>\\n            <span style=\\\"    color: #00897b;\\\">Amount Credited For redeem the offers of Buyers</span>\\n          </ng-template>\\n          <ng-template #desc>\\n            <a style=\\\"margin-right: 30%\\\">{{item.Amount | number}} Inr (C)</a> {{item.Time | date:'medium'}}\\n          </ng-template>\\n          <ng-template #content>\\n            <b>\\\"{{item.Data.redeem}}\\\"</b>&nbsp; Sucessfully redeemed his offer at \\\"{{item.Data.Applied_Shop_Details.Shop_Name}}\\\" and offer value is {{item.Data.Buyer_Deduction_Amount}} Rs.And offer Code is {{item.Data.OfferCode}} ,offer message is {{item.Data.Message}}.\\n          </ng-template>\\n        </nz-list-item>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"item.Type==3\\\">\\n        <nz-list-item [nzContent]=\\\"desc\\\">\\n          <nz-list-item-meta [nzTitle]=\\\"title\\\" nzAvatar=\\\" \\\" [nzDescription]=\\\"content\\\">\\n          </nz-list-item-meta>\\n          <ng-template #title>\\n            <span style=\\\"    color: #00897b;\\\">Amount credited For Razorpay Transactions</span>\\n          </ng-template>\\n          <ng-template #desc>\\n            <a style=\\\"margin-right: 30%\\\">{{item.Amount | number}} Inr (C)</a> {{item.Time | date:'medium'}}\\n          </ng-template>\\n          <ng-template #content>\\n           {{item.Amount}}   {{item.Data.currency}} credited through {{item.Data.method}} and transaction id is {{item.Data.id}}.\\n          </ng-template>\\n        </nz-list-item>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"item.Type==4\\\">\\n        <nz-list-item [nzContent]=\\\"desc\\\">\\n          <nz-list-item-meta [nzTitle]=\\\"title\\\" nzAvatar=\\\" \\\" [nzDescription]=\\\"content\\\">\\n          </nz-list-item-meta>\\n          <ng-template #title>\\n            <span style=\\\"color: #ff4500;\\\">Amount Debited for Stock Puchases</span>\\n          </ng-template>\\n          <ng-template #desc>\\n            <a style=\\\"margin-right: 30%;\\\"> <span style=\\\"color: #ff4500;\\\">{{item.Amount | number}} Inr (D)</span></a> {{item.Time | date:'medium'}}\\n          </ng-template>\\n          <ng-template #content>\\n           {{item.Amount}} Inr debited for <a (click)=OnshowStock(item)>stock</a> purchasing and purchase number is {{item.Data.PurchaseNumber}}.\\n          </ng-template>\\n        </nz-list-item>\\n      </ng-container>\\n    </ng-template>\\n  </nz-list>\\n</nz-card>\\n<nz-pagination (nzPageIndexChange)=\\\"onNextPage($event)\\\" [nzPageSize]=\\\"limit\\\" [nzPageIndex]=\\\"currentPage\\\"  [nzTotal]=\\\"totalItem\\\"></nz-pagination>\\n<nz-modal \\n[(nzVisible)]=\\\"isVisibleshopCart\\\" \\nnzTitle=\\\" \\\" \\nnzFooter=\\\" \\\"\\n(nzOnCancel)=\\\"handleCancel()\\\" (nzOnOk)=\\\"handleOk()\\\">\\n  <nz-card [nzTitle]=\\\"shopName +'shop Cart Information'\\\">\\n    \\n    <ng-container *ngFor=\\\"let item of cartInformation; let i=index\\\">\\n      <nz-card nzType=\\\"inner\\\" [nzTitle]=\\\"item.Product_Name\\\">\\n        <div nz-row nzGutter=\\\"16\\\">\\n          <div nz-col class=\\\"gutter-row\\\" nzSpan=\\\"6\\\">\\n            <div class=\\\"gutter-box\\\">Price </div>\\n          </div>\\n          <div nz-col class=\\\"gutter-row\\\" nzSpan=\\\"6\\\">\\n            <div class=\\\"gutter-box\\\">{{item.Product_Price}} Rs</div>\\n          </div>\\n        </div>\\n        <div nz-row nzGutter=\\\"16\\\">\\n          <div nz-col class=\\\"gutter-row\\\" nzSpan=\\\"6\\\">\\n            <div class=\\\"gutter-box\\\">Quantity </div>\\n          </div>\\n          <div nz-col class=\\\"gutter-row\\\" nzSpan=\\\"6\\\">\\n            <div class=\\\"gutter-box\\\">{{item.Product_Quantity}}</div>\\n          </div>\\n        </div>\\n        <div nz-row nzGutter=\\\"16\\\">\\n          <div nz-col class=\\\"gutter-row\\\" nzSpan=\\\"6\\\">\\n            <div class=\\\"gutter-box\\\">Total </div>\\n          </div>\\n          <div nz-col class=\\\"gutter-row\\\" nzSpan=\\\"6\\\">\\n            <div class=\\\"gutter-box\\\">{{item.Product_Sub_Total}} Rs</div>\\n          </div>\\n        </div>\\n      </nz-card>\\n    </ng-container>\\n    \\n    \\n  \\n  </nz-card>\\n</nz-modal>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppService } from 'src/app/app.service';\nimport { NzMessageService } from 'ng-zorro-antd';\n\n@Component({\n  selector: 'app-view-ledger',\n  templateUrl: './view-ledger.component.html',\n  styleUrls: ['./view-ledger.component.css']\n})\nexport class ViewLedgerComponent implements OnInit {\n  totalItem: any;\n  shopLogs: any;\n  sub: any;\n  id: number;\n  shopId: any;\n  shopName: any;\n  shopPhoneNumber: any;\n  Total_Amount: any;\n  withdrwanAmount: any;\n  avilableAmount: any;\n  isLoadingLogs: boolean;\n  isVisibleshopCart: boolean;\n  cartInformation: any=[];\n  limit=this._appService.limit\n  currentPage=1\n  constructor(private route: ActivatedRoute,\n    private _appService: AppService,\n    private nzMessageService: NzMessageService) {}\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.id = +params['id']; // (+) converts string 'id' to a number\nthis.shopId=params.id\nthis.shopName=params.name\nthis.Total_Amount=params.totalAmount\nthis.withdrwanAmount=params.withdrwanAmount\nthis.avilableAmount=params.avilableAmount\nthis.shopPhoneNumber=params.phone\nthis.getLogsByshop(this.shopId,0)\n    });\n  }\n  getLogsByshop(shopid, skip) {\n    this.isLoadingLogs=true\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      ShopID: shopid,\n      skip: skip,\n      limit: this._appService.limit\n    }\n    try {\n\n      this._appService.postMethod('List_All_Shop_Share_Logs', body)\n        .subscribe(resp => {\nthis.isLoadingLogs=false\nif(skip==0){\n  this.currentPage=1\n}\n          if (resp.success) {\n            this.totalItem = resp.extras.Count\n            this.shopLogs = resp.extras.Data\n\n\n          } else {\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) {\n\n    }\n  }\n  onNextPage(event:number){\n    this.currentPage=event\n    let skip=(event-1)*this._appService.limit\n    this.getLogsByshop(this.shopId,skip)\n  }\n   percentage(partialValue, totalValue) {\n    return (100 * partialValue) / totalValue;\n } \n OnshowStock(item){\nthis.cartInformation=item.Data.Cart_Information\n   this.isVisibleshopCart=true\n }\n handleCancel(){\n   this.isVisibleshopCart=false\n }\n handleOk(){\n   this.isVisibleshopCart=false\n }\n}\n","import { SharedModule } from './../../shared.modue';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewLedgerComponent } from './view-ledger.component';\nimport { FormsModule } from '@angular/forms';\nimport { ViewLedgerRoutes } from './view-ledger.routing';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ViewLedgerRoutes,\n    SharedModule,\n    FormsModule\n  ],\n  declarations: [ViewLedgerComponent]\n})\nexport class ViewLedgerModule { }\n","import { ViewLedgerComponent } from './view-ledger.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path:'',component:ViewLedgerComponent },\n];\n\nexport const ViewLedgerRoutes = RouterModule.forChild(routes);\n"],"sourceRoot":""}