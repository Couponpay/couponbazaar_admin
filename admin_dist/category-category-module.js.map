{"version":3,"sources":["webpack:///./src/app/category/category.component.css","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/category/category.module.ts","webpack:///./src/app/category/category.routing.ts"],"names":[],"mappings":"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","file":"category-category-module.js","sourcesContent":["module.exports = \".primary_button{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    background: linear-gradient(90deg, #1976d2 20%, #00dbfe 100%);\\r\\n    border: coral;\\r\\n    color: #fff;\\r\\n    font-weight: 700;\\r\\n    font-size: 17px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2F0ZWdvcnkvY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixNQUFNO0lBQ04sUUFBUTtJQUNSLDZEQUE2RDtJQUM3RCxhQUFhO0lBQ2IsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixlQUFlO0VBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY2F0ZWdvcnkvY2F0ZWdvcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcmltYXJ5X2J1dHRvbntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMTk3NmQyIDIwJSwgIzAwZGJmZSAxMDAlKTtcclxuICAgIGJvcmRlcjogY29yYWw7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgfSJdfQ== */\"","module.exports = \"<div nz-row style=\\\"margin-top: 25px;\\\">\\r\\n  <div nz-col nzSpan=\\\"24\\\">\\r\\n      <button nz-button nzType=\\\"primary\\\" (click)=\\\"open()\\\" class=\\\"primary_button\\\">Add Category</button>\\r\\n      <nz-drawer\\r\\n      [nzBodyStyle]=\\\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\\\"\\r\\n      [nzMaskClosable]=\\\"false\\\"\\r\\n      [nzWidth]=\\\"400\\\"\\r\\n      [nzVisible]=\\\"visible\\\"\\r\\n      nzTitle=\\\"Add Category\\\"\\r\\n      (nzOnClose)=\\\"close()\\\"\\r\\n    >\\r\\n    <form nz-form [formGroup]=\\\"addCategory\\\">\\r\\n        <div nz-row nzGutter=\\\"8\\\">\\r\\n          <div nz-col nzSpan=\\\"24\\\">\\r\\n            <nz-form-item>\\r\\n              <nz-form-label>Category Name</nz-form-label>\\r\\n              <nz-form-control>\\r\\n                <input nz-input formControlName=\\\"Category_Name\\\" placeholder=\\\"please enter Category Name\\\" />\\r\\n                <nz-form-explain *ngIf=\\\"addCategory.get('Category_Name').dirty && addCategory.get('Category_Name').errors\\\">Please\\r\\n                    input your Category Name!</nz-form-explain>\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n          </div>\\r\\n          </div>\\r\\n          <div class=\\\"footer\\\">\\r\\n              <button nz-button nzType=\\\"primary\\\" class=\\\"primary_button1 ant-btn ant-btn-primary\\\"\\r\\n              (click)=\\\"categoryForm()\\\"><span>Submit</span></button>\\r\\n            </div>\\r\\n      </form>\\r\\n    </nz-drawer>\\r\\n    </div>\\r\\n    <div nz-row style=\\\"margin-top: 50px;\\\">\\r\\n        <div nz-col nzSpan=\\\"24\\\">\\r\\n    <nz-table #basicTable nzShowPagination=\\\"false\\\" [nzLoading]=\\\"isloading\\\"\\r\\n     nzLoadingDelay=\\\"1\\\" [nzData]=\\\"ListAllcategoryData\\\"  style=\\\"background: #FFF;margin:30px 0px;\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>S.No</th>\\r\\n          <th>Category Name</th>\\r\\n          <!-- <th>Created at</th>\\r\\n          <th>Status</th> -->\\r\\n          <!-- <th>Edit</th> -->\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <ng-container *ngFor=\\\"let data of ListAllcategoryData;let i=index\\\">\\r\\n          <tr>\\r\\n            <td>{{i+1}}</td>\\r\\n            <td>{{data.Category_Name}}</td>\\r\\n            <!-- <td>{{data.created_at | date:'medium'}}</td>\\r\\n            <td *ngIf=\\\"data.Status==true\\\">Yes</td>\\r\\n            <td *ngIf=\\\"data.Status==false\\\">No</td> -->\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </nz-table>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { AppService } from '../app.service';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css']\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n  addCategory:FormGroup\r\n  isloading: boolean;\r\n  currentPage = 1\r\n  TotalItems: any;\r\n  ListAllcategoryData: any = []\r\n  visible:boolean\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private _appService: AppService,\r\n    private nzMessageService: NzMessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.addCategory = this.fb.group({\r\n      Category_Name: [null, [Validators.required]],\r\n    });\r\n    this.categoryList()\r\n  }\r\n  categoryList() {\r\n    this.isloading = true\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n  \r\n    let userdata = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n    }\r\n    try {\r\n\r\n      this._appService.postMethod('List_All_Category', userdata)\r\n        .subscribe(resp => {\r\n          this.isloading = false\r\n\r\n          if (resp.success) {\r\n            this.ListAllcategoryData = resp.extras.Data\r\n            console.log(this.ListAllcategoryData)\r\n          } else {\r\n            this.isloading = false\r\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n\r\n\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n  }\r\n  open(): void {\r\n    this.visible = true;\r\n    this.addCategory.reset()\r\n  }\r\n  close(): void {\r\n    this.visible = false;\r\n  }\r\n\r\n  categoryForm() {\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      Category_Name: this.addCategory.value.Category_Name,\r\n    }\r\n    try {\r\n      this._appService.postMethod('Add_Category', body)\r\n        .subscribe(resp => {\r\n          if (resp.success) {\r\n             this.addCategory.reset()\r\n             this.visible = false;\r\n             this.categoryList()\r\n            this.nzMessageService.success('Category Added sucessfully')\r\n          } else {\r\n            this.nzMessageService.create('error', 'Category Exists');\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) {\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CategoryComponent } from './category.component';\r\nimport { CategoryRoutes } from './category.routing';\r\nimport { SharedModule } from '../shared.modue';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CategoryRoutes,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [CategoryComponent]\r\n})\r\nexport class CategoryModule { }\r\n","\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CategoryComponent } from './category.component';\r\n\r\nconst routes: Routes = [\r\n  { path:'',component:CategoryComponent },\r\n];\r\n\r\nexport const CategoryRoutes = RouterModule.forChild(routes);\r\n"],"sourceRoot":""}