{"version":3,"sources":["webpack:///./src/app/products/add-product/add-product.component.css","webpack:///./src/app/products/add-product/add-product.component.html","webpack:///./src/app/products/add-product/add-product.component.ts","webpack:///./src/app/products/add-product/add-product.module.ts","webpack:///./src/app/products/add-product/add-product.routing.ts"],"names":[],"mappings":"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","file":"add-product-add-product-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2FkZC1wcm9kdWN0L2FkZC1wcm9kdWN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<nz-card style=\\\"width:600px;\\\" nzTitle=\\\"Add Product\\\">\\r\\n  <form nz-form #ProductRegistrationForm=\\\"ngForm\\\">\\r\\n    <nz-form-item>\\r\\n      \\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"selectCategory\\\">Select Category</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <nz-select  nzAllowClear nzPlaceHolder=\\\"Select Category\\\"  [(ngModel)]=\\\"Category\\\" name=\\\"Select_Category\\\">\\r\\n          <nz-option *ngFor=\\\"let item of categoryList; let i=index\\\" [nzValue]=\\\"item\\\"\\r\\n            [nzLabel]=\\\"item.Category_Name\\\"></nz-option>\\r\\n        </nz-select>\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Product Name</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <input id=\\\"Product_Name\\\" required type=\\\"text\\\" placeholder=\\\"Product Name\\\" nz-input ngModel name=\\\"Product_Name\\\">\\r\\n\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Product Weight(In Kg)</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <input id=\\\"Product_Weight\\\" required type=\\\"text\\\" placeholder=\\\"Product Weight\\\" nz-input ngModel name=\\\"Product_Weight\\\">\\r\\n\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Product Description</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <input required type=\\\"text\\\" placeholder=\\\"Product Description\\\" nz-input ngModel name=\\\"Product_Description\\\">\\r\\n\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Introducer Price</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <input id=\\\"Introducer_Share\\\" required type=\\\"text\\\" placeholder=\\\"Introducer  Price\\\" nz-input ngModel\\r\\n          ZeronumbersOnly name=\\\"Introducer_Share\\\">\\r\\n\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item style=\\\"  margin-bottom: 0px;\\\">\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Buyer Price</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <a (click)=\\\"onClickLevelsDrawer()\\\">Click to add Buyer Level Price</a>\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item style=\\\"  margin-top: 0px;\\\">\\r\\n      <nz-form-label [nzSpan]=\\\"8\\\" nzRequired>Buyer Level Price </nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <code *ngFor=\\\"let item of levels; let i=index\\\">{{item}},</code>\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Shop Price</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <input id=\\\"Shop_Share\\\" required type=\\\"text\\\" ZeronumbersOnly placeholder=\\\"Shop  Price \\\" nz-input ngModel\\r\\n          name=\\\"Shop_Share\\\">\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Company Price</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <input id=\\\"Company_Share\\\" required type=\\\"text\\\" ZeronumbersOnly placeholder=\\\"Company  Price\\\" nz-input ngModel\\r\\n          name=\\\"Company_Share\\\">\\r\\n\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Product Price</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <button nz-button nzType=\\\"link\\\" style=\\\"    color: green;\\r\\n        font-size: 18px;\\r\\n        font-weight: 600;\\\">\\r\\n          {{(+ProductRegistrationForm.value.Introducer_Share)+(+ProductRegistrationForm.value.Shop_Share)+(+ProductRegistrationForm.value.Company_Share) + (+buyerLeveShares)}}\\r\\n        </button>\\r\\n\\r\\n        <!-- <input   {{getsum(ProductRegistrationForm.value)}}  id=\\\"Company_Share\\\" readonly required type=\\\"text\\\" ZeronumbersOnly placeholder=\\\"Company  Price\\\" nz-input ngModel\\r\\n          name=\\\"Company_Share\\\"> -->\\r\\n\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"Product_HST\\\">HSN Code</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <input id=\\\"Product_HST\\\" required type=\\\"text\\\" placeholder=\\\"Enter HSN Code\\\" nz-input ngModel\\r\\n          name=\\\"Product_HST\\\"\\r\\n          oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\">\\r\\n\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"Product_GST\\\">GST Percentage</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <input id=\\\"Product_GST\\\" required type=\\\"text\\\" placeholder=\\\"Enter GST Percentage\\\" nz-input ngModel\\r\\n          name=\\\"Product_GST\\\"\\r\\n          oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\">\\r\\n\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"Product_Quantity\\\">Quantity</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <input id=\\\"Product_Quantity\\\" required type=\\\"text\\\"  placeholder=\\\"Enter Quantity\\\" nz-input ngModel\\r\\n          name=\\\"Product_Quantity\\\" ZeronumbersOnly>\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\"> Product Image</nz-form-label>\\r\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n        <button nz-button nzType=\\\"link\\\" (click)=\\\"onUploadProductImage(1)\\\">Upload Product Image</button>\\r\\n      </nz-form-control>\\r\\n\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n\\r\\n      <nz-form-control nzOffset=\\\"8\\\" [nzSpan]=\\\"12\\\" *ngIf=\\\"ProductImageData.length>0\\\"><a target=\\\"_blank\\\"\\r\\n          [attr.href]=\\\"ProductImageData[0].ImageOriginal\\\">Click To view Image</a></nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item>\\r\\n      <nz-form-control nzOffset=\\\"8\\\" [nzSpan]=\\\"12\\\">\\r\\n        <button nz-button nzType=\\\"link\\\" (click)=\\\"onUploadProductImage(2)\\\" (click)=\\\"isImageUploading=true\\\">Upload\\r\\n          Product Image Gallery</button>\\r\\n\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item *ngFor=\\\"let item of productGallryData; let i=index\\\">\\r\\n      <ng-container *ngIf=\\\"productGallryData.length>0\\\">\\r\\n        <nz-form-control nzOffset=\\\"8\\\" [nzSpan]=\\\"12\\\">\\r\\n          <div nz-row [nzGutter]=\\\"16\\\">\\r\\n            <div nz-col nzSpan=\\\"18\\\">\\r\\n              <span><a target=\\\"_blank\\\" [attr.href]=\\\"item.ImageOriginal\\\">\\r\\n                  Click to watch gallery image {{item.SNo}}</a></span>\\r\\n            </div>\\r\\n            <div nz-col nzSpan=\\\"4\\\">\\r\\n              <span style=\\\"cursor: pointer;\\\" (click)=\\\"onRemove(item,i)\\\"> Remove <i nz-icon nzType=\\\"close\\\"></i></span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </nz-form-control>\\r\\n      </ng-container>\\r\\n    </nz-form-item>\\r\\n    <nz-form-item style=\\\"    text-align: center;\\\">\\r\\n      <nz-form-control>\\r\\n        <button nz-button nzType=\\\"primary\\\" [disabled]=\\\"!ProductRegistrationForm.valid\\\"\\r\\n          (click)=\\\"onSubmitProduct(ProductRegistrationForm)\\\">Submit</button>\\r\\n      </nz-form-control>\\r\\n    </nz-form-item>\\r\\n  </form>\\r\\n</nz-card>\\r\\n<nz-drawer [nzBodyStyle]=\\\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\\\" [nzWidth]=\\\"720\\\"\\r\\n  [nzVisible]=\\\"isImageUploading\\\" nzTitle=\\\"Upload\\\" (nzOnClose)=\\\"onCloseImageDrawer()\\\">\\r\\n  <nz-form-item *ngIf=\\\"uploadingType==2\\\">\\r\\n    <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n      <input required type=\\\"text\\\" placeholder=\\\"S.No\\\" numbersOnly nz-input [(ngModel)]=\\\"SNo\\\">\\r\\n    </nz-form-control>\\r\\n  </nz-form-item>\\r\\n  <div>\\r\\n    <input type=\\\"file\\\" accept=\\\"image/gif, image/jpeg, image/png\\\" #myInput (change)=\\\"fileChangeEvent($event)\\\" />\\r\\n    <image-cropper [imageChangedEvent]=\\\"imageChangedEvent\\\" [maintainAspectRatio]=\\\"true\\\" [aspectRatio]=\\\"3 / 3\\\"\\r\\n      [resizeToWidth]=\\\"128\\\" [cropperMinWidth]=\\\"128\\\" [onlyScaleDown]=\\\"true\\\" [roundCropper]=\\\"false\\\" format=\\\"png\\\"\\r\\n      outputType=\\\"base64\\\" (imageCropped)=\\\"imageCropped($event)\\\" (imageLoaded)=\\\"imageLoaded()\\\"\\r\\n      (cropperReady)=\\\"cropperReady()\\\" (loadImageFailed)=\\\"loadImageFailed()\\\"\\r\\n      [style.display]=\\\"showCropper ? null : 'none'\\\" [alignImage]=\\\"'left'\\\"></image-cropper>\\r\\n  </div>\\r\\n  <img [src]=\\\"croppedImage\\\" />\\r\\n  <div class=\\\"footer\\\" style=\\\"margin-top: 10px;\\\" *ngIf=\\\"croppedImage.length>0\\\">\\r\\n    <button type=\\\"button\\\" (click)=\\\"onCloseImageDrawer()\\\" class=\\\"ant-btn\\\"\\r\\n      style=\\\"margin-right: 8px;\\\"><span>Cancel</span></button>\\r\\n    <button type=\\\"button\\\" nz-button nzType=\\\"primary\\\" [nzLoading]=\\\"isUploadBtnLoading\\\" class=\\\"ant-btn ant-btn-primary\\\"\\r\\n      (click)=\\\"onSucessCroping()\\\"><span>Upload to Server</span></button>\\r\\n  </div>\\r\\n</nz-drawer>\\r\\n<nz-drawer [nzBodyStyle]=\\\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\\\"\\r\\n  [nzMaskClosable]=\\\"false\\\" [nzWidth]=\\\"720\\\" [nzVisible]=\\\"isLevelsDrawer\\\" nzTitle=\\\" \\\"\\r\\n  (nzOnClose)=\\\"OnClosebyerLeveDrawer()\\\">\\r\\n  <div>\\r\\n\\r\\n    <div nz-row nzGutter=\\\"8\\\">\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-label>Level 1</nz-form-label>\\r\\n          <nz-form-control>\\r\\n            <input nz-input [(ngModel)]=\\\"levels[0]\\\" placeholder=\\\"\\\" />\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </div>\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-label>Level 2</nz-form-label>\\r\\n          <nz-form-control>\\r\\n            <input nz-input [(ngModel)]=\\\"levels[1]\\\" placeholder=\\\"\\\" />\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </div>\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-label>Level 3</nz-form-label>\\r\\n          <nz-form-control>\\r\\n            <input nz-input [(ngModel)]=\\\"levels[2]\\\" placeholder=\\\"\\\" />\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div nz-row nzGutter=\\\"8\\\">\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-label>Level 4</nz-form-label>\\r\\n          <nz-form-control>\\r\\n            <input nz-input [(ngModel)]=\\\"levels[3]\\\" placeholder=\\\"\\\" />\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </div>\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-label>Level 5</nz-form-label>\\r\\n          <nz-form-control>\\r\\n            <input nz-input [(ngModel)]=\\\"levels[4]\\\" placeholder=\\\"\\\" />\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </div>\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-label>Level 6</nz-form-label>\\r\\n          <nz-form-control>\\r\\n            <input nz-input [(ngModel)]=\\\"levels[5]\\\" placeholder=\\\"\\\" />\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div nz-row nzGutter=\\\"8\\\">\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-label>Level 7</nz-form-label>\\r\\n          <nz-form-control>\\r\\n            <input nz-input [(ngModel)]=\\\"levels[6]\\\" placeholder=\\\"\\\" />\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </div>\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-label>Level 8</nz-form-label>\\r\\n          <nz-form-control>\\r\\n            <input nz-input [(ngModel)]=\\\"levels[7]\\\" placeholder=\\\"\\\" />\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </div>\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-label>Level 9</nz-form-label>\\r\\n          <nz-form-control>\\r\\n            <input nz-input [(ngModel)]=\\\"levels[8]\\\" placeholder=\\\"\\\" />\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div nz-row nzGutter=\\\"8\\\">\\r\\n      <div nz-col nzSpan=\\\"8\\\">\\r\\n        <button type=\\\"button\\\" nz-button nzType=\\\"primary\\\" class=\\\"ant-btn ant-btn-primary\\\"\\r\\n          (click)=\\\"OnClosebyerLeveDrawer()\\\"><span>Update</span></button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</nz-drawer>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { ImageCropperComponent, ImageCroppedEvent } from 'ngx-image-cropper';\r\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-add-product',\r\n  templateUrl: './add-product.component.html',\r\n  styleUrls: ['./add-product.component.css']\r\n})\r\nexport class AddProductComponent implements OnInit {\r\n  imageChangedEvent: any = '';\r\n  croppedImage: any = '';\r\n  showCropper = false;\r\n  buyerLeveShares = 0\r\n  @ViewChild('myInput') myInputVariable: ElementRef;\r\n  @ViewChild(ImageCropperComponent) imageCropper: ImageCropperComponent;\r\n  isImageUploading: boolean;\r\n  isUploadBtnLoading: boolean;\r\n  productImageUrl: string;\r\n  uploadingType: number;\r\n  ProductImageData = [];\r\n  productGallryData = [];\r\n  SNo: number;\r\n  Category:any\r\n  levels: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  isLevelsDrawer: boolean;\r\n  categoryList: any;\r\n  constructor(private _appService: AppService,\r\n    private nzMessageService: NzMessageService) { }\r\n  ngOnInit() {\r\n    this.getCategoryList()\r\n  }\r\n  onSubmitProduct(productForm: NgForm) {\r\n    console.log(productForm)\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      Product_Name: productForm.value.Product_Name,\r\n      Product_Weight: productForm.value.Product_Weight,\r\n      Product_Description: productForm.value.Product_Description,\r\n      CategoryID:productForm.value.Select_Category.CategoryID,\r\n\r\n      Introducer_Price: productForm.value.Introducer_Share,\r\n      Buyer_Price_Array: this.levels.map(Number),\r\n      Shop_Price: productForm.value.Shop_Share,\r\n      Company_Price: productForm.value.Company_Share,\r\n\r\n      ImageID: this.ProductImageData[0].ImageID,\r\n      All_ImageID_Array: this.productGallryData,\r\n      Product_HST: productForm.value.Product_HST,\r\n      Product_GST: productForm.value.Product_GST,\r\n      Product_Quantity: productForm.value.Product_Quantity\r\n    }\r\n    console.log(\"byy\"+JSON.stringify(body))\r\n    try {\r\n\r\n      this._appService.postMethod('Add_Product', body)\r\n        .subscribe(resp => {\r\n          if (resp.success) {\r\n            productForm.resetForm()\r\n            this.productGallryData = []\r\n            this.SNo = null\r\n            this.levels=[]\r\n            this.ProductImageData = []\r\n            this.onCloseImageDrawer()\r\n            this.nzMessageService.success('Product Added sucessfully')\r\n\r\n          } else {\r\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n\r\n\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n  fileChangeEvent(event: any): void {\r\n    this.imageChangedEvent = event;\r\n  }\r\n  imageCropped(event: ImageCroppedEvent) {\r\n    this.croppedImage = event.base64;\r\n    // console.log(event);\r\n  }\r\n  imageLoaded() {\r\n    this.showCropper = true;\r\n    console.log('Image loaded')\r\n  }\r\n  cropperReady() {\r\n    console.log('Cropper ready')\r\n  }\r\n  loadImageFailed() {\r\n    console.log('Load failed');\r\n  }\r\n  onUploadProductImage(type: number) {\r\n    this.uploadingType = type\r\n    this.isImageUploading = true\r\n    if (type == 1) {\r\n\r\n    } else if (type == 2) {\r\n\r\n    }\r\n\r\n\r\n  }\r\n  onCloseImageDrawer() {\r\n    this.imageChangedEvent = null\r\n    this.myInputVariable.nativeElement.value = \"\";\r\n    this.isImageUploading = false\r\n    this.isUploadBtnLoading = false\r\n    this.croppedImage = ''\r\n    this.SNo = null\r\n  }\r\n  onSucessCroping() {\r\n    this.isUploadBtnLoading = true\r\n    let imag;\r\n    let str: string = this.croppedImage\r\n    let st4;\r\n    if (str.indexOf('data:image/jpeg;base64,') != -1) {\r\n      st4 = str.replace('data:image/jpeg;base64,', '')\r\n    } else {\r\n      st4 = str.replace('data:image/png;base64,', '')\r\n    }\r\n\r\n    const imageBlob = this.dataURItoBlob(st4);\r\n    const imageFile = new File([imageBlob], 'imageName.jpeg', { type: 'image/jpeg' });\r\n    this.send(imageFile)\r\n  }\r\n  dataURItoBlob(dataURI) {\r\n    const byteString = window.atob(dataURI);\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const int8Array = new Uint8Array(arrayBuffer);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      int8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([int8Array], { type: 'image/jpeg' });\r\n    return blob;\r\n  }\r\n  send(imageFile) {\r\n    const formData = new FormData();\r\n    formData.append('image', imageFile);\r\n    const req = new HttpRequest('POST', this._appService.ImageUpload_Url + 'Upload_Image', formData, {\r\n      reportProgress: true,\r\n      withCredentials: false\r\n    });\r\n    this._appService.onImageUpload(req).subscribe(\r\n      (event: any) => {\r\n        if (event instanceof HttpResponse) {\r\n          this.isUploadBtnLoading = false\r\n\r\n          if (this.uploadingType == 1) {\r\n            this.ProductImageData = []\r\n            this.ProductImageData.push(event.body.extras)\r\n            this.onCloseImageDrawer()\r\n            console.log(this.ProductImageData)\r\n          }\r\n          else if (this.uploadingType == 2) {\r\n            let SNoIndex = this.productGallryData.findIndex((item) => item.SNo == this.SNo)\r\n            if (SNoIndex == -1) {\r\n              this.productGallryData.push({\r\n                SNo: this.SNo,\r\n                ImageID: event.body.extras.ImageID,\r\n                ImageOriginal: event.body.extras.ImageOriginal\r\n              })\r\n              this.onCloseImageDrawer()\r\n\r\n            } else {\r\n              this.nzMessageService.warning('Serial Number already Existed')\r\n            }\r\n\r\n\r\n            console.log(this.productGallryData, 'productGallryData')\r\n          }\r\n          // this.imageId = event.body.extras.ImageID\r\n          // this.addImagetoServer()\r\n\r\n        } else if (event instanceof HttpResponse) {\r\n\r\n        }\r\n      },\r\n      err => {\r\n        //item.onError!(err, item.file!);\r\n      }\r\n    );\r\n  }\r\n  onRemove(data, index) {\r\n    let SNoIndex = this.productGallryData.findIndex((item) => item.SNo == data.SNo)\r\n    this.productGallryData.splice(SNoIndex, 1)\r\n  }\r\n  onClickLevelsDrawer() {\r\n    this.isLevelsDrawer = true\r\n  }\r\n  OnClosebyerLeveDrawer() {\r\n    console.log(this.levels)\r\n    this.buyerLeveShares = 0\r\n    this.isLevelsDrawer = false\r\n    this.levels.forEach((item) => {\r\n\r\n      this.buyerLeveShares = (+item) + this.buyerLeveShares\r\n    })\r\n  }\r\n  getCategoryList() {\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      Whether_Status_Filter: true,\r\n      Status: true,\r\n      skip: 0,\r\n      limit: 10000\r\n    }\r\n    try {\r\n      this._appService.postMethod('List_All_Category', body)\r\n        .subscribe(resp => {\r\n          if (resp.success) {\r\n            this.categoryList = resp.extras.Data\r\n          } else {\r\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddProductComponent } from './add-product.component';\r\nimport { AddProductRoutes } from './add-product.routing';\r\nimport { SharedModule } from 'src/app/shared.modue';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AddProductRoutes,\r\n    SharedModule,\r\n    FormsModule,\r\n    ImageCropperModule\r\n\r\n  ],\r\n  declarations: [AddProductComponent]\r\n})\r\nexport class AddProductModule { }\r\n","import { AddProductComponent } from './add-product.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path:'',component:AddProductComponent },\r\n];\r\n\r\nexport const AddProductRoutes = RouterModule.forChild(routes);\r\n"],"sourceRoot":""}