{"version":3,"sources":["webpack:///./src/app/products/add-product/add-product.component.css","webpack:///./src/app/products/add-product/add-product.component.html","webpack:///./src/app/products/add-product/add-product.component.ts","webpack:///./src/app/products/add-product/add-product.module.ts","webpack:///./src/app/products/add-product/add-product.routing.ts"],"names":[],"mappings":"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","file":"add-product-add-product-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2FkZC1wcm9kdWN0L2FkZC1wcm9kdWN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<nz-card style=\\\"width:600px;\\\" nzTitle=\\\"Add Product\\\">\\n  <form nz-form #ProductRegistrationForm=\\\"ngForm\\\">\\n    <nz-form-item>\\n      \\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"selectCategory\\\">Select Category</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <nz-select  nzAllowClear nzPlaceHolder=\\\"Select Category\\\"  [(ngModel)]=\\\"Category\\\" name=\\\"Select_Category\\\">\\n          <nz-option *ngFor=\\\"let item of categoryList; let i=index\\\" [nzValue]=\\\"item\\\"\\n            [nzLabel]=\\\"item.Category_Name\\\"></nz-option>\\n        </nz-select>\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Product Name</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <input id=\\\"Product_Name\\\" required type=\\\"text\\\" placeholder=\\\"Product Name\\\" nz-input ngModel name=\\\"Product_Name\\\">\\n\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Product Weight(In Kg)</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <input id=\\\"Product_Weight\\\" required type=\\\"text\\\" placeholder=\\\"Product Weight\\\" nz-input ngModel name=\\\"Product_Weight\\\">\\n\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Product Description</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <input required type=\\\"text\\\" placeholder=\\\"Product Description\\\" nz-input ngModel name=\\\"Product_Description\\\">\\n\\n      </nz-form-control>\\n    </nz-form-item>\\n\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Introducer Price</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <input id=\\\"Introducer_Share\\\" required type=\\\"text\\\" placeholder=\\\"Introducer  Price\\\" nz-input ngModel\\n          ZeronumbersOnly name=\\\"Introducer_Share\\\">\\n\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item style=\\\"  margin-bottom: 0px;\\\">\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Buyer Price</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <a (click)=\\\"onClickLevelsDrawer()\\\">Click to add Buyer Level Price</a>\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item style=\\\"  margin-top: 0px;\\\">\\n      <nz-form-label [nzSpan]=\\\"8\\\" nzRequired>Buyer Level Price </nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <code *ngFor=\\\"let item of levels; let i=index\\\">{{item}},</code>\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Shop Price</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <input id=\\\"Shop_Share\\\" required type=\\\"text\\\" ZeronumbersOnly placeholder=\\\"Shop  Price \\\" nz-input ngModel\\n          name=\\\"Shop_Share\\\">\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Company Price</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <input id=\\\"Company_Share\\\" required type=\\\"text\\\" ZeronumbersOnly placeholder=\\\"Company  Price\\\" nz-input ngModel\\n          name=\\\"Company_Share\\\">\\n\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Product Price</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <button nz-button nzType=\\\"link\\\" style=\\\"    color: green;\\n        font-size: 18px;\\n        font-weight: 600;\\\">\\n          {{(+ProductRegistrationForm.value.Introducer_Share)+(+ProductRegistrationForm.value.Shop_Share)+(+ProductRegistrationForm.value.Company_Share) + (+buyerLeveShares)}}\\n        </button>\\n\\n        <!-- <input   {{getsum(ProductRegistrationForm.value)}}  id=\\\"Company_Share\\\" readonly required type=\\\"text\\\" ZeronumbersOnly placeholder=\\\"Company  Price\\\" nz-input ngModel\\n          name=\\\"Company_Share\\\"> -->\\n\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"Product_HST\\\">HSN Code</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <input id=\\\"Product_HST\\\" required type=\\\"text\\\" placeholder=\\\"Enter HSN Code\\\" nz-input ngModel\\n          name=\\\"Product_HST\\\"\\n          oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\">\\n\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"Product_GST\\\">GST Percentage</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <input id=\\\"Product_GST\\\" required type=\\\"text\\\" placeholder=\\\"Enter GST Percentage\\\" nz-input ngModel\\n          name=\\\"Product_GST\\\"\\n          oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\">\\n\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"Product_Quantity\\\">Quantity</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <input id=\\\"Product_Quantity\\\" required type=\\\"text\\\"  placeholder=\\\"Enter Quantity\\\" nz-input ngModel\\n          name=\\\"Product_Quantity\\\" ZeronumbersOnly>\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\"> Product Image</nz-form-label>\\n      <nz-form-control [nzSpan]=\\\"12\\\">\\n        <button nz-button nzType=\\\"link\\\" (click)=\\\"onUploadProductImage(1)\\\">Upload Product Image</button>\\n      </nz-form-control>\\n\\n    </nz-form-item>\\n    <nz-form-item>\\n\\n      <nz-form-control nzOffset=\\\"8\\\" [nzSpan]=\\\"12\\\" *ngIf=\\\"ProductImageData.length>0\\\"><a target=\\\"_blank\\\"\\n          [attr.href]=\\\"ProductImageData[0].ImageOriginal\\\">Click To view Image</a></nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item>\\n      <nz-form-control nzOffset=\\\"8\\\" [nzSpan]=\\\"12\\\">\\n        <button nz-button nzType=\\\"link\\\" (click)=\\\"onUploadProductImage(2)\\\" (click)=\\\"isImageUploading=true\\\">Upload\\n          Product Image Gallery</button>\\n\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item *ngFor=\\\"let item of productGallryData; let i=index\\\">\\n      <ng-container *ngIf=\\\"productGallryData.length>0\\\">\\n        <nz-form-control nzOffset=\\\"8\\\" [nzSpan]=\\\"12\\\">\\n          <div nz-row [nzGutter]=\\\"16\\\">\\n            <div nz-col nzSpan=\\\"18\\\">\\n              <span><a target=\\\"_blank\\\" [attr.href]=\\\"item.ImageOriginal\\\">\\n                  Click to watch gallery image {{item.SNo}}</a></span>\\n            </div>\\n            <div nz-col nzSpan=\\\"4\\\">\\n              <span style=\\\"cursor: pointer;\\\" (click)=\\\"onRemove(item,i)\\\"> Remove <i nz-icon nzType=\\\"close\\\"></i></span>\\n            </div>\\n          </div>\\n        </nz-form-control>\\n      </ng-container>\\n    </nz-form-item>\\n    <nz-form-item style=\\\"    text-align: center;\\\">\\n      <nz-form-control>\\n        <button nz-button nzType=\\\"primary\\\" [disabled]=\\\"!ProductRegistrationForm.valid\\\"\\n          (click)=\\\"onSubmitProduct(ProductRegistrationForm)\\\">Submit</button>\\n      </nz-form-control>\\n    </nz-form-item>\\n  </form>\\n</nz-card>\\n<nz-drawer [nzBodyStyle]=\\\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\\\" [nzWidth]=\\\"720\\\"\\n  [nzVisible]=\\\"isImageUploading\\\" nzTitle=\\\"Upload\\\" (nzOnClose)=\\\"onCloseImageDrawer()\\\">\\n  <nz-form-item *ngIf=\\\"uploadingType==2\\\">\\n    <nz-form-control [nzSpan]=\\\"12\\\">\\n      <input required type=\\\"text\\\" placeholder=\\\"S.No\\\" numbersOnly nz-input [(ngModel)]=\\\"SNo\\\">\\n    </nz-form-control>\\n  </nz-form-item>\\n  <div>\\n    <input type=\\\"file\\\" accept=\\\"image/gif, image/jpeg, image/png\\\" #myInput (change)=\\\"fileChangeEvent($event)\\\" />\\n    <image-cropper [imageChangedEvent]=\\\"imageChangedEvent\\\" [maintainAspectRatio]=\\\"true\\\" [aspectRatio]=\\\"3 / 3\\\"\\n      [resizeToWidth]=\\\"128\\\" [cropperMinWidth]=\\\"128\\\" [onlyScaleDown]=\\\"true\\\" [roundCropper]=\\\"false\\\" format=\\\"png\\\"\\n      outputType=\\\"base64\\\" (imageCropped)=\\\"imageCropped($event)\\\" (imageLoaded)=\\\"imageLoaded()\\\"\\n      (cropperReady)=\\\"cropperReady()\\\" (loadImageFailed)=\\\"loadImageFailed()\\\"\\n      [style.display]=\\\"showCropper ? null : 'none'\\\" [alignImage]=\\\"'left'\\\"></image-cropper>\\n  </div>\\n  <img [src]=\\\"croppedImage\\\" />\\n  <div class=\\\"footer\\\" style=\\\"margin-top: 10px;\\\" *ngIf=\\\"croppedImage.length>0\\\">\\n    <button type=\\\"button\\\" (click)=\\\"onCloseImageDrawer()\\\" class=\\\"ant-btn\\\"\\n      style=\\\"margin-right: 8px;\\\"><span>Cancel</span></button>\\n    <button type=\\\"button\\\" nz-button nzType=\\\"primary\\\" [nzLoading]=\\\"isUploadBtnLoading\\\" class=\\\"ant-btn ant-btn-primary\\\"\\n      (click)=\\\"onSucessCroping()\\\"><span>Upload to Server</span></button>\\n  </div>\\n</nz-drawer>\\n<nz-drawer [nzBodyStyle]=\\\"{ height: 'calc(100% - 55px)', overflow: 'auto', 'padding-bottom': '53px' }\\\"\\n  [nzMaskClosable]=\\\"false\\\" [nzWidth]=\\\"720\\\" [nzVisible]=\\\"isLevelsDrawer\\\" nzTitle=\\\" \\\"\\n  (nzOnClose)=\\\"OnClosebyerLeveDrawer()\\\">\\n  <div>\\n\\n    <div nz-row nzGutter=\\\"8\\\">\\n      <div nz-col nzSpan=\\\"8\\\">\\n        <nz-form-item>\\n          <nz-form-label>Level 1</nz-form-label>\\n          <nz-form-control>\\n            <input nz-input [(ngModel)]=\\\"levels[0]\\\" placeholder=\\\"\\\" />\\n          </nz-form-control>\\n        </nz-form-item>\\n      </div>\\n      <div nz-col nzSpan=\\\"8\\\">\\n        <nz-form-item>\\n          <nz-form-label>Level 2</nz-form-label>\\n          <nz-form-control>\\n            <input nz-input [(ngModel)]=\\\"levels[1]\\\" placeholder=\\\"\\\" />\\n          </nz-form-control>\\n        </nz-form-item>\\n      </div>\\n      <div nz-col nzSpan=\\\"8\\\">\\n        <nz-form-item>\\n          <nz-form-label>Level 3</nz-form-label>\\n          <nz-form-control>\\n            <input nz-input [(ngModel)]=\\\"levels[2]\\\" placeholder=\\\"\\\" />\\n          </nz-form-control>\\n        </nz-form-item>\\n      </div>\\n    </div>\\n    <div nz-row nzGutter=\\\"8\\\">\\n      <div nz-col nzSpan=\\\"8\\\">\\n        <nz-form-item>\\n          <nz-form-label>Level 4</nz-form-label>\\n          <nz-form-control>\\n            <input nz-input [(ngModel)]=\\\"levels[3]\\\" placeholder=\\\"\\\" />\\n          </nz-form-control>\\n        </nz-form-item>\\n      </div>\\n      <div nz-col nzSpan=\\\"8\\\">\\n        <nz-form-item>\\n          <nz-form-label>Level 5</nz-form-label>\\n          <nz-form-control>\\n            <input nz-input [(ngModel)]=\\\"levels[4]\\\" placeholder=\\\"\\\" />\\n          </nz-form-control>\\n        </nz-form-item>\\n      </div>\\n      <div nz-col nzSpan=\\\"8\\\">\\n        <nz-form-item>\\n          <nz-form-label>Level 6</nz-form-label>\\n          <nz-form-control>\\n            <input nz-input [(ngModel)]=\\\"levels[5]\\\" placeholder=\\\"\\\" />\\n          </nz-form-control>\\n        </nz-form-item>\\n      </div>\\n    </div>\\n    <div nz-row nzGutter=\\\"8\\\">\\n      <div nz-col nzSpan=\\\"8\\\">\\n        <nz-form-item>\\n          <nz-form-label>Level 7</nz-form-label>\\n          <nz-form-control>\\n            <input nz-input [(ngModel)]=\\\"levels[6]\\\" placeholder=\\\"\\\" />\\n          </nz-form-control>\\n        </nz-form-item>\\n      </div>\\n      <div nz-col nzSpan=\\\"8\\\">\\n        <nz-form-item>\\n          <nz-form-label>Level 8</nz-form-label>\\n          <nz-form-control>\\n            <input nz-input [(ngModel)]=\\\"levels[7]\\\" placeholder=\\\"\\\" />\\n          </nz-form-control>\\n        </nz-form-item>\\n      </div>\\n      <div nz-col nzSpan=\\\"8\\\">\\n        <nz-form-item>\\n          <nz-form-label>Level 9</nz-form-label>\\n          <nz-form-control>\\n            <input nz-input [(ngModel)]=\\\"levels[8]\\\" placeholder=\\\"\\\" />\\n          </nz-form-control>\\n        </nz-form-item>\\n      </div>\\n    </div>\\n    <div nz-row nzGutter=\\\"8\\\">\\n      <div nz-col nzSpan=\\\"8\\\">\\n        <button type=\\\"button\\\" nz-button nzType=\\\"primary\\\" class=\\\"ant-btn ant-btn-primary\\\"\\n          (click)=\\\"OnClosebyerLeveDrawer()\\\"><span>Update</span></button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</nz-drawer>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AppService } from 'src/app/app.service';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { ImageCropperComponent, ImageCroppedEvent } from 'ngx-image-cropper';\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n  showCropper = false;\n  buyerLeveShares = 0\n  @ViewChild('myInput') myInputVariable: ElementRef;\n  @ViewChild(ImageCropperComponent) imageCropper: ImageCropperComponent;\n  isImageUploading: boolean;\n  isUploadBtnLoading: boolean;\n  productImageUrl: string;\n  uploadingType: number;\n  ProductImageData = [];\n  productGallryData = [];\n  SNo: number;\n  Category:any\n  levels: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0]\n  isLevelsDrawer: boolean;\n  categoryList: any;\n  constructor(private _appService: AppService,\n    private nzMessageService: NzMessageService) { }\n  ngOnInit() {\n    this.getCategoryList()\n  }\n  onSubmitProduct(productForm: NgForm) {\n    console.log(productForm)\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      Product_Name: productForm.value.Product_Name,\n      Product_Weight: productForm.value.Product_Weight,\n      Product_Description: productForm.value.Product_Description,\n      CategoryID:productForm.value.Select_Category.CategoryID,\n\n      Introducer_Price: productForm.value.Introducer_Share,\n      Buyer_Price_Array: this.levels.map(Number),\n      Shop_Price: productForm.value.Shop_Share,\n      Company_Price: productForm.value.Company_Share,\n\n      ImageID: this.ProductImageData[0].ImageID,\n      All_ImageID_Array: this.productGallryData,\n      Product_HST: productForm.value.Product_HST,\n      Product_GST: productForm.value.Product_GST,\n      Product_Quantity: productForm.value.Product_Quantity\n    }\n    console.log(\"byy\"+JSON.stringify(body))\n    try {\n\n      this._appService.postMethod('Add_Product', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            productForm.resetForm()\n            this.productGallryData = []\n            this.SNo = null\n            this.levels=[]\n            this.ProductImageData = []\n            this.onCloseImageDrawer()\n            this.nzMessageService.success('Product Added sucessfully')\n\n          } else {\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) {\n\n    }\n  }\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    // console.log(event);\n  }\n  imageLoaded() {\n    this.showCropper = true;\n    console.log('Image loaded')\n  }\n  cropperReady() {\n    console.log('Cropper ready')\n  }\n  loadImageFailed() {\n    console.log('Load failed');\n  }\n  onUploadProductImage(type: number) {\n    this.uploadingType = type\n    this.isImageUploading = true\n    if (type == 1) {\n\n    } else if (type == 2) {\n\n    }\n\n\n  }\n  onCloseImageDrawer() {\n    this.imageChangedEvent = null\n    this.myInputVariable.nativeElement.value = \"\";\n    this.isImageUploading = false\n    this.isUploadBtnLoading = false\n    this.croppedImage = ''\n    this.SNo = null\n  }\n  onSucessCroping() {\n    this.isUploadBtnLoading = true\n    let imag;\n    let str: string = this.croppedImage\n    let st4;\n    if (str.indexOf('data:image/jpeg;base64,') != -1) {\n      st4 = str.replace('data:image/jpeg;base64,', '')\n    } else {\n      st4 = str.replace('data:image/png;base64,', '')\n    }\n\n    const imageBlob = this.dataURItoBlob(st4);\n    const imageFile = new File([imageBlob], 'imageName.jpeg', { type: 'image/jpeg' });\n    this.send(imageFile)\n  }\n  dataURItoBlob(dataURI) {\n    const byteString = window.atob(dataURI);\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const int8Array = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n      int8Array[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([int8Array], { type: 'image/jpeg' });\n    return blob;\n  }\n  send(imageFile) {\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    const req = new HttpRequest('POST', this._appService.ImageUpload_Url + 'Upload_Image', formData, {\n      reportProgress: true,\n      withCredentials: false\n    });\n    this._appService.onImageUpload(req).subscribe(\n      (event: any) => {\n        if (event instanceof HttpResponse) {\n          this.isUploadBtnLoading = false\n\n          if (this.uploadingType == 1) {\n            this.ProductImageData = []\n            this.ProductImageData.push(event.body.extras)\n            this.onCloseImageDrawer()\n            console.log(this.ProductImageData)\n          }\n          else if (this.uploadingType == 2) {\n            let SNoIndex = this.productGallryData.findIndex((item) => item.SNo == this.SNo)\n            if (SNoIndex == -1) {\n              this.productGallryData.push({\n                SNo: this.SNo,\n                ImageID: event.body.extras.ImageID,\n                ImageOriginal: event.body.extras.ImageOriginal\n              })\n              this.onCloseImageDrawer()\n\n            } else {\n              this.nzMessageService.warning('Serial Number already Existed')\n            }\n\n\n            console.log(this.productGallryData, 'productGallryData')\n          }\n          // this.imageId = event.body.extras.ImageID\n          // this.addImagetoServer()\n\n        } else if (event instanceof HttpResponse) {\n\n        }\n      },\n      err => {\n        //item.onError!(err, item.file!);\n      }\n    );\n  }\n  onRemove(data, index) {\n    let SNoIndex = this.productGallryData.findIndex((item) => item.SNo == data.SNo)\n    this.productGallryData.splice(SNoIndex, 1)\n  }\n  onClickLevelsDrawer() {\n    this.isLevelsDrawer = true\n  }\n  OnClosebyerLeveDrawer() {\n    console.log(this.levels)\n    this.buyerLeveShares = 0\n    this.isLevelsDrawer = false\n    this.levels.forEach((item) => {\n\n      this.buyerLeveShares = (+item) + this.buyerLeveShares\n    })\n  }\n  getCategoryList() {\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      Whether_Status_Filter: true,\n      Status: true,\n      skip: 0,\n      limit: 10000\n    }\n    try {\n      this._appService.postMethod('List_All_Category', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            this.categoryList = resp.extras.Data\n          } else {\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n          }\n        },\n          error => {\n\n          })\n    } catch (e) {\n\n    }\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddProductComponent } from './add-product.component';\nimport { AddProductRoutes } from './add-product.routing';\nimport { SharedModule } from 'src/app/shared.modue';\nimport { FormsModule } from '@angular/forms';\nimport { ImageCropperModule } from 'ngx-image-cropper';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AddProductRoutes,\n    SharedModule,\n    FormsModule,\n    ImageCropperModule\n\n  ],\n  declarations: [AddProductComponent]\n})\nexport class AddProductModule { }\n","import { AddProductComponent } from './add-product.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path:'',component:AddProductComponent },\n];\n\nexport const AddProductRoutes = RouterModule.forChild(routes);\n"],"sourceRoot":""}