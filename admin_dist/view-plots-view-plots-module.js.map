{"version":3,"sources":["webpack:///./src/app/plots/view-plots/view-plots.component.css","webpack:///./src/app/plots/view-plots/view-plots.component.html","webpack:///./src/app/plots/view-plots/view-plots.component.ts","webpack:///./src/app/plots/view-plots/view-plots.module.ts","webpack:///./src/app/plots/view-plots/view-plots.routing.ts"],"names":[],"mappings":"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","file":"view-plots-view-plots-module.js","sourcesContent":["module.exports = \"agm-map {\\n    height: 400px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGxvdHMvdmlldy1wbG90cy92aWV3LXBsb3RzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0VBQ2YiLCJmaWxlIjoic3JjL2FwcC9wbG90cy92aWV3LXBsb3RzL3ZpZXctcGxvdHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImFnbS1tYXAge1xuICAgIGhlaWdodDogNDAwcHg7XG4gIH0iXX0= */\"","module.exports = \"<div nz-row nzGutter=\\\"8\\\">\\n  <div nz-col nzSpan=\\\"20\\\">\\n    <nz-tabset>\\n      <nz-tab (nzClick)=\\\"onTabClick(1)\\\" nzTitle=\\\"View Plots\\\">\\n      </nz-tab>\\n      <nz-tab (nzClick)=\\\"onTabClick(2)\\\" nzTitle=\\\"Inactivated Plots\\\">\\n      </nz-tab>\\n    </nz-tabset>\\n  </div>\\n</div>\\n<div nz-row nzGutter=\\\"8\\\">\\n  <div nz-col nzSpan=\\\"24\\\">\\n    <nz-table #basicTable nzSize=\\\"small\\\" nzLoadingDelay=\\\"2\\\" [nzLoading]=\\\"isLoading\\\" nzShowPagination=\\\"false\\\"\\n      [nzData]=\\\"plotsList\\\">\\n      <thead>\\n        <tr>\\n          <th></th>\\n          <th></th>\\n          <th>S.No</th>\\n          <th>Plot Name</th>\\n          <th>Company Name</th>\\n          <th>Description</th>\\n          <th></th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <ng-container *ngFor=\\\"let data of plotsList;let i=index\\\">\\n          <tr *ngIf=\\\"Status==1&&data.Status==true\\\">\\n            <td>\\n              <i (click)=\\\"onEditBasicInfo(data,1)\\\" style=\\\"cursor: pointer\\\" nz-icon nzType=\\\"edit\\\" nzTheme=\\\"outline\\\"></i>\\n            </td>\\n            <td>\\n              <a (click)=\\\"onDetail_View(data,i)\\\">\\n                <i style=\\\"cursor: pointer;font-size: 18px\\\" nz-icon [type]=\\\"'caret-down'\\\" *ngIf=\\\"isDetailsView!=i\\\"\\n                  theme=\\\"outline\\\"></i>\\n                <i style=\\\"cursor: pointer;font-size: 18px\\\" nz-icon type=\\\"caret-up\\\" *ngIf=\\\"isDetailsView==i\\\"\\n                  theme=\\\"outline\\\"></i>\\n              </a>\\n            </td>\\n            <td>{{data.SNo}}</td>\\n            <td>{{data.Plot_Name}}</td>\\n            <td>{{data.Company_Name}}</td>\\n            <td>{{data.Description}}</td>\\n\\n            <td>\\n              <span [ngSwitch]=\\\"data.Status\\\">\\n                <span *ngSwitchCase=true>\\n                  <a nz-popconfirm (nzOnConfirm)=\\\"onAction(data)\\\" nzTitle=\\\"Are you sure you want to Inactive this?\\\"\\n                    >Delete</a>\\n                </span>\\n                <span *ngSwitchCase=false>\\n                  <a style=\\\"  color: red;\\\" nz-popconfirm (nzOnConfirm)=\\\"onAction(data)\\\"\\n                    nzTitle=\\\"Are you sure you want to Active this?\\\" >Make Active</a>\\n                </span>\\n\\n                <span *ngSwitchDefault>\\n                  NA\\n                </span>\\n              </span>\\n            </td>\\n            <ng-template #iconTpl>\\n              <i nz-icon nzType=\\\"question-circle\\\" nzTheme=\\\"outline\\\"></i>\\n            </ng-template>\\n            <td>{{data.created_at  | date: _appService.dateFormat}}\\n          </tr>\\n          <tr *ngIf=\\\"Status==2&&data.Status==false\\\">\\n            <td>\\n              <a (click)=\\\"onDetail_View(data,i)\\\">\\n                <i style=\\\"cursor: pointer;font-size: 18px\\\" nz-icon [type]=\\\"'caret-down'\\\" *ngIf=\\\"isDetailsView!=i\\\"\\n                  theme=\\\"outline\\\"></i>\\n                <i style=\\\"cursor: pointer;font-size: 18px\\\" nz-icon type=\\\"caret-up\\\" *ngIf=\\\"isDetailsView==i\\\"\\n                  theme=\\\"outline\\\"></i>\\n              </a>\\n            </td>\\n            <td>{{data.SNo}}</td>\\n            <td>{{data.Plot_Name}}</td>\\n            <td>{{data.Company_Name}}</td>\\n            <td>{{data.Description}}</td>\\n\\n            <td>\\n              <span [ngSwitch]=\\\"data.Status\\\">\\n                <span *ngSwitchCase=true>\\n                  <a nz-popconfirm (nzOnConfirm)=\\\"onAction(data)\\\" nzTitle=\\\"Are you sure you want to Inactive this?\\\"\\n                   >Delete</a>\\n                </span>\\n                <span *ngSwitchCase=false>\\n                  <a style=\\\"  color: red;\\\" nz-popconfirm (nzOnConfirm)=\\\"onAction(data)\\\"\\n                    nzTitle=\\\"Are you sure you want to Active this?\\\">Make Active</a>\\n                </span>\\n\\n                <span *ngSwitchDefault>\\n                  NA\\n                </span>\\n              </span>\\n            </td>\\n            <ng-template #iconTpl>\\n              <i nz-icon nzType=\\\"question-circle\\\" nzTheme=\\\"outline\\\"></i>\\n            </ng-template>\\n            <td>{{data.created_at  | date: _appService.dateFormat}}\\n          </tr>\\n          <tr [nzExpand]=\\\"isDetailsView==i\\\">\\n            <td nzWidth=\\\"50px\\\" style=\\\" background-color: #FF7F50;\\\"></td>\\n            <td style=\\\"padding-top: 2em;padding-bottom: 2em\\\" [attr.colspan]=\\\"7\\\">\\n              <nz-tabset>\\n                <nz-tab nzTitle=\\\"Baic info\\\">\\n                  <div nz-row nzGutter=\\\"8\\\">\\n                    <div nz-col nzSpan=\\\"12\\\">\\n                      <div nz-row class=\\\"individualRow\\\">\\n                        <div nz-col nzSpan=\\\"24\\\">\\n                          <span>\\n                            <b>Company Image : </b> <a [attr.href]=\\\"data.Company_Image_Data.ImageOriginal\\\"\\n                              target=\\\"_blank\\\">Click to View</a>&nbsp;<i (click)=\\\"onUpdate(3,data)\\\" nz-icon nzType=\\\"edit\\\"\\n                              nzTheme=\\\"outline\\\"></i>\\n                          </span>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div nz-col nzSpan=\\\"12\\\">\\n                      <div nz-row class=\\\"individualRow\\\">\\n                        <div nz-col nzSpan=\\\"24\\\">\\n                          <span>\\n                            <b>Plot File : </b> <a [attr.href]=\\\"data.FileData.File_Path\\\" target=\\\"_blank\\\">Click to\\n                              View</a>&nbsp;<i nz-icon (click)=\\\"onUpdate(2,data)\\\" nzType=\\\"edit\\\" nzTheme=\\\"outline\\\"></i>\\n                          </span>\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </nz-tab>\\n                <nz-tab nzTitle=\\\"Plot Images\\\">\\n                  <div nz-row nzGutter=\\\"8\\\">\\n                    <div nz-col nzSpan=\\\"24\\\">\\n                        <button style=\\\"    float: right;\\\" nz-button nzType=\\\"primary\\\" (click)=\\\"onUpdate(4,data)\\\">Update Plot Images</button>\\n                      <nz-upload [nzRemove]=\\\"onRemove\\\" [nzShowUploadList]=\\\"showUploadList\\\" nzListType=\\\"picture-card\\\"\\n                        class=\\\"upload-list-inline\\\" nzDisabled=\\\"true\\\" nzShowButton=\\\"false\\\" [(nzFileList)]=\\\"plotImages\\\">\\n                      </nz-upload>\\n                    </div>\\n                  </div>\\n                </nz-tab>\\n              </nz-tabset>\\n            </td>\\n          </tr>\\n        </ng-container>\\n      </tbody>\\n    </nz-table>\\n  </div>\\n  <nz-pagination [nzShowTotal]=\\\"totalTemplate\\\" (nzPageIndexChange)=\\\"onNextPage($event)\\\" [nzPageSize]=\\\"limit\\\"\\n    [nzPageIndex]=\\\"currentPage\\\" [nzTotal]=\\\"Count\\\"></nz-pagination>\\n  <ng-template #totalTemplate let-total>Total {{ Count }} items</ng-template>\\n</div>\\n<nz-drawer [nzWidth]=\\\"850\\\" [nzVisible]=\\\"updateimageDrawer\\\" nzPlacement=\\\"right\\\" [nzTitle]=\\\"drawerTitle\\\"\\n  (nzOnClose)=\\\"onCLoseDrawer()\\\">\\n  <ng-template #drawerTitle>\\n    <span *ngIf=\\\"selectedPlotData.length>0\\\">Plot Name is {{ selectedPlotData[0].Plot_Name}}</span>\\n  </ng-template>\\n  <div *ngIf=\\\"updatingImageType==1\\\">\\n    <div nz-row>\\n      <div nz-col nzSpan=\\\"16\\\">\\n        <form nz-form [formGroup]=\\\"updateForm\\\">\\n          <nz-form-item>\\n            <nz-form-control [nzSpan]=\\\"12\\\" nzErrorTip=\\\"Please input Plot Name!\\\">\\n              <input formControlName=\\\"Plot_Name\\\" placeholder=\\\"Plot Name\\\" type=\\\"text\\\" nz-input>\\n              <nz-form-explain *ngIf=\\\"updateForm.get('Plot_Name')?.dirty && updateForm.get('Plot_Name')?.errors\\\">\\n                Please input Plot Name!\\n              </nz-form-explain>\\n            </nz-form-control>\\n          </nz-form-item>\\n          <nz-form-item>\\n            <nz-form-control [nzSpan]=\\\"12\\\" nzErrorTip=\\\"Please input Company Name!\\\">\\n              <input formControlName=\\\"Company_Name\\\" placeholder=\\\"Company Name\\\" type=\\\"text\\\" nz-input>\\n            </nz-form-control>\\n          </nz-form-item>\\n          <nz-form-item>\\n            <nz-form-control [nzSpan]=\\\"12\\\" nzErrorTip=\\\"Please input Description!\\\">\\n              <textarea rows=\\\"4\\\" formControlName=\\\"Description\\\" placeholder=\\\"Description\\\" nz-input></textarea>\\n            </nz-form-control>\\n          </nz-form-item>\\n          <nz-form-item>\\n            <nz-form-control [nzSpan]=\\\"12\\\">\\n              <input id=\\\"pac-input\\\" formControlName=\\\"googleAddress\\\" [required]=\\\"lat_marker!=undefined\\\"\\n                placeholder=\\\"Search Address\\\" type=\\\"text\\\" nz-input>\\n            </nz-form-control>\\n            <nz-form-explain *ngIf=\\\"updateForm.get('Address')?.dirty && updateForm.get('Address')?.errors\\\">\\n              Please select Address from maps!</nz-form-explain>\\n\\n          </nz-form-item>\\n          <!-- <nz-form-item>\\n            <nz-form-control [nzSm]=\\\"16\\\">\\n              <agm-map  [latitude]=\\\"lat_marker\\\" [longitude]=\\\"lng_market\\\" fullscreenControl=\\\"true\\\">\\n                <agm-marker [markerDraggable]=true (dragEnd)=\\\"ondragEnd($event)\\\" [latitude]=\\\"lat_marker\\\"\\n                  [longitude]=\\\"lng_market\\\">\\n                </agm-marker>\\n              </agm-map>\\n            </nz-form-control>\\n          </nz-form-item> -->\\n          <nz-form-item>\\n            <nz-form-control>\\n              <button nz-button nzType=\\\"primary\\\" [nzLoading]=\\\"isUpdating\\\" (click)=\\\"onUpdateBasicInfo()\\\">Update</button>\\n            </nz-form-control>\\n          </nz-form-item>\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"updatingImageType==2 || updatingImageType==3 || updatingImageType==4\\\">\\n    <nz-form-control [nzSpan]=\\\"8\\\">\\n      <div class=\\\"clearfix\\\">\\n\\n        <nz-upload [nzCustomRequest]=\\\"customReq\\\" class=\\\"upload-list-inline\\\" nzLimit=\\\"1\\\"\\n          [(nzFileList)]=\\\"imageOrFileList\\\">\\n          <button nz-button>\\n            <span><i nz-icon nzType=\\\"upload\\\"></i> {{updatingImageType==2?'Selecte Plot Doc':updatingImageType==3?'Select Company Image':'Select Plot Images'}}</span>\\n          </button>\\n        </nz-upload>\\n      </div>\\n    </nz-form-control>\\n    <nz-form-control [nzSpan]=\\\"8\\\">\\n        <button nz-button nzType=\\\"primary\\\" [nzLoading]=\\\"isUpdating\\\" (click)=\\\"onUpdateCompanyImageORDoc()\\\">Update</button>\\n\\n      </nz-form-control>\\n\\n   \\n  </div>\\n\\n\\n</nz-drawer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { NzMessageService, UploadXHRArgs, UploadFile } from 'ng-zorro-antd';\nimport { AppService } from 'src/app/app.service';\nimport { HttpEventType, HttpRequest, HttpResponse, HttpClient } from '@angular/common/http';\ndeclare var google: any\n@Component({\n  selector: 'app-view-plots',\n  templateUrl: './view-plots.component.html',\n  styleUrls: ['./view-plots.component.css']\n})\nexport class ViewPlotsComponent implements OnInit {\n  isLoading: boolean;\n  limit = this._appService.limit\n  plotsList = [];\n  Count: number;\n  skip: number = 0;\n  Status: number;\n  currentPage: number = 1;\n  isDetailsView: number;\n  plotImages: any = [];\n  imageOrFileList: any = []\n  showUploadList = {\n    showPreviewIcon: true,\n    showRemoveIcon: true,\n    hidePreviewIconInNonImage: true\n  };\n  updatingImageType: number = 1;\n  updateimageDrawer: boolean;\n  selectedPlotData = [];\n  updateForm: FormGroup;\n  lat_marker: any;\n  lng_market: any;\n  plotAddress: string;\n  isUpdating: boolean;\n  plotImages_FilesArray = [];\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private nzMessageService: NzMessageService,\n    public _appService: AppService) { }\n  ngOnInit() {\n    this.onTabClick(1)\n    this.updateForm = this.fb.group({\n      Company_Name: [null, [Validators.required]],\n      Plot_Name: [null, [Validators.required]],\n      Description: [null, [Validators.required]],\n      googleAddress: [null, [Validators.required]],\n    });\n  }\n  onTabClick(tabNumber: number) {\n    this.Status = tabNumber\n    this.getAllPlots(0)\n    this.isDetailsView = -1\n  }\n\n  getAllPlots(skip: number) {\n    this.isLoading = true\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      skip: skip,\n      limit: this.limit\n    }\n    try {\n\n      this._appService.postMethod('List_All_Plots', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            this.skip = skip\n            this.plotsList = resp.extras.Data\n            this.Count = resp.extras.Count\n            this.isLoading = false\n          } else {\n            this.isLoading = false\n\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n  onNextPage(event: number) {\n    this.currentPage = event\n    let skip = (event - 1) * this._appService.limit\n    this.skip = skip\n    this.getAllPlots(this.skip)\n  }\n  onDetail_View(data, i: number) {\n    this.plotImages = []\n    let tmpplotImages = []\n    let finallist = []\n    tmpplotImages = data.Plot_Image_Data\n    tmpplotImages.forEach(item => {\n      finallist.push({\n        uid: '1',\n        name: 'guideLines',\n        status: 'done',\n        url: item.ImageOriginal,\n        thumbUrl: item.ImageOriginal,\n        ImageID: item.ImageID\n      })\n    })\n    this.plotImages =finallist;\n    let index = i;\n    if (this.isDetailsView == index) {\n      this.isDetailsView = -1\n    } else {\n\n      this.isDetailsView = index\n\n    }\n  }\n  onAction(data) {\n    //this.reasonData = data\n    let url;\n\n    if (data.Status) {\n      url = 'Activate_Inactivate_Plot'//\"Inactivated_Customer_Cancellation_Reason\"\n    } else {\n      url = \"Activate_Inactivate_Plot\"\n    }\n    try {\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n            let body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        PlotID: data.PlotID,\n\n      }\n      this._appService.postMethod(url, body)\n        .subscribe(resp => {\n          if (resp.success) {\n\n            let msg;\n            if (data.Status) {\n              msg = 'Inactivated Successfully'\n            } else {\n              msg = 'Activated Successfully'\n            }\n            this.nzMessageService.success(msg)\n            this.getAllPlots(this.skip)\n          } else {\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n  onUpdate(type: number, plotdata) {\n    this.selectedPlotData = []\n    this.selectedPlotData.push(plotdata)\n    this.updatingImageType = type\n    this.updateimageDrawer = true\n    this.imageOrFileList = [];\n    this.plotImages_FilesArray = []\n  }\n  onEditBasicInfo(plotdata, updatType) {\n    this.selectedPlotData = plotdata\n    this.updatingImageType = updatType\n    this.updateimageDrawer = true\n    this.lat_marker = plotdata.Latitude\n    this.lng_market = plotdata.Longitude\n    this.updateForm.patchValue({\n      Company_Name: plotdata.Company_Name,\n      Plot_Name: plotdata.Plot_Name,\n      Description: plotdata.Description,\n      googleAddress: plotdata.Address\n    })\n    setTimeout(() => {\n      this.onMapIntilized()\n    }, 100);\n  }\n  onUpdateBasicInfo() {\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n    let imgesArray = []\n    let finalImagesArray = []\n    imgesArray = this.selectedPlotData[0].Plot_Image_Data\n    imgesArray.forEach((item) => {\n      finalImagesArray.push(item.ImageID)\n    })\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      PlotID: this.selectedPlotData[0].PlotID,\n      \"FileID\": this.selectedPlotData[0].FileData.FileID,\n      \"Plot_Name\": this.updateForm.value.Plot_Name,\n      \"Company_Name\": this.updateForm.value.Company_Name,\n      \"Description\": this.updateForm.value.Description,\n      \"Latitude\": this.lat_marker,\n      \"Longitude\": this.lng_market,\n      \"Address\": this.plotAddress,\n      \"All_ImageID_Array\": finalImagesArray,\n      \"ImageID\": this.selectedPlotData[0].Company_Image_Data.ImageID,\n\n\n    }\n    this.onPlotUpdateToServer(body)\n  }\n\n  onPlotUpdateToServer(body) {\n    this.isUpdating = true\n    try {\n\n      this._appService.postMethod('Edit_Plot', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            this.onCLoseDrawer()\n            this.getAllPlots(this.skip)\n            this.isDetailsView = -1\n          } else {\n            this.isUpdating = false\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n  onUpdateCompanyImageORDoc() {\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n    let imgesArray = []\n    let finalImagesArray = []\n    imgesArray = this.selectedPlotData[0].Plot_Image_Data\n    imgesArray.forEach((item) => {\n      finalImagesArray.push(item.ImageID)\n    })\n\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      PlotID: this.selectedPlotData[0].PlotID,\n      \"FileID\": this.selectedPlotData[0].FileData.FileID,\n      \"Plot_Name\": this.selectedPlotData[0].Plot_Name,\n      \"Company_Name\": this.selectedPlotData[0].Company_Name,\n      \"Description\": this.selectedPlotData[0].Description,\n      \"Latitude\": this.selectedPlotData[0].Latitude,\n      \"Longitude\": this.selectedPlotData[0].Longitude,\n      \"Address\": this.selectedPlotData[0].Address,\n      \"All_ImageID_Array\": finalImagesArray,\n      \"ImageID\": this.selectedPlotData[0].Company_Image_Data.ImageID,\n\n\n    }\n    this.onPlotUpdateToServer(body)\n  }\n  onRemove = (item: UploadFile) => {\n    console.log(item)\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n        let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      ImageID: item.ImageID,\n      PlotID:this.selectedPlotData[0].PlotID\n    }\n    try {\n\n      this._appService.postMethod('Remove_Plot_Image', body)\n        .subscribe(resp => {\n          if (resp.success) {\n\n            this.getAllPlots(this.skip)\n            this.isDetailsView = -1\n          } else {\n            this.isUpdating = false\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n\n  }\n  onCLoseDrawer() {\n    this.updateimageDrawer = false\n    this.isUpdating = false\n    this.updateForm.reset()\n  }\n  ondragEnd(event) {\n    console.log(event.coords.lat)\n    this.lat_marker = event.coords.lat\n    this.lng_market = event.coords.lng\n    console.log(`${this.lat_marker}`)\n  }\n  onMapIntilized() {\n\n    var input = document.getElementById('pac-input');\n    //this.map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);\n    var autocomplete = new google.maps.places.Autocomplete(input);\n\n    // autocomplete.bindTo('bounds', this.map);\n\n    // Set the data fields to return when the user selects a place.\n    autocomplete.setFields(\n      ['address_components', 'geometry', 'icon', 'name']);\n\n    var infowindow = new google.maps.InfoWindow();\n    var infowindowContent = document.getElementById('infowindow-content');\n    infowindow.setContent(infowindowContent);\n    // var marker = new google.maps.Marker({\n    //   map: this.map,\n    //   draggable: true,\n    //   anchorPoint: new google.maps.Point(0, -29)\n    // });\n\n    autocomplete.addListener('place_changed', () => {\n      infowindow.close();\n      // marker.setVisible(true);\n      var place = autocomplete.getPlace();\n      if (!place.geometry) {\n        // User entered the name of a Place that was not suggested and\n        // pressed the Enter key, or the Place Details request failed.\n        window.alert(\"No details available for input: '\" + place.name + \"'\");\n        return;\n      } else {\n        this.lat_marker = place.geometry.location.lat()\n        this.lng_market = place.geometry.location.lng()\n      }\n\n      // If the place has a geometry, then present it on a map.\n\n      //marker.setPosition(place.geometry.location);\n      //marker.setVisible(true);\n      var address = '';\n      if (place.address_components) {\n        address = [\n          (place.address_components[0] && place.address_components[0].short_name || ''),\n          (place.address_components[1] && place.address_components[1].short_name || ''),\n          (place.address_components[2] && place.address_components[2].short_name || '')\n        ].join(' ');\n        this.plotAddress = address\n      }\n\n\n    });\n    // google.maps.event.addListener( marker,'dragend', (event) => {\n    //   this.geocodePosition(marker.getPosition());\n    // });\n\n  }\n  customReq = (item: UploadXHRArgs) => {\n    const formData = new FormData();\n    let url = ''\n    if (this.updatingImageType == 3 || this.updatingImageType == 4) {\n      console.log('enter to image')\n      url = this._appService.imageurl\n      formData.append('image', item.file as any);\n    }\n    else if (this.updatingImageType == 2) {\n      url = this._appService.fileUrl\n      console.log('enter to file')\n      formData.append('file', item.file as any);\n    }\n    const req = new HttpRequest('POST', url, formData, {\n      reportProgress: true,\n      withCredentials: false\n    });\n    return this.http.request(req).subscribe(\n      (event: any) => {\n        let plotImages_Files = []\n        if (event.type === HttpEventType.UploadProgress) {\n          if (event.total! > 0) {\n            (event as any).percent = (event.loaded / event.total!) * 100;\n          }\n          item.onProgress!(event, item.file!);\n        } else if (event instanceof HttpResponse) {\n          item.onSuccess!(event.body, item.file!, event);\n          this.nzMessageService.success('upload successfully');\n          if (this.updatingImageType == 4) {\n            var url = event.body.extras.Image550\n            console.log(event.body.extras.ImageOriginal)\n\n            this.plotImages_FilesArray.push({\n              uid: item.file.uid,\n              name: item.file.name,\n              status: 'done',\n              url: url,\n              thumbUrl: url,\n              ID: event.body.extras.ImageID\n            })\n            let imagesarray = []\n            this.plotImages_FilesArray.forEach((item) => {\n              imagesarray.push(item.ID)\n            })\n            let defaultImages = []\n            defaultImages = this.selectedPlotData[0].Plot_Image_Data\n            defaultImages.push(\n              {\n                uid: item.file.uid,\n                name: item.file.name,\n                status: 'done',\n                url: url,\n                thumbUrl: url,\n                ImageID: event.body.extras.ImageID\n              }\n            )\n            this.selectedPlotData[0].Plot_Image_Data = defaultImages\n            this.imageOrFileList = this.plotImages_FilesArray\n\n          }\n          else if (this.updatingImageType == 3) {\n            var url = event.body.extras.Image550\n            console.log(event.body.extras.ImageOriginal)\n\n            plotImages_Files.push({\n              uid: item.file.uid,\n              name: item.file.name,\n              status: 'done',\n              url: url,\n              thumbUrl: url,\n              ID: event.body.extras.ImageID\n            })\n            this.selectedPlotData[0].Company_Image_Data.ImageID = event.body.extras.ImageID\n            this.imageOrFileList = plotImages_Files;\n\n          }\n          else if (this.updatingImageType == 2) {\n            var url = event.body.extras.File_Path\n            console.log(event.body.extras.ImageOriginal)\n            plotImages_Files.push({\n              uid: item.file.uid,\n              name: 'Plot Doc',\n              status: 'done',\n              url: url,\n              thumbUrl: url,\n              ID: event.body.extras.FileID\n            })\n            this.selectedPlotData[0].FileData.FileID = event.body.extras.FileID\n            this.imageOrFileList = plotImages_Files\n          }\n          // else if (this.uploadingType == 3) {\n          //   var url = event.body.extras.Image550\n          //   console.log(event.body.extras.ImageOriginal)\n          //   this.companyImagesList.push({\n          //     uid: item.file.uid,\n          //     name: item.file.name,\n          //     status: 'done',\n          //     url: url,\n          //     thumbUrl: url,\n          //     ImageID: event.body.extras.ImageID\n          //   })\n          //   this.comapnyListForNz = [...this.companyImagesList];\n          // }\n\n        }\n\n      },\n      err => {\n        item.onError!(err, item.file!);\n      }\n    );\n  };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewPlotsComponent } from './view-plots.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ViewPlotsRoutingModule } from './view-plots.routing';\nimport { SharedModule } from 'src/app/shared.modue';\n// import { AgmCoreModule } from '@agm/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ViewPlotsRoutingModule,\n    ReactiveFormsModule,\n    SharedModule,\n    // AgmCoreModule.forRoot({\n    //   apiKey: 'AIzaSyAXJQ218iBxDg8jQf8iUVnXP95FbfDIzQE'\n    // })\n  ],\n  declarations: [ViewPlotsComponent]\n})\nexport class ViewPlotsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ViewPlotsComponent } from './view-plots.component';\n\nconst routes: Routes = [\n  { path: '', component: ViewPlotsComponent }\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ViewPlotsRoutingModule {}\n"],"sourceRoot":""}