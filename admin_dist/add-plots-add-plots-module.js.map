{"version":3,"sources":["webpack:///./src/app/plots/add-plots/add-plots.component.css","webpack:///./src/app/plots/add-plots/add-plots.component.html","webpack:///./src/app/plots/add-plots/add-plots.component.ts","webpack:///./src/app/plots/add-plots/add-plots.module.ts","webpack:///./src/app/plots/add-plots/add-plots.routing.ts"],"names":[],"mappings":"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","file":"add-plots-add-plots-module.js","sourcesContent":["module.exports = \"agm-map {\\r\\n    height: 400px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGxvdHMvYWRkLXBsb3RzL2FkZC1wbG90cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtFQUNmIiwiZmlsZSI6InNyYy9hcHAvcGxvdHMvYWRkLXBsb3RzL2FkZC1wbG90cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYWdtLW1hcCB7XHJcbiAgICBoZWlnaHQ6IDQwMHB4O1xyXG4gIH0iXX0= */\"","module.exports = \"<div nz-row>\\r\\n  <div nz-col nzSpan=\\\"16\\\">\\r\\n    <nz-card >\\r\\n      <form nz-form [formGroup]=\\\"plotCreationForm\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-control [nzSpan]=\\\"12\\\" nzErrorTip=\\\"Please input Plot Name!\\\">\\r\\n            <input formControlName=\\\"Plot_Name\\\" placeholder=\\\"Plot Name\\\" type=\\\"text\\\" nz-input>\\r\\n            <nz-form-explain\\r\\n              *ngIf=\\\"plotCreationForm.get('Plot_Name')?.dirty && plotCreationForm.get('Plot_Name')?.errors\\\">\\r\\n              Please input Plot Name!\\r\\n            </nz-form-explain>\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n          <nz-form-control [nzSpan]=\\\"12\\\" nzErrorTip=\\\"Please input Company Name!\\\">\\r\\n            <input formControlName=\\\"Company_Name\\\" placeholder=\\\"Company Name\\\" type=\\\"text\\\" nz-input>\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n          <nz-form-control [nzSpan]=\\\"12\\\" nzErrorTip=\\\"Please input Description!\\\">\\r\\n            <textarea rows=\\\"4\\\" formControlName=\\\"Description\\\" placeholder=\\\"Description\\\" nz-input></textarea>\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n          <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n            <input id=\\\"pac-input\\\" formControlName=\\\"googleAddress\\\" [required]=\\\"lat_marker!=undefined\\\"\\r\\n              placeholder=\\\"Search Address\\\" type=\\\"text\\\" nz-input>\\r\\n\\r\\n          </nz-form-control>\\r\\n          <nz-form-explain *ngIf=\\\"plotCreationForm.get('Address')?.dirty && plotCreationForm.get('Address')?.errors\\\">\\r\\n            Please select Address from maps!</nz-form-explain>\\r\\n\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n          <nz-form-control [nzSm]=\\\"16\\\">\\r\\n            <!-- <agm-map #gm [latitude]=\\\"lat_marker\\\" [longitude]=\\\"lng_market\\\" fullscreenControl=\\\"true\\\">\\r\\n              <agm-marker [markerDraggable]=true (dragEnd)=\\\"ondragEnd($event)\\\" [latitude]=\\\"lat_marker\\\"\\r\\n                [longitude]=\\\"lng_market\\\">\\r\\n              </agm-marker>\\r\\n            </agm-map> -->\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n\\r\\n        <nz-form-item>\\r\\n          <nz-form-control [nzSpan]=\\\"8\\\">\\r\\n            <div class=\\\"clearfix\\\">\\r\\n              <nz-upload [nzCustomRequest]=\\\"customReq\\\" class=\\\"upload-list-inline\\\" [(nzFileList)]=\\\"plotImagesListForNZ\\\">\\r\\n                <button nz-button (click)=\\\"onCustRequ(1)\\\">\\r\\n                  <span><i nz-icon nzType=\\\"upload\\\"></i> Plot Images</span>\\r\\n                </button>\\r\\n              </nz-upload>\\r\\n            </div>\\r\\n          </nz-form-control>\\r\\n          <nz-form-control [nzSpan]=\\\"8\\\">\\r\\n            <div class=\\\"clearfix\\\">\\r\\n              <!-- [nzRemove]=\\\"onRemove\\\" -->\\r\\n              <nz-upload [nzCustomRequest]=\\\"customReq\\\" class=\\\"upload-list-inline\\\" nzLimit=\\\"1\\\"\\r\\n                [(nzFileList)]=\\\"plotDocListForNZ\\\">\\r\\n                <button nz-button (click)=\\\"onCustRequ(2)\\\">\\r\\n                  <span><i nz-icon nzType=\\\"upload\\\"></i> Plot File</span>\\r\\n                </button>\\r\\n              </nz-upload> \\r\\n            </div>\\r\\n          </nz-form-control>\\r\\n          <nz-form-control [nzSpan]=\\\"8\\\">\\r\\n            <div class=\\\"clearfix\\\">\\r\\n              <nz-upload [nzCustomRequest]=\\\"customReq\\\" class=\\\"upload-list-inline\\\" nzLimit=\\\"1\\\"\\r\\n                [(nzFileList)]=\\\"comapnyListForNz\\\">\\r\\n                <button nz-button (click)=\\\"onCustRequ(3)\\\">\\r\\n                  <span><i nz-icon nzType=\\\"upload\\\"></i> Company Image</span>\\r\\n                </button>\\r\\n              </nz-upload>\\r\\n            </div>\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n          <nz-form-control>\\r\\n            <button nz-button nzType=\\\"primary\\\" (click)=\\\"onSubmitPlot()\\\">Submit</button>\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </form>\\r\\n    </nz-card>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NzMessageService, UploadFile, UploadXHRArgs } from 'ng-zorro-antd';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { HttpRequest, HttpEventType, HttpResponse, HttpClient } from '@angular/common/http';\r\ndeclare var google: any\r\n@Component({\r\n  selector: 'app-add-plots',\r\n  templateUrl: './add-plots.component.html',\r\n  styleUrls: ['./add-plots.component.css']\r\n})\r\nexport class AddPlotsComponent implements OnInit {\r\n  // map: any;\r\n  lat_marker = 17.7837;\r\n  lng_market = 78.736;\r\n  plotCreationForm: FormGroup;\r\n  plotImagesList = [];\r\n  plotFileList = []\r\n  companyImagesList = []\r\n  plotImagesListForNZ = [];\r\n  plotDocListForNZ: any[];\r\n  comapnyListForNz: any[];\r\n  uploadingType: number;\r\n  uploadLimit = 0\r\n  plotAddress: string;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n   \r\n    private nzMessageService: NzMessageService,\r\n    private _appService: AppService) { }\r\n  ngOnInit() {\r\n    this.plotCreationForm = this.fb.group({\r\n      Company_Name: [null, [Validators.required]],\r\n      Plot_Name: [null, [Validators.required]],\r\n      Description: [null, [Validators.required]],\r\n      googleAddress: [null, [Validators.required]],\r\n    });\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.onMapIntilized()\r\n  }\r\n  onSubmitPlot() {\r\n    let imagesarray = []\r\n    console.log(this.plotImagesList)\r\n    console.log(`this.companyImagesList[0].ImageID`, this.companyImagesList[0].ImageID)\r\n    console.log(`this.plotFileList[0].FileID`, this.plotFileList[0].FileID)\r\n    this.plotImagesList.forEach(item => {\r\n      imagesarray.push(item.ImageID)\r\n    })\r\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))   \r\n     let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      Plot_Name: this.plotCreationForm.value.Plot_Name,\r\n      Company_Name: this.plotCreationForm.value.Company_Name,\r\n      Description: this.plotCreationForm.value.Description,\r\n      Latitude: this.lat_marker,\r\n      Longitude: this.lng_market,\r\n      Address: this.plotAddress,\r\n      All_ImageID_Array: imagesarray,\r\n      ImageID: this.companyImagesList[0].ImageID,\r\n      FileID: this.plotFileList[0].FileID\r\n    }\r\n    try {\r\n\r\n      this._appService.postMethod('Create_Plot', body)\r\n        .subscribe(resp => {\r\n          if (resp.success) {\r\n            this.nzMessageService.success('plot created')\r\n            this.plotCreationForm.reset()\r\n            this.companyImagesList = []\r\n            this.plotImagesList = []\r\n            this.plotFileList = []\r\n\r\n            this.plotImagesListForNZ = []\r\n            this.plotDocListForNZ = []\r\n            this.comapnyListForNz = []\r\n            this.plotAddress = ''\r\n\r\n          }\r\n          this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) { }\r\n  }\r\n  onMapIntilized() {\r\n\r\n    var input = document.getElementById('pac-input');\r\n    //this.map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);\r\n    var autocomplete = new google.maps.places.Autocomplete(input);\r\n\r\n    // autocomplete.bindTo('bounds', this.map);\r\n\r\n    // Set the data fields to return when the user selects a place.\r\n    autocomplete.setFields(\r\n      ['address_components', 'geometry', 'icon', 'name']);\r\n\r\n    var infowindow = new google.maps.InfoWindow();\r\n    var infowindowContent = document.getElementById('infowindow-content');\r\n    infowindow.setContent(infowindowContent);\r\n    // var marker = new google.maps.Marker({\r\n    //   map: this.map,\r\n    //   draggable: true,\r\n    //   anchorPoint: new google.maps.Point(0, -29)\r\n    // });\r\n\r\n    autocomplete.addListener('place_changed', () => {\r\n      infowindow.close();\r\n      // marker.setVisible(true);\r\n      var place = autocomplete.getPlace();\r\n      if (!place.geometry) {\r\n        // User entered the name of a Place that was not suggested and\r\n        // pressed the Enter key, or the Place Details request failed.\r\n        window.alert(\"No details available for input: '\" + place.name + \"'\");\r\n        return;\r\n      } else {\r\n        this.lat_marker = place.geometry.location.lat()\r\n        this.lng_market = place.geometry.location.lng()\r\n      }\r\n\r\n      // If the place has a geometry, then present it on a map.\r\n\r\n      //marker.setPosition(place.geometry.location);\r\n      //marker.setVisible(true);\r\n      var address = '';\r\n      if (place.address_components) {\r\n        address = [\r\n          (place.address_components[0] && place.address_components[0].short_name || ''),\r\n          (place.address_components[1] && place.address_components[1].short_name || ''),\r\n          (place.address_components[2] && place.address_components[2].short_name || '')\r\n        ].join(' ');\r\n        this.plotAddress = address\r\n      }\r\n\r\n\r\n    });\r\n    // google.maps.event.addListener( marker,'dragend', (event) => {\r\n    //   this.geocodePosition(marker.getPosition());\r\n    // });\r\n\r\n  }\r\n  onRemove = (item: UploadFile) => {\r\n    let index = this.plotImagesList.findIndex(data => data.uid == item.uid)\r\n    this.plotImagesList.splice(index, 1)\r\n    this.plotImagesListForNZ = this.plotImagesList\r\n    console.log(this.plotImagesList)\r\n  }\r\n  ondragEnd(event) {\r\n    console.log(event.coords.lat)\r\n    this.lat_marker = event.coords.lat\r\n    this.lng_market = event.coords.lng\r\n    console.log(`${this.lat_marker}`)\r\n  }\r\n  onCustRequ(type: number) {\r\n    this.uploadingType = type\r\n    if (this.uploadingType == 1) {\r\n      this.uploadLimit = 0\r\n    }\r\n    else if (type == 2 || type == 3) {\r\n      this.uploadLimit = 1\r\n    }\r\n  }\r\n  customReq = (item: UploadXHRArgs) => {\r\n    console.log('updlaosdaf', this.uploadingType)\r\n    const formData = new FormData();\r\n    let url = ''\r\n    if (this.uploadingType == 1 || this.uploadingType == 3) {\r\n      console.log('enter to image')\r\n      url = this._appService.imageurl\r\n      formData.append('image', item.file as any);\r\n    }\r\n    else if (this.uploadingType == 2) {\r\n      url = this._appService.fileUrl\r\n      console.log('enter to file')\r\n      formData.append('file', item.file as any);\r\n    }\r\n    const req = new HttpRequest('POST', url, formData, {\r\n      reportProgress: true,\r\n      withCredentials: false\r\n    });\r\n    return this.http.request(req).subscribe(\r\n      (event: any) => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          if (event.total! > 0) {\r\n            (event as any).percent = (event.loaded / event.total!) * 100;\r\n          }\r\n          item.onProgress!(event, item.file!);\r\n        } else if (event instanceof HttpResponse) {\r\n          item.onSuccess!(event.body, item.file!, event);\r\n          this.nzMessageService.success('upload successfully.');\r\n          if (this.uploadingType == 1) {\r\n            var url = event.body.extras.Image550\r\n            console.log(event.body.extras.ImageOriginal)\r\n            this.plotImagesList.push({\r\n              uid: item.file.uid,\r\n              name: item.file.name,\r\n              status: 'done',\r\n              url: url,\r\n              thumbUrl: url,\r\n              ImageID: event.body.extras.ImageID\r\n            })\r\n            console.log('before ', this.plotImagesList)\r\n            this.plotImagesListForNZ = this.plotImagesList;\r\n            console.log('after ', this.plotImagesList)\r\n          }\r\n          else if (this.uploadingType == 2) {\r\n            var url = event.body.extras.File_Path\r\n            console.log(event.body.extras.ImageOriginal)\r\n            this.plotFileList.push({\r\n              uid: item.file.uid,\r\n              name: 'Plot Doc',\r\n              status: 'done',\r\n              url: url,\r\n              thumbUrl: url,\r\n              FileID: event.body.extras.FileID\r\n            })\r\n            this.plotDocListForNZ = this.plotFileList\r\n          }\r\n          else if (this.uploadingType == 3) {\r\n            var url = event.body.extras.Image550\r\n            console.log(event.body.extras.ImageOriginal)\r\n            this.companyImagesList.push({\r\n              uid: item.file.uid,\r\n              name: item.file.name,\r\n              status: 'done',\r\n              url: url,\r\n              thumbUrl: url,\r\n              ImageID: event.body.extras.ImageID\r\n            })\r\n            this.comapnyListForNz =this.companyImagesList\r\n          }\r\n\r\n        }\r\n\r\n      },\r\n      err => {\r\n        item.onError!(err, item.file!);\r\n      }\r\n    );\r\n  };\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddPlotsComponent } from './add-plots.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AddPlotsRoutingModule } from './add-plots.routing';\r\n// import { AgmCoreModule } from '@agm/core';\r\nimport { SharedModule } from 'src/app/shared.modue';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AddPlotsRoutingModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    // AgmCoreModule.forRoot({\r\n    //   apiKey: 'AIzaSyAXJQ218iBxDg8jQf8iUVnXP95FbfDIzQE'\r\n    // })\r\n  ],\r\n  declarations: [AddPlotsComponent]\r\n})\r\nexport class AddPlotsModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddPlotsComponent } from './add-plots.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AddPlotsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddPlotsRoutingModule {}\r\n"],"sourceRoot":""}