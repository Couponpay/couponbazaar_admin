{"version":3,"sources":["webpack:///./src/app/plots/add-plots/add-plots.component.css","webpack:///./src/app/plots/add-plots/add-plots.component.html","webpack:///./src/app/plots/add-plots/add-plots.component.ts","webpack:///./src/app/plots/add-plots/add-plots.module.ts","webpack:///./src/app/plots/add-plots/add-plots.routing.ts"],"names":[],"mappings":"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","file":"add-plots-add-plots-module.js","sourcesContent":["module.exports = \"agm-map {\\n    height: 400px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGxvdHMvYWRkLXBsb3RzL2FkZC1wbG90cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtFQUNmIiwiZmlsZSI6InNyYy9hcHAvcGxvdHMvYWRkLXBsb3RzL2FkZC1wbG90cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYWdtLW1hcCB7XG4gICAgaGVpZ2h0OiA0MDBweDtcbiAgfSJdfQ== */\"","module.exports = \"<div nz-row>\\n  <div nz-col nzSpan=\\\"16\\\">\\n    <nz-card >\\n      <form nz-form [formGroup]=\\\"plotCreationForm\\\">\\n        <nz-form-item>\\n          <nz-form-control [nzSpan]=\\\"12\\\" nzErrorTip=\\\"Please input Plot Name!\\\">\\n            <input formControlName=\\\"Plot_Name\\\" placeholder=\\\"Plot Name\\\" type=\\\"text\\\" nz-input>\\n            <nz-form-explain\\n              *ngIf=\\\"plotCreationForm.get('Plot_Name')?.dirty && plotCreationForm.get('Plot_Name')?.errors\\\">\\n              Please input Plot Name!\\n            </nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-control [nzSpan]=\\\"12\\\" nzErrorTip=\\\"Please input Company Name!\\\">\\n            <input formControlName=\\\"Company_Name\\\" placeholder=\\\"Company Name\\\" type=\\\"text\\\" nz-input>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-control [nzSpan]=\\\"12\\\" nzErrorTip=\\\"Please input Description!\\\">\\n            <textarea rows=\\\"4\\\" formControlName=\\\"Description\\\" placeholder=\\\"Description\\\" nz-input></textarea>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-control [nzSpan]=\\\"12\\\">\\n            <input id=\\\"pac-input\\\" formControlName=\\\"googleAddress\\\" [required]=\\\"lat_marker!=undefined\\\"\\n              placeholder=\\\"Search Address\\\" type=\\\"text\\\" nz-input>\\n\\n          </nz-form-control>\\n          <nz-form-explain *ngIf=\\\"plotCreationForm.get('Address')?.dirty && plotCreationForm.get('Address')?.errors\\\">\\n            Please select Address from maps!</nz-form-explain>\\n\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-control [nzSm]=\\\"16\\\">\\n            <!-- <agm-map #gm [latitude]=\\\"lat_marker\\\" [longitude]=\\\"lng_market\\\" fullscreenControl=\\\"true\\\">\\n              <agm-marker [markerDraggable]=true (dragEnd)=\\\"ondragEnd($event)\\\" [latitude]=\\\"lat_marker\\\"\\n                [longitude]=\\\"lng_market\\\">\\n              </agm-marker>\\n            </agm-map> -->\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n        <nz-form-item>\\n          <nz-form-control [nzSpan]=\\\"8\\\">\\n            <div class=\\\"clearfix\\\">\\n              <nz-upload [nzCustomRequest]=\\\"customReq\\\" class=\\\"upload-list-inline\\\" [(nzFileList)]=\\\"plotImagesListForNZ\\\">\\n                <button nz-button (click)=\\\"onCustRequ(1)\\\">\\n                  <span><i nz-icon nzType=\\\"upload\\\"></i> Plot Images</span>\\n                </button>\\n              </nz-upload>\\n            </div>\\n          </nz-form-control>\\n          <nz-form-control [nzSpan]=\\\"8\\\">\\n            <div class=\\\"clearfix\\\">\\n              <!-- [nzRemove]=\\\"onRemove\\\" -->\\n              <nz-upload [nzCustomRequest]=\\\"customReq\\\" class=\\\"upload-list-inline\\\" nzLimit=\\\"1\\\"\\n                [(nzFileList)]=\\\"plotDocListForNZ\\\">\\n                <button nz-button (click)=\\\"onCustRequ(2)\\\">\\n                  <span><i nz-icon nzType=\\\"upload\\\"></i> Plot File</span>\\n                </button>\\n              </nz-upload> \\n            </div>\\n          </nz-form-control>\\n          <nz-form-control [nzSpan]=\\\"8\\\">\\n            <div class=\\\"clearfix\\\">\\n              <nz-upload [nzCustomRequest]=\\\"customReq\\\" class=\\\"upload-list-inline\\\" nzLimit=\\\"1\\\"\\n                [(nzFileList)]=\\\"comapnyListForNz\\\">\\n                <button nz-button (click)=\\\"onCustRequ(3)\\\">\\n                  <span><i nz-icon nzType=\\\"upload\\\"></i> Company Image</span>\\n                </button>\\n              </nz-upload>\\n            </div>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-control>\\n            <button nz-button nzType=\\\"primary\\\" (click)=\\\"onSubmitPlot()\\\">Submit</button>\\n          </nz-form-control>\\n        </nz-form-item>\\n      </form>\\n    </nz-card>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NzMessageService, UploadFile, UploadXHRArgs } from 'ng-zorro-antd';\nimport { AppService } from 'src/app/app.service';\nimport { HttpRequest, HttpEventType, HttpResponse, HttpClient } from '@angular/common/http';\ndeclare var google: any\n@Component({\n  selector: 'app-add-plots',\n  templateUrl: './add-plots.component.html',\n  styleUrls: ['./add-plots.component.css']\n})\nexport class AddPlotsComponent implements OnInit {\n  // map: any;\n  lat_marker = 17.7837;\n  lng_market = 78.736;\n  plotCreationForm: FormGroup;\n  plotImagesList = [];\n  plotFileList = []\n  companyImagesList = []\n  plotImagesListForNZ = [];\n  plotDocListForNZ: any[];\n  comapnyListForNz: any[];\n  uploadingType: number;\n  uploadLimit = 0\n  plotAddress: string;\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n   \n    private nzMessageService: NzMessageService,\n    private _appService: AppService) { }\n  ngOnInit() {\n    this.plotCreationForm = this.fb.group({\n      Company_Name: [null, [Validators.required]],\n      Plot_Name: [null, [Validators.required]],\n      Description: [null, [Validators.required]],\n      googleAddress: [null, [Validators.required]],\n    });\n  }\n  ngAfterViewInit(): void {\n    this.onMapIntilized()\n  }\n  onSubmitPlot() {\n    let imagesarray = []\n    console.log(this.plotImagesList)\n    console.log(`this.companyImagesList[0].ImageID`, this.companyImagesList[0].ImageID)\n    console.log(`this.plotFileList[0].FileID`, this.plotFileList[0].FileID)\n    this.plotImagesList.forEach(item => {\n      imagesarray.push(item.ImageID)\n    })\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))   \n     let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      Plot_Name: this.plotCreationForm.value.Plot_Name,\n      Company_Name: this.plotCreationForm.value.Company_Name,\n      Description: this.plotCreationForm.value.Description,\n      Latitude: this.lat_marker,\n      Longitude: this.lng_market,\n      Address: this.plotAddress,\n      All_ImageID_Array: imagesarray,\n      ImageID: this.companyImagesList[0].ImageID,\n      FileID: this.plotFileList[0].FileID\n    }\n    try {\n\n      this._appService.postMethod('Create_Plot', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            this.nzMessageService.success('plot created')\n            this.plotCreationForm.reset()\n            this.companyImagesList = []\n            this.plotImagesList = []\n            this.plotFileList = []\n\n            this.plotImagesListForNZ = []\n            this.plotDocListForNZ = []\n            this.comapnyListForNz = []\n            this.plotAddress = ''\n\n          }\n          this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n  onMapIntilized() {\n\n    var input = document.getElementById('pac-input');\n    //this.map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);\n    var autocomplete = new google.maps.places.Autocomplete(input);\n\n    // autocomplete.bindTo('bounds', this.map);\n\n    // Set the data fields to return when the user selects a place.\n    autocomplete.setFields(\n      ['address_components', 'geometry', 'icon', 'name']);\n\n    var infowindow = new google.maps.InfoWindow();\n    var infowindowContent = document.getElementById('infowindow-content');\n    infowindow.setContent(infowindowContent);\n    // var marker = new google.maps.Marker({\n    //   map: this.map,\n    //   draggable: true,\n    //   anchorPoint: new google.maps.Point(0, -29)\n    // });\n\n    autocomplete.addListener('place_changed', () => {\n      infowindow.close();\n      // marker.setVisible(true);\n      var place = autocomplete.getPlace();\n      if (!place.geometry) {\n        // User entered the name of a Place that was not suggested and\n        // pressed the Enter key, or the Place Details request failed.\n        window.alert(\"No details available for input: '\" + place.name + \"'\");\n        return;\n      } else {\n        this.lat_marker = place.geometry.location.lat()\n        this.lng_market = place.geometry.location.lng()\n      }\n\n      // If the place has a geometry, then present it on a map.\n\n      //marker.setPosition(place.geometry.location);\n      //marker.setVisible(true);\n      var address = '';\n      if (place.address_components) {\n        address = [\n          (place.address_components[0] && place.address_components[0].short_name || ''),\n          (place.address_components[1] && place.address_components[1].short_name || ''),\n          (place.address_components[2] && place.address_components[2].short_name || '')\n        ].join(' ');\n        this.plotAddress = address\n      }\n\n\n    });\n    // google.maps.event.addListener( marker,'dragend', (event) => {\n    //   this.geocodePosition(marker.getPosition());\n    // });\n\n  }\n  onRemove = (item: UploadFile) => {\n    let index = this.plotImagesList.findIndex(data => data.uid == item.uid)\n    this.plotImagesList.splice(index, 1)\n    this.plotImagesListForNZ = this.plotImagesList\n    console.log(this.plotImagesList)\n  }\n  ondragEnd(event) {\n    console.log(event.coords.lat)\n    this.lat_marker = event.coords.lat\n    this.lng_market = event.coords.lng\n    console.log(`${this.lat_marker}`)\n  }\n  onCustRequ(type: number) {\n    this.uploadingType = type\n    if (this.uploadingType == 1) {\n      this.uploadLimit = 0\n    }\n    else if (type == 2 || type == 3) {\n      this.uploadLimit = 1\n    }\n  }\n  customReq = (item: UploadXHRArgs) => {\n    console.log('updlaosdaf', this.uploadingType)\n    const formData = new FormData();\n    let url = ''\n    if (this.uploadingType == 1 || this.uploadingType == 3) {\n      console.log('enter to image')\n      url = this._appService.imageurl\n      formData.append('image', item.file as any);\n    }\n    else if (this.uploadingType == 2) {\n      url = this._appService.fileUrl\n      console.log('enter to file')\n      formData.append('file', item.file as any);\n    }\n    const req = new HttpRequest('POST', url, formData, {\n      reportProgress: true,\n      withCredentials: false\n    });\n    return this.http.request(req).subscribe(\n      (event: any) => {\n        if (event.type === HttpEventType.UploadProgress) {\n          if (event.total! > 0) {\n            (event as any).percent = (event.loaded / event.total!) * 100;\n          }\n          item.onProgress!(event, item.file!);\n        } else if (event instanceof HttpResponse) {\n          item.onSuccess!(event.body, item.file!, event);\n          this.nzMessageService.success('upload successfully.');\n          if (this.uploadingType == 1) {\n            var url = event.body.extras.Image550\n            console.log(event.body.extras.ImageOriginal)\n            this.plotImagesList.push({\n              uid: item.file.uid,\n              name: item.file.name,\n              status: 'done',\n              url: url,\n              thumbUrl: url,\n              ImageID: event.body.extras.ImageID\n            })\n            console.log('before ', this.plotImagesList)\n            this.plotImagesListForNZ = this.plotImagesList;\n            console.log('after ', this.plotImagesList)\n          }\n          else if (this.uploadingType == 2) {\n            var url = event.body.extras.File_Path\n            console.log(event.body.extras.ImageOriginal)\n            this.plotFileList.push({\n              uid: item.file.uid,\n              name: 'Plot Doc',\n              status: 'done',\n              url: url,\n              thumbUrl: url,\n              FileID: event.body.extras.FileID\n            })\n            this.plotDocListForNZ = this.plotFileList\n          }\n          else if (this.uploadingType == 3) {\n            var url = event.body.extras.Image550\n            console.log(event.body.extras.ImageOriginal)\n            this.companyImagesList.push({\n              uid: item.file.uid,\n              name: item.file.name,\n              status: 'done',\n              url: url,\n              thumbUrl: url,\n              ImageID: event.body.extras.ImageID\n            })\n            this.comapnyListForNz =this.companyImagesList\n          }\n\n        }\n\n      },\n      err => {\n        item.onError!(err, item.file!);\n      }\n    );\n  };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddPlotsComponent } from './add-plots.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AddPlotsRoutingModule } from './add-plots.routing';\n// import { AgmCoreModule } from '@agm/core';\nimport { SharedModule } from 'src/app/shared.modue';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AddPlotsRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    // AgmCoreModule.forRoot({\n    //   apiKey: 'AIzaSyAXJQ218iBxDg8jQf8iUVnXP95FbfDIzQE'\n    // })\n  ],\n  declarations: [AddPlotsComponent]\n})\nexport class AddPlotsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AddPlotsComponent } from './add-plots.component';\n\nconst routes: Routes = [\n  { path: '', component: AddPlotsComponent }\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddPlotsRoutingModule {}\n"],"sourceRoot":""}