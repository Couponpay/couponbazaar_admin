{"version":3,"sources":["webpack:///./src/app/state-module/state-module-routing.module.ts","webpack:///./src/app/state-module/state-module.component.css","webpack:///./src/app/state-module/state-module.component.html","webpack:///./src/app/state-module/state-module.component.ts","webpack:///./src/app/state-module/state-module.module.ts"],"names":[],"mappings":"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","file":"state-module-state-module-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { StateModuleComponent } from './state-module.component';\n\nconst routes: Routes = [\n    { path: '', component: StateModuleComponent }\n];\n\n@NgModule({\n    imports: [CommonModule, RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class StateModuleRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXRlLW1vZHVsZS9zdGF0ZS1tb2R1bGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div nz-row *ngIf=\\\"viewForm==false\\\">\\n  <div nz-col nzSpan=\\\"4\\\" [nzOffset]=\\\"20\\\">\\n    <button nz-button nzType=\\\"primary\\\" style=\\\"float: right;width: 100%\\\" (click)=\\\"OnclickProductAdd()\\\">\\n      Add State\\n      </button>\\n  </div>\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"padding: 20px 0px;\\\">\\n    <nz-tabset>\\n      <nz-tab (nzClick)=\\\"onTabClick(1)\\\" nzTitle=\\\"Active States\\\">\\n      </nz-tab>\\n      <nz-tab (nzClick)=\\\"onTabClick(2)\\\" nzTitle=\\\"Inactivated States\\\">\\n      </nz-tab>\\n    </nz-tabset>\\n    <nz-table #basicTable [nzLoading]=\\\"isTableListLoadin\\\" nzShowPagination=\\\"false\\\" [nzData]=\\\"StatesListArray\\\"\\n      style=\\\"background: #FFF;\\\">\\n      <thead>\\n        <tr>\\n          <th>S.No</th>\\n          <th>State Name</th>\\n          <th>created at</th>\\n          <th></th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let data of StatesListArray\\\">\\n          <td>{{data.SNo}}</td>\\n          <td>{{data.State_Name}}</td>\\n          <td>{{data.created_at | date:\\\"medium\\\"}}</td>\\n          <td> <a (click)=\\\"onEdit(data)\\\">Edit</a></td>\\n          <td>\\n            <span [ngSwitch]=\\\"data.Status\\\">\\n              <span *ngSwitchCase=true>\\n                <a nz-popconfirm (nzOnConfirm)=\\\"onActionOnHelp(data)\\\"\\n                  nzTitle=\\\"Are you sure you want to Inactive this?\\\">Make Inactive</a>\\n              </span>\\n              <span *ngSwitchCase=false>\\n                <a style=\\\"color: red;\\\" nz-popconfirm (nzOnConfirm)=\\\"onActionOnHelp(data)\\\"\\n                  nzTitle=\\\"Are you sure you want to Active this?\\\">Make Active</a>\\n              </span>\\n              <span *ngSwitchDefault>\\n                NA\\n              </span>\\n            </span>\\n          </td>\\n        </tr>\\n\\n      </tbody>\\n    </nz-table>\\n  </div>\\n  <nz-pagination [nzShowTotal]=\\\"totalTemplate\\\" (nzPageIndexChange)=\\\"onNextPage($event)\\\" [nzPageSize]=\\\"limit\\\"\\n  [nzPageIndex]=\\\"currentPage\\\" [nzTotal]=\\\"Count\\\"></nz-pagination>\\n<ng-template #totalTemplate let-total>Total {{ Count }}</ng-template>\\n</div>\\n\\n<div nz-row *ngIf=\\\"viewForm==true\\\">\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"padding: 20px 0px;\\\">\\n    <nz-card>\\n    <form nz-form [formGroup]=\\\"addForm\\\" class=\\\"login-form\\\">\\n\\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"S_NO\\\">S NO</nz-form-label>\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"SNo\\\" nz-input placeholder=\\\"Please enter S NO\\\" />\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div>\\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >State Name</nz-form-label>\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n                <input type=\\\"text\\\" formControlName=\\\"State_Name\\\" nz-input placeholder=\\\"Please enter State Name\\\" />\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div>\\n\\n      <div nz-row style=\\\"margin-top: 30px;\\\">\\n       \\n        <div nz-col nzSpan=\\\"3\\\" [nzOffset]=\\\"3\\\">\\n              <button nz-button nzType=\\\"primary\\\" (click)=\\\"onClickSubmitForm()\\\" style=\\\"width:100%\\\"><span>{{onEditOpen?\\\"Update State\\\":\\\"Create State\\\"}}</span></button> \\n        </div>\\n        <div nz-col nzSpan=\\\"2\\\" [nzOffset]=\\\"1\\\">\\n          <button nz-button nzType=\\\"default\\\" (click)=\\\"close()\\\" style=\\\"width:100%\\\">close</button> \\n    </div>\\n      </div>\\n    \\n    </form>\\n  </nz-card>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { AppService } from 'src/app/app.service';\n\n@Component({\n  selector: 'app-state-module',\n  templateUrl: './state-module.component.html',\n  styleUrls: ['./state-module.component.css']\n})\nexport class StateModuleComponent implements OnInit {\n\n  skip = 0;\n  limit = 10;\n  Count: number;\n  onEditOpen = false\n  currentPage: number = 1;\n\n  lablewidth = 8\n  controlwidth = 10\n  viewForm = false\n  isTableListLoadin = false\n  addForm: FormGroup;\n\n  StatesListArray = [];\n  selectedData: any;\n\n  Status: number;\n  constructor(\n    private fb: FormBuilder,\n    private nzMessageService: NzMessageService,\n    public _appService: AppService\n  ) { }\n\n  ngOnInit() {\n    this.addForm = this.fb.group({\n      State_Name: [null, [Validators.required]],\n      SNo: [null, [Validators.required]]\n    });\n    this.onTabClick(1)\n   \n  }\n  onTabClick(tabNumber: number) {\n    this.Status = tabNumber\n    this.getTableList()\n  }\n  \n  getTableList() {\n    this.isTableListLoadin = true\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      skip: this.skip,\n      limit: this.limit,\n      Status:this.Status\n    }\n    try {\n\n      this._appService.postMethod('List_States', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            this.isTableListLoadin = false\n            if (this.skip == 0) {\n              this.currentPage = 1\n              this.Count = resp.extras.Count\n            }\n           \n            this.StatesListArray = resp.extras.Data\n            this.Count = resp.extras.Count\n          } else {\n            this.isTableListLoadin = false\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n  \n  onNextPage(event: number) {\n    this.currentPage = event\n    this.skip = (event - 1) * this.limit\n    this.getTableList()\n  }\n  OnclickProductAdd(){\n    this.viewForm = true\n    this.onEditOpen = false\n  }\n\n  onClickSubmitForm(){\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n    let body = {}\n    let url = ''\n    if (this.onEditOpen == true) {\n      url = 'Edit_State'\n      body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        State_Name: this.addForm.value.State_Name,\n        SNo: this.addForm.value.SNo,\n        StateID: this.selectedData.StateID\n\n      }\n    } else {\n      url = 'Add_State'\n      body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        State_Name: this.addForm.value.State_Name,\n        SNo: this.addForm.value.SNo,\n      }\n    }\n\n    try {\n\n      this._appService.postMethod(url, body)\n        .subscribe(resp => {\n          if (resp.success) {\n            if (this.onEditOpen == true) {\n              this.nzMessageService.success('State Updated Sucessfully')\n            } else {\n              this.nzMessageService.success('State Created Sucessfully')\n            }\n            this.close()\n            this.getTableList()\n           \n          } else {\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n  \n  close(){\n    this.viewForm = false;\n    this.onEditOpen = false\n    this.addForm.reset()\n  }\n  onEdit(data){\n    this.viewForm = true;\n    this.selectedData = data,\n    this.onEditOpen = true\n    this.addForm.patchValue({\n      State_Name: data.State_Name,\n      SNo: data.SNo,\n\n    })\n   \n  }\n\n  \n  onActionOnHelp(data) {\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      StateID: data.StateID\n    }\n    try {\n\n      this._appService.postMethod('Activate_Inactivate_State', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            let msg;\n            if (data.Status) {\n              msg = 'Inactivated Successfully'\n            } else {\n              msg = 'Activated Successfully'\n            }\n            this.getTableList()\n            this.nzMessageService.success(msg)\n\n          } else {\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StateModuleComponent } from './state-module.component';\nimport { StateModuleRoutingModule } from './state-module-routing.module';\nimport { SharedModule } from '../shared.modue';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StateModuleRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [StateModuleComponent]\n})\nexport class StateModuleModule { }\n"],"sourceRoot":""}