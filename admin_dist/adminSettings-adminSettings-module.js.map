{"version":3,"sources":["webpack:///./src/app/adminSettings/adminSettings.component.css","webpack:///./src/app/adminSettings/adminSettings.component.html","webpack:///./src/app/adminSettings/adminSettings.component.ts","webpack:///./src/app/adminSettings/adminSettings.module.ts","webpack:///./src/app/adminSettings/adminSettings.routing.ts"],"names":[],"mappings":"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","file":"adminSettings-adminSettings-module.js","sourcesContent":["module.exports = \".login-form {\\r\\n    max-width: 30%;\\r\\n   \\r\\n    padding: 15px;\\r\\n    margin-left: 25px;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .login-form-forgot {\\r\\n    float: right;\\r\\n  }\\r\\n\\r\\n  .login-form-button {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW5TZXR0aW5ncy9hZG1pblNldHRpbmdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjOztJQUVkLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsV0FBVztFQUNiOztFQUVBO0lBQ0UsWUFBWTtFQUNkOztFQUVBO0lBQ0UsV0FBVztFQUNiIiwiZmlsZSI6InNyYy9hcHAvYWRtaW5TZXR0aW5ncy9hZG1pblNldHRpbmdzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybSB7XHJcbiAgICBtYXgtd2lkdGg6IDMwJTtcclxuICAgXHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDI1cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIC5sb2dpbi1mb3JtLWZvcmdvdCB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgfVxyXG5cclxuICAubG9naW4tZm9ybS1idXR0b24ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfSJdfQ== */\"","module.exports = \"<nz-tabset>\\r\\n    <nz-tab (nzClick)=\\\"oncreateAdmin_Tab()\\\" nzTitle=\\\"Create Admin\\\">\\r\\n        <form nz-form [formGroup]=\\\"validateForm\\\" class=\\\"login-form\\\" (ngSubmit)=\\\"submitForm()\\\">\\r\\n            <nz-form-item>\\r\\n                <nz-form-control>\\r\\n                  <nz-input-group [nzPrefix]=\\\"prefixUser\\\">\\r\\n                    <input type=\\\"text\\\" nz-input formControlName=\\\"userName\\\" placeholder=\\\"User Name\\\">\\r\\n                  </nz-input-group>\\r\\n                  <nz-form-explain *ngIf=\\\"validateForm.get('userName').dirty && validateForm.get('userName').errors\\\">Please input your username!</nz-form-explain>\\r\\n                </nz-form-control>\\r\\n              </nz-form-item>\\r\\n\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <nz-input-group >\\r\\n                  <input type=\\\"text\\\" nz-input formControlName=\\\"userEmail\\\" placeholder=\\\"User Email\\\">\\r\\n                </nz-input-group>\\r\\n                <nz-form-explain *ngIf=\\\"validateForm.get('userEmail').dirty && validateForm.get('userEmail').errors\\\">Please input Email!</nz-form-explain>\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <nz-input-group [nzPrefix]=\\\"prefixLock\\\">\\r\\n                  <input type=\\\"password\\\" nz-input formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                </nz-input-group>\\r\\n                <nz-form-explain *ngIf=\\\"validateForm.get('password').dirty && validateForm.get('password').errors\\\">Please input your Password!</nz-form-explain>\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n            <nz-form-item>\\r\\n                <nz-form-control>\\r\\n                  <nz-input-group >\\r\\n                      <nz-form-label [nzSpan]=\\\"8\\\" nzFor=\\\"email\\\">Admin permissions</nz-form-label>\\r\\n                      <nz-form-control [nzSpan]=\\\"14\\\">\\r\\n                          <nz-switch [(ngModel)]=\\\"switchValue\\\" formControlName=\\\"AdminPermistion\\\"></nz-switch>                    \\r\\n                            </nz-form-control>\\r\\n                      \\r\\n                  </nz-input-group>\\r\\n                </nz-form-control>\\r\\n              </nz-form-item>\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n               \\r\\n                <button nz-button class=\\\"login-form-button\\\" [nzType]=\\\"'primary'\\\">Create </button>\\r\\n                \\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n          </form>\\r\\n          <ng-template #prefixUser><i nz-icon type=\\\"user\\\"></i></ng-template>\\r\\n          <ng-template #prefixLock><i nz-icon type=\\\"lock\\\"></i></ng-template>\\r\\n    </nz-tab>\\r\\n    <nz-tab (nzClick)=\\\"onViewAdmins_Tab()\\\" nzTitle=\\\"View Admin\\\">\\r\\n        <div nz-row class=\\\"logtable\\\">\\r\\n            <div nz-col nzSpan=\\\"24\\\">\\r\\n              <nz-table class=\\\"logTable\\\" nzShowPagination=\\\"false\\\" #basicTable [nzData]=\\\"adminUsers\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th> Name</th>\\r\\n                    <th>EmailID</th>\\r\\n                    <th>Admin Section Permision</th>\\r\\n                    \\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let data of adminUsers;let i = index\\\">\\r\\n                    <td>{{data.Name}}</td>\\r\\n                    <td>{{data.EmailID}}</td>\\r\\n                    <td>{{data.Admin_Section_Permision}}</td>\\r\\n                    \\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </nz-table>\\r\\n          \\r\\n            </div>\\r\\n          </div>\\r\\n          <nz-pagination (nzPageIndexChange)=\\\"onNextPage($event)\\\"  [nzPageSize]=\\\"limit\\\" [nzPageIndex]=\\\"currentPage\\\" [nzTotal]=\\\"totalItem\\\"></nz-pagination>\\r\\n    </nz-tab>\\r\\n   \\r\\n    </nz-tabset>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AppService } from '../app.service';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n  selector: 'app-adminSettings',\r\n  templateUrl: './adminSettings.component.html',\r\n  styleUrls: ['./adminSettings.component.css']\r\n})\r\nexport class AdminSettingsComponent implements OnInit {\r\n  limit=this._appService.limit\r\n  currentPage=1\r\n  validateForm: FormGroup;\r\n\r\n  switchValue:boolean=false \r\n  adminUsers: any;\r\n  totalItem: any;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private _appService:AppService,\r\n    private nzMessageService:NzMessageService,\r\n    ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.validateForm = this.fb.group({\r\n      userName: [ null, [ Validators.required ] ],\r\n      userEmail: [ null, [ Validators.required ] ],\r\n      password: [ null, [ Validators.required ] ],\r\n      AdminPermistion: [ false ],\r\n    });\r\n  }\r\n  oncreateAdmin_Tab(){\r\n    this.validateForm.reset()\r\n  }\r\n  onViewAdmins_Tab(){\r\n    this.viewAdmins(0)\r\n\r\n  }\r\n  submitForm(): void {\r\n    for (const i in this.validateForm.controls) {\r\n      this.validateForm.controls[ i ].markAsDirty();\r\n      this.validateForm.controls[ i ].updateValueAndValidity();\r\n    }\r\n    if(this.validateForm.valid){\r\n      let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n      let body = {\r\n        AdminID: adminData.AdminID,\r\n        SessionID: adminData.SessionID,\r\n        Name: this.validateForm.value.userName,\r\n        Password:this.validateForm.value.password,\r\n        Admin_Section_Permision:this.validateForm.value.AdminPermistion,\r\n        EmailID: this.validateForm.value.userEmail\r\n      }\r\n      try {\r\n  \r\n        this._appService.postMethod('Create_Admin_User', body)\r\n          .subscribe(resp => {\r\n  \r\n            if (resp.success) {\r\n             this.nzMessageService.success('admin Added Sucessfully')\r\n             this.validateForm.reset()\r\n  \r\n  \r\n            } else {\r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n  \r\n  \r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) {\r\n  \r\n      }\r\n\r\n    }\r\n  }\r\n  viewAdmins(skip){\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n      let body = {\r\n        AdminID: adminData.AdminID,\r\n        SessionID: adminData.SessionID,\r\n        skip:skip,\r\n        limit:this._appService.limit\r\n      }\r\n      try {\r\n  \r\n        this._appService.postMethod('List_All_Admin_User', body)\r\n          .subscribe(resp => {\r\n  \r\n            if (resp.success) {\r\n              if(skip==0){\r\n                this.currentPage=1\r\n              }\r\n              this.totalItem=resp.extras.Count\r\n             this.adminUsers=resp.extras.Data\r\n  \r\n  \r\n            } else {\r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n  \r\n  \r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) {\r\n  \r\n      }\r\n  }\r\n  onNextPage(event:number){\r\n    this.currentPage = this.currentPage\r\n    let skip=(event-1)*this._appService.limit\r\n    this.viewAdmins(skip)\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminSettingsComponent } from './adminSettings.component';\r\nimport { SharedModule } from '../shared.modue';\r\nimport { AdminSettingsRoutes } from './adminSettings.routing';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AdminSettingsRoutes\r\n  ],\r\n  declarations: [AdminSettingsComponent]\r\n})\r\nexport class AdminSettingsModule { }\r\n","import { AdminSettingsComponent } from './adminSettings.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path:'',component:AdminSettingsComponent },\r\n];\r\n\r\nexport const AdminSettingsRoutes = RouterModule.forChild(routes);\r\n"],"sourceRoot":""}