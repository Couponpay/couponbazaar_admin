{"version":3,"sources":["webpack:///./src/app/adminSettings/adminSettings.component.css","webpack:///./src/app/adminSettings/adminSettings.component.html","webpack:///./src/app/adminSettings/adminSettings.component.ts","webpack:///./src/app/adminSettings/adminSettings.module.ts","webpack:///./src/app/adminSettings/adminSettings.routing.ts"],"names":[],"mappings":"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","file":"adminSettings-adminSettings-module.js","sourcesContent":["module.exports = \".login-form {\\n    max-width: 30%;\\n   \\n    padding: 15px;\\n    margin-left: 25px;\\n    width: 100%;\\n  }\\n\\n  .login-form-forgot {\\n    float: right;\\n  }\\n\\n  .login-form-button {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW5TZXR0aW5ncy9hZG1pblNldHRpbmdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjOztJQUVkLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsV0FBVztFQUNiOztFQUVBO0lBQ0UsWUFBWTtFQUNkOztFQUVBO0lBQ0UsV0FBVztFQUNiIiwiZmlsZSI6InNyYy9hcHAvYWRtaW5TZXR0aW5ncy9hZG1pblNldHRpbmdzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybSB7XG4gICAgbWF4LXdpZHRoOiAzMCU7XG4gICBcbiAgICBwYWRkaW5nOiAxNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLmxvZ2luLWZvcm0tZm9yZ290IHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gIH1cblxuICAubG9naW4tZm9ybS1idXR0b24ge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9Il19 */\"","module.exports = \"<nz-tabset>\\n    <nz-tab (nzClick)=\\\"oncreateAdmin_Tab()\\\" nzTitle=\\\"Create Admin\\\">\\n        <form nz-form [formGroup]=\\\"validateForm\\\" class=\\\"login-form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n            <nz-form-item>\\n                <nz-form-control>\\n                  <nz-input-group [nzPrefix]=\\\"prefixUser\\\">\\n                    <input type=\\\"text\\\" nz-input formControlName=\\\"userName\\\" placeholder=\\\"User Name\\\">\\n                  </nz-input-group>\\n                  <nz-form-explain *ngIf=\\\"validateForm.get('userName').dirty && validateForm.get('userName').errors\\\">Please input your username!</nz-form-explain>\\n                </nz-form-control>\\n              </nz-form-item>\\n\\n            <nz-form-item>\\n              <nz-form-control>\\n                <nz-input-group >\\n                  <input type=\\\"text\\\" nz-input formControlName=\\\"userEmail\\\" placeholder=\\\"User Email\\\">\\n                </nz-input-group>\\n                <nz-form-explain *ngIf=\\\"validateForm.get('userEmail').dirty && validateForm.get('userEmail').errors\\\">Please input Email!</nz-form-explain>\\n              </nz-form-control>\\n            </nz-form-item>\\n            <nz-form-item>\\n              <nz-form-control>\\n                <nz-input-group [nzPrefix]=\\\"prefixLock\\\">\\n                  <input type=\\\"password\\\" nz-input formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n                </nz-input-group>\\n                <nz-form-explain *ngIf=\\\"validateForm.get('password').dirty && validateForm.get('password').errors\\\">Please input your Password!</nz-form-explain>\\n              </nz-form-control>\\n            </nz-form-item>\\n            <nz-form-item>\\n                <nz-form-control>\\n                  <nz-input-group >\\n                      <nz-form-label [nzSpan]=\\\"8\\\" nzFor=\\\"email\\\">Admin permissions</nz-form-label>\\n                      <nz-form-control [nzSpan]=\\\"14\\\">\\n                          <nz-switch [(ngModel)]=\\\"switchValue\\\" formControlName=\\\"AdminPermistion\\\"></nz-switch>                    \\n                            </nz-form-control>\\n                      \\n                  </nz-input-group>\\n                </nz-form-control>\\n              </nz-form-item>\\n            <nz-form-item>\\n              <nz-form-control>\\n               \\n                <button nz-button class=\\\"login-form-button\\\" [nzType]=\\\"'primary'\\\">Create </button>\\n                \\n              </nz-form-control>\\n            </nz-form-item>\\n          </form>\\n          <ng-template #prefixUser><i nz-icon type=\\\"user\\\"></i></ng-template>\\n          <ng-template #prefixLock><i nz-icon type=\\\"lock\\\"></i></ng-template>\\n    </nz-tab>\\n    <nz-tab (nzClick)=\\\"onViewAdmins_Tab()\\\" nzTitle=\\\"View Admin\\\">\\n        <div nz-row class=\\\"logtable\\\">\\n            <div nz-col nzSpan=\\\"24\\\">\\n              <nz-table class=\\\"logTable\\\" nzShowPagination=\\\"false\\\" #basicTable [nzData]=\\\"adminUsers\\\">\\n                <thead>\\n                  <tr>\\n                    <th> Name</th>\\n                    <th>EmailID</th>\\n                    <th>Admin Section Permision</th>\\n                    \\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let data of adminUsers;let i = index\\\">\\n                    <td>{{data.Name}}</td>\\n                    <td>{{data.EmailID}}</td>\\n                    <td>{{data.Admin_Section_Permision}}</td>\\n                    \\n                  </tr>\\n                </tbody>\\n              </nz-table>\\n          \\n            </div>\\n          </div>\\n          <nz-pagination (nzPageIndexChange)=\\\"onNextPage($event)\\\"  [nzPageSize]=\\\"limit\\\" [nzPageIndex]=\\\"currentPage\\\" [nzTotal]=\\\"totalItem\\\"></nz-pagination>\\n    </nz-tab>\\n   \\n    </nz-tabset>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppService } from '../app.service';\nimport { NzMessageService } from 'ng-zorro-antd';\n\n@Component({\n  selector: 'app-adminSettings',\n  templateUrl: './adminSettings.component.html',\n  styleUrls: ['./adminSettings.component.css']\n})\nexport class AdminSettingsComponent implements OnInit {\n  limit=this._appService.limit\n  currentPage=1\n  validateForm: FormGroup;\n\n  switchValue:boolean=false \n  adminUsers: any;\n  totalItem: any;\n\n  constructor(private fb: FormBuilder,\n    private _appService:AppService,\n    private nzMessageService:NzMessageService,\n    ) {\n  }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      userName: [ null, [ Validators.required ] ],\n      userEmail: [ null, [ Validators.required ] ],\n      password: [ null, [ Validators.required ] ],\n      AdminPermistion: [ false ],\n    });\n  }\n  oncreateAdmin_Tab(){\n    this.validateForm.reset()\n  }\n  onViewAdmins_Tab(){\n    this.viewAdmins(0)\n\n  }\n  submitForm(): void {\n    for (const i in this.validateForm.controls) {\n      this.validateForm.controls[ i ].markAsDirty();\n      this.validateForm.controls[ i ].updateValueAndValidity();\n    }\n    if(this.validateForm.valid){\n      let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n      let body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        Name: this.validateForm.value.userName,\n        Password:this.validateForm.value.password,\n        Admin_Section_Permision:this.validateForm.value.AdminPermistion,\n        EmailID: this.validateForm.value.userEmail\n      }\n      try {\n  \n        this._appService.postMethod('Create_Admin_User', body)\n          .subscribe(resp => {\n  \n            if (resp.success) {\n             this.nzMessageService.success('admin Added Sucessfully')\n             this.validateForm.reset()\n  \n  \n            } else {\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n  \n  \n            }\n          },\n            error => {\n  \n            })\n      } catch (e) {\n  \n      }\n\n    }\n  }\n  viewAdmins(skip){\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n      let body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        skip:skip,\n        limit:this._appService.limit\n      }\n      try {\n  \n        this._appService.postMethod('List_All_Admin_User', body)\n          .subscribe(resp => {\n  \n            if (resp.success) {\n              if(skip==0){\n                this.currentPage=1\n              }\n              this.totalItem=resp.extras.Count\n             this.adminUsers=resp.extras.Data\n  \n  \n            } else {\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n  \n  \n            }\n          },\n            error => {\n  \n            })\n      } catch (e) {\n  \n      }\n  }\n  onNextPage(event:number){\n    this.currentPage = this.currentPage\n    let skip=(event-1)*this._appService.limit\n    this.viewAdmins(skip)\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminSettingsComponent } from './adminSettings.component';\nimport { SharedModule } from '../shared.modue';\nimport { AdminSettingsRoutes } from './adminSettings.routing';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminSettingsRoutes\n  ],\n  declarations: [AdminSettingsComponent]\n})\nexport class AdminSettingsModule { }\n","import { AdminSettingsComponent } from './adminSettings.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path:'',component:AdminSettingsComponent },\n];\n\nexport const AdminSettingsRoutes = RouterModule.forChild(routes);\n"],"sourceRoot":""}