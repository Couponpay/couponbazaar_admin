{"version":3,"sources":["webpack:///./src/app/vendor/products-by-shop/products-by-shop.component.css","webpack:///./src/app/vendor/products-by-shop/products-by-shop.component.html","webpack:///./src/app/vendor/products-by-shop/products-by-shop.component.ts","webpack:///./src/app/vendor/products-by-shop/products-by-shop.module.ts","webpack:///./src/app/vendor/products-by-shop/products-by-shop.routing.ts"],"names":[],"mappings":"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","file":"products-by-shop-products-by-shop-module.js","sourcesContent":["module.exports = \".ant-row{\\r\\n    margin-bottom: 7px;\\r\\n}\\r\\n.editable-row-operations a {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmVuZG9yL3Byb2R1Y3RzLWJ5LXNob3AvcHJvZHVjdHMtYnktc2hvcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxpQkFBaUI7RUFDbkIiLCJmaWxlIjoic3JjL2FwcC92ZW5kb3IvcHJvZHVjdHMtYnktc2hvcC9wcm9kdWN0cy1ieS1zaG9wLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYW50LXJvd3tcclxuICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxufVxyXG4uZWRpdGFibGUtcm93LW9wZXJhdGlvbnMgYSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICB9Il19 */\"","module.exports = \"<div nz-row>\\r\\n  <div nz-col nzSpan=\\\"24\\\">\\r\\n    <a [routerLink]=\\\"[ '/dashboard','vendor', 'view-vednor']\\\">Back</a>\\r\\n  </div>\\r\\n</div>\\r\\n<div nz-row>\\r\\n  <div nz-col nzSpan=\\\"24\\\">\\r\\n    <span>Shope Name:<i><b> {{shopName}}</b></i> </span>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div nz-row>\\r\\n  <div nz-col nzSpan=\\\"24\\\">\\r\\n    <button nz-button nzType=\\\"dashed\\\" (click)=\\\"onaddProduct()\\\">click to Add Stock</button>\\r\\n  </div>\\r\\n</div>\\r\\n<div nz-row>\\r\\n  <div nz-col nzSpan=\\\"24\\\">\\r\\n    <nz-table #shopProducts class=\\\"productsTable\\\" nzShowPagination=\\\"false\\\" [nzData]=\\\"productsOfshop\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Product Name</th>\\r\\n          <th>Product Price</th>\\r\\n          <th>Available Stock</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let data of productsOfshop\\\">\\r\\n\\r\\n          <td>{{data.Product_Name}}\\r\\n            <i class=\\\"fa fa-info-circle\\\" nz-popover nzPlacement=\\\"right\\\" nzTitle=\\\"Product Share\\\"\\r\\n              [nzContent]=\\\"contentTemplate\\\" nzTrigger=\\\"hover\\\" style=\\\"font-size:15px\\\"></i>\\r\\n          </td>\\r\\n          <td>{{data.Product_Price}}</td>\\r\\n          <td>{{data.Shop_Available_Stock}} </td>\\r\\n          <ng-template #contentTemplate>\\r\\n            <p>Introducer Share:{{data.Product_Price_Divisions.Introducer_Share}}%</p>\\r\\n            <p>Buyer Share:{{data.Product_Price_Divisions.Buyer_Share}}%</p>\\r\\n            <p>Trimer Share:{{data.Product_Price_Divisions.Trimer_Share}}%</p>\\r\\n            <p>Shop Share:{{data.Product_Price_Divisions.Shop_Share}}%</p>\\r\\n            <p>Company Share:{{data.Product_Price_Divisions.Company_Share}}%</p>\\r\\n          </ng-template>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </nz-table>\\r\\n    <nz-pagination (nzPageIndexChange)=\\\"onNextPage_ProductsByShop($event)\\\" [nzPageSize]=\\\"limit\\\"\\r\\n      [nzPageIndex]=\\\"currentPage\\\" [nzTotal]=\\\"totalItem\\\">\\r\\n    </nz-pagination>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<nz-modal [(nzVisible)]=\\\"isProductModal\\\" nzTitle=\\\"Add Stock To {{shopName}}\\\" nzOkText=\\\"Add Product\\\" nzFooter=\\\" \\\"\\r\\n  (nzOnOk)=\\\"onlinkingProduct()\\\" (nzOnCancel)=\\\"handleCancel()\\\">\\r\\n  <nz-table #basicTable [nzData]=\\\"prodcutsList\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Product Name</th>\\r\\n        <th>Product Price</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <ng-container *ngFor=\\\"let data of prodcutsList; let i=index\\\">\\r\\n\\r\\n        <tr>\\r\\n          <td>{{data.Product_Name}}</td>\\r\\n          <td>{{data.Product_Price}}</td>\\r\\n          <td><a (click)=\\\"onAddStack(data,i)\\\">Add Stock</a></td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"isaddStack==i\\\">\\r\\n          <td colspan=\\\"3\\\">\\r\\n            <table>\\r\\n              <tbody>\\r\\n                <td>\\r\\n                  <nz-form-item>\\r\\n                    <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n                      <input id=\\\"stock\\\"  [(ngModel)]=\\\"stackPrice\\\"  type=\\\"number\\\"  \\r\\n                        placeholder=\\\"Stock Quantity\\\" nz-input>\\r\\n\\r\\n                    </nz-form-control>\\r\\n                  </nz-form-item>\\r\\n                  <nz-form-item>\\r\\n                    <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n                      <div class=\\\"editable-row-operations\\\" *ngIf=\\\"isaddStack==i\\\">\\r\\n                        <a (click)=\\\"onSaveStock(data,stackPrice)\\\">Save</a>\\r\\n\\r\\n                        <a nz-popconfirm nzTitle=\\\"Are you sure you want to cancel?\\\" (nzOnConfirm)=\\\"confirm()\\\" (nzOnCancel)=\\\"cancel()\\\"\\r\\n                          nzPlacement=\\\"rightTop\\\">cancel</a>\\r\\n                      </div>\\r\\n                    </nz-form-control>\\r\\n                  </nz-form-item>\\r\\n\\r\\n                </td>\\r\\n\\r\\n              </tbody>\\r\\n            </table>\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-container>\\r\\n\\r\\n\\r\\n    </tbody>\\r\\n  </nz-table>\\r\\n  <!-- <form nz-form #ProductLinking=\\\"ngForm\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-control [nzSpan]=\\\"12\\\">\\r\\n              <nz-select id=\\\"CountryName\\\" \\r\\n              [(ngModel)]=\\\"selectedproduct\\\" name=\\\"product\\\" nzShowSearch nzAllowClear nzPlaceHolder=\\\"Select Product\\\">\\r\\n              <nz-option *ngFor=\\\"let item of prodcutsList; let i=index\\\" [nzValue]=\\\"item\\\"\\r\\n                [nzLabel]=\\\"item.Product_Name+ '&'+ item.Product_Price\\\"></nz-option>\\r\\n            </nz-select>\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n            <nz-form-control  [nzSpan]=\\\"12\\\">\\r\\n              <input id=\\\"OperationInput\\\" required  type=\\\"text\\\" placeholder=\\\"Quantity\\\"\\r\\n                 nz-input ngModel name=\\\"OperationInput\\\">\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </form> -->\\r\\n</nz-modal>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { NgForm } from '@angular/forms';\r\nimport { EventEmitter } from 'events';\r\n\r\n@Component({\r\n  selector: 'app-products-by-shop',\r\n  templateUrl: './products-by-shop.component.html',\r\n  styleUrls: ['./products-by-shop.component.css']\r\n})\r\nexport class ProductsByShopComponent implements OnInit {\r\n  stackPrice: number;\r\n  selectedproduct;\r\n  id: number;\r\n  private sub: any;\r\n  totalItem: any;\r\n  prodcutsList: any = [];\r\n  ProductDetails: any;\r\n  shopName: any;\r\n  isProductModal: boolean;\r\n  productsOfshop = [];\r\n  shopid: any;\r\n  isaddStack: any;\r\n  limit = this._appService.limit\r\n  currentPage = 1\r\n  constructor(private route: ActivatedRoute,\r\n    private _appService: AppService,\r\n    private nzMessageService: NzMessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.id = +params['id']; // (+) converts string 'id' to a number\r\n      this.shopid = params.id\r\n      this.getProductsByShop(params.id, 0)\r\n      this.shopName = params['Shop_Name'];\r\n      // In a real app: dispatch action to load the details here.\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n  onNextPage_ProductsByShop(event) {\r\n    this.currentPage = event\r\n    let skip = (event - 1) * this._appService.limit\r\n    this.getProductsByShop(this.shopid, skip)\r\n  }\r\n  getProductsByShop(shopid, skip) {\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      ShopID: shopid,\r\n      skip: skip,\r\n      limit: this._appService.limit\r\n    }\r\n    try {\r\n\r\n      this._appService.postMethod('List_All_Shop_Product_Stocks', body)\r\n        .subscribe(resp => {\r\n\r\n          if (resp.success) {\r\n            if (skip == 0) {\r\n              this.currentPage = 1\r\n            }\r\n            this.totalItem = resp.extras.Count\r\n            this.productsOfshop = resp.extras.Data\r\n            if (this.productsOfshop.length == 0) {\r\n              this.nzMessageService.warning('No Products')\r\n            }\r\n\r\n\r\n          } else {\r\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n\r\n\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n  onaddProduct() {\r\n    this.isProductModal = true\r\n    this.isaddStack = -1\r\n    this.viewProducts()\r\n  }\r\n  handleCancel() {\r\n    this.isProductModal = false\r\n  }\r\n\r\n  viewProducts() {\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      skip: 0,\r\n      limit: 1000\r\n    }\r\n    try {\r\n\r\n      this._appService.postMethod('List_All_Products', body)\r\n        .subscribe(resp => {\r\n\r\n          if (resp.success) {\r\n            this.prodcutsList = resp.extras.Data\r\n\r\n          } else {\r\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n\r\n\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n  onlinkingProduct() {\r\n\r\n\r\n  }\r\n  onAddStack(data, i) {\r\n    this.stackPrice = null\r\n    this.isaddStack = i\r\n  }\r\n  onSaveStock(data, stockPrice) {\r\n    if(stockPrice>0){\r\n      let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n      let body = {\r\n        AdminID: adminData.AdminID,\r\n        SessionID: adminData.SessionID,\r\n        ShopID: this.shopid,\r\n        ProductID: data.ProductID,\r\n        OperationInput: stockPrice,\r\n        OperationType: 1\r\n  \r\n      }\r\n      try {\r\n        this._appService.postMethod('Update_Shop_Product_Stock', body)\r\n          .subscribe(resp => {\r\n  \r\n            if (resp.success) {\r\n              this.isProductModal = false\r\n              this.getProductsByShop(this.shopid, 0)\r\n              this.nzMessageService.success('product added to shop Sucessfully')\r\n  \r\n            } else {\r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n  \r\n  \r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) {\r\n  \r\n      }\r\n    }else{\r\n      this.nzMessageService.warning('Invalid Stock')\r\n    }\r\n  \r\n  }\r\n  confirm() {\r\n    this.stackPrice = null;\r\n    this.isaddStack = -1;\r\n  }\r\n  cancel() {\r\n  }\r\n\r\n}\r\n","import { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from './../../shared.modue';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductsByShopComponent } from './products-by-shop.component';\r\nimport { ProductsByShopRoutes } from './products-by-shop.routing';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ProductsByShopRoutes,\r\n    SharedModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [ProductsByShopComponent]\r\n})\r\nexport class ProductsByShopModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { ProductsByShopComponent } from './products-by-shop.component';\r\n\r\nconst routes: Routes = [\r\n  { path:'',component:ProductsByShopComponent },\r\n];\r\n\r\nexport const ProductsByShopRoutes = RouterModule.forChild(routes);\r\n"],"sourceRoot":""}