{"version":3,"sources":["webpack:///./src/app/banner/Banner.routing.ts","webpack:///./src/app/banner/banner.component.css","webpack:///./src/app/banner/banner.component.html","webpack:///./src/app/banner/banner.component.ts","webpack:///./src/app/banner/banner.module.ts"],"names":[],"mappings":"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","file":"banner-banner-module.js","sourcesContent":["\nimport { Routes, RouterModule } from '@angular/router';\nimport { BannerComponent } from './banner.component';\n\nconst routes: Routes = [\n  { path:'',component:BannerComponent },\n];\n\nexport const BannerRoutes = RouterModule.forChild(routes);\n","module.exports = \".footer {\\n    position: absolute;\\n    bottom: 0px;\\n    width: 100%;\\n    padding: 25px 16px;\\n    text-align: right;\\n    left: 0px;\\n    /* background: #fff; */\\n    top: 120px;\\n  }\\n  .primary_button{\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    background: linear-gradient(90deg, #1976d2 20%, #00dbfe 100%);\\n    border: coral;\\n    color: #fff;\\n    font-weight: 700;\\n    font-size: 17px;\\n  }\\n  .primary_button1{\\n    /* position: absolute;\\n    top: 8px;\\n    right: 219px; */\\n    float: right;\\n    background: linear-gradient(90deg, #1976d2 20%, #00dbfe 100%);\\n    border: coral;\\n    color: #fff;\\n    font-weight: 700;\\n    font-size: 17px;\\n    margin-right: 20px;\\n  }\\n  .primary_button2{\\n    /* position: absolute;\\n    top: 8px;\\n    right: 100px; */\\n    float: right;\\n    background: linear-gradient(90deg, #1976d2 20%, #00dbfe 100%);\\n    border: coral;\\n    color: #fff;\\n    font-weight: 700;\\n    font-size: 17px;\\n  }\\n  .formBorder{\\n      border: 1px solid #ccc;\\n  }\\n  nz-form-label{\\n      text-align: left;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmFubmVyL2Jhbm5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixTQUFTO0lBQ1Qsc0JBQXNCO0lBQ3RCLFVBQVU7RUFDWjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixRQUFRO0lBQ1IsNkRBQTZEO0lBQzdELGFBQWE7SUFDYixXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLGVBQWU7RUFDakI7RUFDQTtJQUNFOzttQkFFZTtJQUNmLFlBQVk7SUFDWiw2REFBNkQ7SUFDN0QsYUFBYTtJQUNiLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGtCQUFrQjtFQUNwQjtFQUNBO0lBQ0U7O21CQUVlO0lBQ2YsWUFBWTtJQUNaLDZEQUE2RDtJQUM3RCxhQUFhO0lBQ2IsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixlQUFlO0VBQ2pCO0VBQ0E7TUFDSSxzQkFBc0I7RUFDMUI7RUFDQTtNQUNJLGdCQUFnQjtFQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Jhbm5lci9iYW5uZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAyNXB4IDE2cHg7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgbGVmdDogMHB4O1xuICAgIC8qIGJhY2tncm91bmQ6ICNmZmY7ICovXG4gICAgdG9wOiAxMjBweDtcbiAgfVxuICAucHJpbWFyeV9idXR0b257XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICMxOTc2ZDIgMjAlLCAjMDBkYmZlIDEwMCUpO1xuICAgIGJvcmRlcjogY29yYWw7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gIH1cbiAgLnByaW1hcnlfYnV0dG9uMXtcbiAgICAvKiBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA4cHg7XG4gICAgcmlnaHQ6IDIxOXB4OyAqL1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICMxOTc2ZDIgMjAlLCAjMDBkYmZlIDEwMCUpO1xuICAgIGJvcmRlcjogY29yYWw7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICB9XG4gIC5wcmltYXJ5X2J1dHRvbjJ7XG4gICAgLyogcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogOHB4O1xuICAgIHJpZ2h0OiAxMDBweDsgKi9cbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMTk3NmQyIDIwJSwgIzAwZGJmZSAxMDAlKTtcbiAgICBib3JkZXI6IGNvcmFsO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICB9XG4gIC5mb3JtQm9yZGVye1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgfVxuICBuei1mb3JtLWxhYmVse1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfSJdfQ== */\"","module.exports = \"<div nz-row [nzGutter]=\\\"16\\\" style=\\\"margin-top: 25px;\\\">\\n\\n  <button nz-button nzType=\\\"primary\\\" (click)=\\\"open()\\\" class=\\\"primary_button\\\">Add Banner data</button>\\n\\n\\n</div>\\n<div nz-row [nzGutter]=\\\"16\\\" style=\\\"margin-top: 55px;\\\" *ngIf=\\\"visible==true\\\">\\n  <div nz-col nzSpan=\\\"10\\\">\\n\\n\\n    <nz-card [nzTitle]='cardTitle'>\\n      <ng-template #cardTitle>\\n        <span>{{onEditOpen?'Update Banner':'Create Banner'}}</span>\\n      </ng-template>\\n\\n      <form nz-form [formGroup]=\\\"createBanner\\\">\\n        <nz-form-item>\\n          <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\">S.No</nz-form-label>\\n          <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n            <input nz-input formControlName=\\\"SNo\\\" placeholder=\\\"please enter Banner S.No\\\" />\\n            <nz-form-explain *ngIf=\\\"createBanner.get('SNo').dirty && createBanner.get('SNo').errors\\\">Please\\n              input your SNo!</nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\">Banner Name</nz-form-label>\\n          <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n            <input nz-input formControlName=\\\"Banner_Name\\\" placeholder=\\\"please enter Banner Name\\\" />\\n            <nz-form-explain *ngIf=\\\"createBanner.get('Banner_Name').dirty && createBanner.get('Banner_Name').errors\\\">\\n              Please\\n              input your Language!</nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\">Upload Web Banner Image <br> (1680 X 280)</nz-form-label>\\n          <nz-form-control [nzSpan]=\\\"12\\\">\\n            <button nz-button nzType=\\\"link\\\" (click)=\\\"onUploadProductImage(1)\\\">Click To Upload</button>\\n\\n          </nz-form-control>  \\n\\n        </nz-form-item>\\n        <nz-form-item *ngIf=\\\"webBannerImageData.length>0\\\">\\n          <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\">Preview Web Image</nz-form-label>\\n          <nz-form-control [nzSpan]=\\\"12\\\"><a target=\\\"_blank\\\" [attr.href]=\\\"webBannerImageData[0].ImageOriginal\\\">Click To view\\n              Image</a></nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\">Upload Mobile Banner Image <br> (350 X 150)</nz-form-label>\\n          <nz-form-control [nzSpan]=\\\"12\\\">\\n            <button nz-button nzType=\\\"link\\\" (click)=\\\"onUploadProductImage(2)\\\">Click To Upload</button>\\n\\n          </nz-form-control>\\n\\n        </nz-form-item>\\n        <nz-form-item *ngIf=\\\"BannerImageData.length>0\\\">\\n          <nz-form-label [nzSm]=\\\"8\\\" [nzXs]=\\\"24\\\">Preview Mobile Image</nz-form-label>\\n          <nz-form-control [nzSpan]=\\\"12\\\"><a target=\\\"_blank\\\" [attr.href]=\\\"BannerImageData[0].ImageOriginal\\\">Click To view\\n              Image</a></nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item nz-row class=\\\"register-area\\\">\\n          <nz-form-control [nzSpan]=\\\"14\\\" [nzOffset]=\\\"2\\\">\\n            <button nz-button nzType=\\\"primary\\\" class=\\\"primary_button2 ant-btn ant-btn-primary\\\"\\n              (click)=\\\"BannerForm()\\\"><span>Submit</span></button>\\n            <button nz-button nzType=\\\"primary\\\" class=\\\"primary_button1 ant-btn ant-btn-primary\\\"\\n              (click)=\\\"close()\\\"><span>close</span></button>\\n\\n          </nz-form-control>\\n        </nz-form-item>\\n      </form>\\n    </nz-card>\\n  </div>\\n  <div *ngIf=\\\"isImageUploading\\\">\\n\\n    <div nz-col nzSpan=\\\"12\\\" [nzOffset]=\\\"2\\\">\\n      <nz-card>\\n\\n        <div> \\n          <input type=\\\"file\\\" accept=\\\"image/gif, image/jpeg, image/png\\\" #myInput (change)=\\\"fileChangeEvent($event)\\\" />\\n          <image-cropper [imageChangedEvent]=\\\"imageChangedEvent\\\" [maintainAspectRatio]=\\\"false\\\"  \\n          [resizeToWidth]=\\\"resizeToWidth\\\" [resizeToHeight]=\\\"resizeToHeight\\\"\\n            [cropperMinWidth]=\\\"cropperMinWidth\\\" [cropperMinHeight]=\\\"cropperMinHeight\\\" [onlyScaleDown]=\\\"true\\\" [roundCropper]=\\\"false\\\" format=\\\"png\\\" outputType=\\\"base64\\\"\\n            (imageCropped)=\\\"imageCropped($event)\\\" (imageLoaded)=\\\"imageLoaded()\\\" (cropperReady)=\\\"cropperReady()\\\"\\n            (loadImageFailed)=\\\"loadImageFailed()\\\" [style.display]=\\\"showCropper ? null : 'none'\\\" [alignImage]=\\\"'left'\\\">\\n          </image-cropper>\\n        </div>\\n      </nz-card>\\n      <nz-card *ngIf=\\\"croppedImage.length>0\\\">\\n        <div nz-row [nzGutter]=\\\"16\\\">\\n          <div nz-col nzSpan=\\\"12\\\">\\n            <img [src]=\\\"croppedImage\\\" style=\\\"width: 100%;\\\" />\\n          </div>\\n          <div nz-col nzSpan=\\\"12\\\">\\n            <div nz-row style=\\\"margin-top: 10px;\\\" *ngIf=\\\"croppedImage.length>0\\\">\\n              <button type=\\\"button\\\" (click)=\\\"onCloseImageDrawer()\\\" class=\\\"ant-btn\\\"\\n                style=\\\"margin-right: 8px;\\\"><span>Cancel</span></button>\\n              <button type=\\\"button\\\" nz-button nzType=\\\"primary\\\" [nzLoading]=\\\"isUploadBtnLoading\\\"\\n                class=\\\"ant-btn ant-btn-primary\\\" (click)=\\\"onSucessCroping()\\\"><span>Upload to Server</span></button>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </nz-card>\\n\\n\\n\\n    </div>\\n\\n\\n  </div>\\n</div>\\n<div nz-row style=\\\"margin-top: 50px;\\\" *ngIf=\\\"visible==false\\\">\\n  <nz-card>\\n    <div nz-col nzSpan=\\\"24\\\">\\n      <nz-table #basicTable nzShowPagination=\\\"false\\\" [nzLoading]=\\\"isloading\\\" nzLoadingDelay=\\\"1\\\"\\n        [nzData]=\\\"ListBannerData\\\" style=\\\"background: #FFF;margin:30px 0px;\\\">\\n        <thead>\\n          <tr>\\n            <th>Post</th>\\n            <th>view</th>\\n            <th>Banner S.No</th>\\n            <th>Banner Name</th>\\n            <th>Created at</th>\\n            <th>Status</th>\\n            <th></th>\\n            <!-- <th>Edit</th> -->\\n\\n            <th>Edit</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <ng-container *ngFor=\\\"let data of ListBannerData;let i=index\\\">\\n            <tr>\\n              <td>\\n                <img alt=\\\"example\\\" [src]=\\\"data.Image_Data.Image250\\\" style=\\\"width: 50px;\\\" />\\n              </td>\\n              <td>\\n                <a target=\\\"_blank\\\" [attr.href]=\\\"data.Image_Data.ImageOriginal\\\">Click to view</a></td>\\n              <td>{{data.SNo}}</td>\\n              <td>{{data.Banner_Name}}</td>\\n              <td>{{data.created_at | date:'medium'}}</td>\\n              <td *ngIf=\\\"data.Status==true\\\">Yes</td>\\n              <td *ngIf=\\\"data.Status==false\\\">No</td>\\n              <td>\\n                <span [ngSwitch]=\\\"data.Status\\\">\\n                  <span *ngSwitchCase=true>\\n                    <a nz-popconfirm (nzOnConfirm)=\\\"onActionOnBanner(data,i)\\\"\\n                      nzTitle=\\\"Are you sure you want to Inactive this?\\\">Make Inactive</a>\\n                  </span>\\n                  <span *ngSwitchCase=false>\\n                    <a style=\\\"color: red;\\\" nz-popconfirm (nzOnConfirm)=\\\"onActionOnBanner(data,i)\\\"\\n                      nzTitle=\\\"Are you sure you want to Active this?\\\">Make Active</a>\\n                  </span>\\n                  <span *ngSwitchDefault>\\n                    NA\\n                  </span>\\n                </span>\\n              </td>\\n              <td style=\\\"color: #096dd9;\\\" (click)=\\\"onEdit(data,i)\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </tbody>\\n      </nz-table>\\n    </div>\\n  </nz-card>\\n\\n\\n  <nz-pagination (nzPageIndexChange)=\\\"onNextPage($event)\\\" [nzPageSize]=\\\"limit\\\" [nzPageIndex]=\\\"currentPage\\\"\\n    [nzTotal]=\\\"TotalItems\\\"></nz-pagination>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AppService } from '../app.service';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { ImageCropperComponent, ImageCroppedEvent } from 'ngx-image-cropper';\nimport { HttpResponse, HttpRequest } from '@angular/common/http';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.css']\n})\nexport class BannerComponent implements OnInit {\n  cropperMinWidth = 1680\n  cropperMinHeight = 280\n  resizeToWidth = 1680\n  resizeToHeight = 280\n  showCropper = false;\n  SNo: number;\n  croppedImage: any = '';\n  isUploadBtnLoading: boolean;\n  BannerImageData = [];\n  @ViewChild('myInput') myInputVariable: ElementRef;\n  @ViewChild(ImageCropperComponent) imageCropper: ImageCropperComponent;\n  imageChangedEvent: any = '';\n  isImageUploading: boolean;\n  visible = false;\n  createBanner: FormGroup;\n  ind: any;\n  currentPage = 1\n  TotalItems: any;\n  isloading: boolean;\n  skip = 0;\n  limit = this._appService.limit\n  ListBannerData: any = []\n  BannerID: any;\n  onEditOpen = false\n  uploadingBannerType: number = 1;\n  webBannerImageData = [];\n  constructor(private fb: FormBuilder,\n    private _appService: AppService,\n\n    private nzMessageService: NzMessageService\n  ) {\n\n  }\n\n\n  ngOnInit() {\n    this.createBanner = this.fb.group({\n      SNo: [null],\n      Banner_Name: [null],\n      // ImageID: [null, [Validators.required]],\n\n    });\n\n    this.ListAllBanner()\n  }\n\n  ListAllBanner() {\n    this.isloading = true\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n\n    let userdata = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      skip: this.skip,\n      limit: this._appService.limit,\n    }\n    try {\n\n      this._appService.postMethod('List_All_Banner', userdata)\n        .subscribe(resp => {\n          this.isloading = false\n\n          if (resp.success) {\n            this.TotalItems = resp.extras.Count\n            if (this.skip == 0) {\n              this.currentPage = 1\n\n            }\n            this.ListBannerData = resp.extras.Data\n            console.log(this.ListBannerData)\n          } else {\n            this.isloading = false\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) {\n\n    }\n  }\n\n  onActionOnBanner(data, i) {\n    this.BannerID = data.BannerID\n    this.ind = i\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      BannerID: this.BannerID\n    }\n    try {\n\n      this._appService.postMethod('Active_Inactive_Banner', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            let msg;\n            if (data.Status) {\n              msg = 'Inactivated Successfully'\n            } else {\n              msg = 'Activated Successfully'\n            }\n            this.ListAllBanner()\n            this.nzMessageService.success(msg)\n\n          } else {\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n\n  onNextPage(event: number) {\n\n    this.currentPage = event\n    this.skip = (event - 1) * this._appService.limit\n    this.ListAllBanner()\n  }\n\n  open(): void {\n    this.BannerImageData = []\n    this.visible = true;\n    this.onEditOpen = false\n    this.createBanner.reset()\n    this.imageChangedEvent = null\n    this.isImageUploading = false\n    this.isUploadBtnLoading = false\n    this.croppedImage = ''\n    this.SNo = null\n  }\n\n  close(): void {\n    this.visible = false;\n  }\n\n  BannerForm() {\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n    let body = {}\n    let url = ''\n    if (this.onEditOpen == true) {\n      url = 'Edit_Banner'\n      console.log(\"text\")\n      body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        Banner_Name: this.createBanner.value.Banner_Name,\n        ImageID: this.BannerImageData[0].ImageID,\n        Web_ImageID: this.webBannerImageData[0].ImageID,\n        BannerID: this.BannerID,\n        SNo: this.createBanner.value.SNo\n      }\n    } else {\n      url = 'Create_Banner'\n      console.log(\"text1\")\n      body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        Banner_Name: this.createBanner.value.Banner_Name,\n        ImageID: this.BannerImageData[0].ImageID,\n        Web_ImageID: this.webBannerImageData[0].ImageID,\n\n        SNo: this.createBanner.value.SNo\n      }\n      console.log(body)\n    }\n\n\n\n    try {\n\n      this._appService.postMethod(url, body)\n        .subscribe(resp => {\n          if (resp.success) {\n            this.createBanner.reset()\n            if (this.onEditOpen == true) {\n              this.visible = false;\n              this.nzMessageService.success('Updated')\n              this.ListAllBanner()\n\n\n            } else {\n              this.visible = false;\n              this.nzMessageService.success('Banner Created Sucessfully')\n              this.ListAllBanner()\n            }\n\n          }\n          else {\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n\n  onEdit(data, i) {\n    this.visible = true;\n    this.BannerID = data.BannerID\n    this.createBanner.patchValue({\n      SNo: data.SNo,\n      Banner_Name: data.Banner_Name,\n\n    })\n    this.BannerImageData = []\n    this.BannerImageData.push(data.Image_Data)\n    this.webBannerImageData=[]\n    this.webBannerImageData.push(data.WebImageData)\n    this.onEditOpen = true\n\n  }\n  onSucessCroping() {\n    this.isUploadBtnLoading = true\n    let imag;\n    let str: string = this.croppedImage\n    let st4;\n    if (str.indexOf('data:image/jpeg;base64,') != -1) {\n      st4 = str.replace('data:image/jpeg;base64,', '')\n    } else {\n      st4 = str.replace('data:image/png;base64,', '')\n    }\n\n    const imageBlob = this.dataURItoBlob(st4);\n    const imageFile = new File([imageBlob], 'imageName.jpeg', { type: 'image/jpeg' });\n    this.send(imageFile)\n  }\n  dataURItoBlob(dataURI) {\n    const byteString = window.atob(dataURI);\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const int8Array = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n      int8Array[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([int8Array], { type: 'image/jpeg' });\n    return blob;\n  }\n  onUploadBannerImage(type: number) {\n\n    this.isImageUploading = true\n\n  }\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n  }\n  onCloseImageDrawer() {\n    this.imageChangedEvent = null\n    this.myInputVariable.nativeElement.value = \"\";\n    this.isImageUploading = false\n    this.isUploadBtnLoading = false\n    this.croppedImage = ''\n    this.SNo = null\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    console.log(event)\n    this.croppedImage = event.base64;\n  }\n  cropperReady() {\n    console.log('Cropper ready')\n  }\n  loadImageFailed() {\n    console.log('Load failed');\n  }\n  imageLoaded() {\n    this.showCropper = true;\n    console.log('Image loaded')\n  }\n  send(imageFile) {\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    const req = new HttpRequest('POST', this._appService.ImageUpload_Url + 'Upload_Image', formData, {\n      reportProgress: true,\n      withCredentials: false\n    });\n    this._appService.onImageUpload(req).subscribe(\n      (event: any) => {\n        if (event instanceof HttpResponse) {\n          this.isUploadBtnLoading = false\n       \n         \n          if(this.uploadingBannerType==1){\n            this.webBannerImageData = []\n            this.webBannerImageData.push({\n\n              ImageID: event.body.extras.ImageID,\n              ImageOriginal: event.body.extras.ImageOriginal\n            })\n          }\n          else if(this.uploadingBannerType==2){\n            this.BannerImageData = []\n            this.BannerImageData.push({\n\n              ImageID: event.body.extras.ImageID,\n              ImageOriginal: event.body.extras.ImageOriginal\n            })\n          }\n         \n          this.onCloseImageDrawer()\n          // this.imageId = event.body.extras.ImageID\n          //this.BannerForm()\n\n        } else if (event instanceof HttpResponse) {\n\n        }\n      },\n      err => {\n        //item.onError!(err, item.file!);\n      }\n    );\n  }\n  onUploadProductImage(type: number) {\n    this.croppedImage=''\nif(this.myInputVariable!=undefined){\n  this.myInputVariable.nativeElement.value = \"\";\n \n}\n    this.uploadingBannerType = type\n    if (type == 1) {\n      this.resizeToHeight = 280\n      this.resizeToWidth = 1680\n\n      this.cropperMinHeight = 280\n      this.cropperMinWidth = 1680\n    }\n    else if (type == 2) {\n      this.resizeToHeight = 150\n      this.resizeToWidth = 350\n\n      this.cropperMinHeight = 150\n      this.cropperMinWidth = 350\n    }\n    this.isImageUploading = true\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BannerComponent } from './banner.component';\nimport { BannerRoutes } from './Banner.routing';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared.modue';\nimport { ImageCropperModule } from 'ngx-image-cropper';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BannerRoutes,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgZorroAntdModule,\n    ImageCropperModule\n  ],\n  declarations: [BannerComponent]\n})\nexport class BannerModule { }\n"],"sourceRoot":""}