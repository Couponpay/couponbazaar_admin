{"version":3,"sources":["webpack:///./src/app/PinCode/PinCode.component.css","webpack:///./src/app/PinCode/PinCode.component.html","webpack:///./src/app/PinCode/PinCode.component.ts","webpack:///./src/app/PinCode/PinCode.module.ts","webpack:///./src/app/PinCode/PinCode.routing.ts"],"names":[],"mappings":"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","file":"PinCode-PinCode-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BpbkNvZGUvUGluQ29kZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<div nz-row *ngIf=\\\"viewForm==false\\\">\\r\\n  <div nz-col nzSpan=\\\"4\\\" [nzOffset]=\\\"20\\\">\\r\\n    <button nz-button nzType=\\\"primary\\\" style=\\\"float: right;width: 100%\\\" (click)=\\\"OnclickProductAdd()\\\">\\r\\n      Add Pincode\\r\\n      </button>\\r\\n  </div>\\r\\n \\r\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"padding: 20px 0px;\\\">\\r\\n    <nz-tabset>\\r\\n      <nz-tab (nzClick)=\\\"onTabClick(1)\\\" nzTitle=\\\"Active Pincode\\\">\\r\\n      </nz-tab>\\r\\n      <nz-tab (nzClick)=\\\"onTabClick(2)\\\" nzTitle=\\\"Inactivated Pincode\\\">\\r\\n      </nz-tab>\\r\\n    </nz-tabset>\\r\\n  \\r\\n  \\r\\n    <nz-table #basicTable [nzLoading]=\\\"isTableListLoadin\\\" nzShowPagination=\\\"false\\\" [nzData]=\\\"PincodeList\\\"\\r\\n    style=\\\"background: #FFF;\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>S.No</th>\\r\\n        <!-- <th>State Name</th> -->\\r\\n        <th>District Name</th>\\r\\n        <th>Pincode </th>\\r\\n        <th>created at</th>\\r\\n        <th></th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let data of PincodeList\\\">\\r\\n        <td>{{data.SNo}}</td>\\r\\n        <!-- <td>{{data.StateData.State_Name}}</td> -->\\r\\n        <td>{{data.DistrictData.District_Name}}</td>\\r\\n        <td>{{data.Pincode}}</td>\\r\\n        <td>{{data.created_at | date:\\\"medium\\\"}}</td>\\r\\n\\r\\n                <td> <a (click)=\\\"onEdit(data)\\\">Edit</a></td>\\r\\n        <td>\\r\\n          <span [ngSwitch]=\\\"data.Status\\\">\\r\\n            <span *ngSwitchCase=true>\\r\\n              <a nz-popconfirm (nzOnConfirm)=\\\"onActionOnHelp(data)\\\"\\r\\n                nzTitle=\\\"Are you sure you want to Inactive this?\\\">Make Inactive</a>\\r\\n            </span>\\r\\n            <span *ngSwitchCase=false>\\r\\n              <a style=\\\"color: red;\\\" nz-popconfirm (nzOnConfirm)=\\\"onActionOnHelp(data)\\\"\\r\\n                nzTitle=\\\"Are you sure you want to Active this?\\\">Make Active</a>\\r\\n            </span>\\r\\n            <span *ngSwitchDefault>\\r\\n              NA\\r\\n            </span>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  \\r\\n  </nz-table>\\r\\n  </div>\\r\\n  <nz-pagination [nzShowTotal]=\\\"totalTemplate\\\" (nzPageIndexChange)=\\\"onNextPage($event)\\\" [nzPageSize]=\\\"limit\\\"\\r\\n  [nzPageIndex]=\\\"currentPage\\\" [nzTotal]=\\\"Count\\\"></nz-pagination>\\r\\n<ng-template #totalTemplate let-total>Total {{ Count }}</ng-template>\\r\\n</div>\\r\\n\\r\\n<div nz-row *ngIf=\\\"viewForm==true\\\">\\r\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"padding: 20px 0px;\\\">\\r\\n    <nz-card>\\r\\n    <form nz-form [formGroup]=\\\"addForm\\\" class=\\\"login-form\\\">\\r\\n\\r\\n      <div nz-row nzGutter=\\\"8\\\">\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"S_NO\\\">S NO</nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n                <input type=\\\"number\\\" formControlName=\\\"SNo\\\" nz-input placeholder=\\\"Please enter S NO\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div nz-row nzGutter=\\\"8\\\">\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >State </nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n              <nz-select style=\\\"width: 100%;\\\" formControlName=\\\"State_Name\\\" nzShowSearch \\r\\n              nzPlaceHolder=\\\"Select State\\\">\\r\\n              <nz-option *ngFor=\\\"let item of StatesListArray; let i=index\\\" [nzValue]=\\\"item.StateID\\\"\\r\\n                [nzLabel]=\\\"item.State_Name\\\"></nz-option>\\r\\n            </nz-select>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n      </div> \\r\\n      <div nz-row nzGutter=\\\"8\\\">\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >District </nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n              <nz-select style=\\\"width: 100%;\\\" formControlName=\\\"District_Name\\\" nzShowSearch \\r\\n              nzPlaceHolder=\\\"Select District\\\">\\r\\n              <nz-option *ngFor=\\\"let item of DistrictListArray; let i=index\\\" [nzValue]=\\\"item.DistrictID\\\"\\r\\n                [nzLabel]=\\\"item.District_Name\\\"></nz-option>\\r\\n            </nz-select>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n      </div> \\r\\n      <div nz-row nzGutter=\\\"8\\\">\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >Pincode</nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n                <input type=\\\"text\\\"  formControlName=\\\"Pincode_id\\\" nz-input placeholder=\\\"Please enter Pincode\\\"\\r\\n                oninput=\\\"this.value =this.value.replace(/[^0-9.]/g, '')\\\" [maxlength]=\\\"6\\\"/>\\r\\n               \\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n      </div>\\r\\n   \\r\\n\\r\\n      <div nz-row style=\\\"margin-top: 30px;\\\">\\r\\n       \\r\\n        <div nz-col nzSpan=\\\"3\\\" [nzOffset]=\\\"3\\\">\\r\\n              <button nz-button nzType=\\\"primary\\\" (click)=\\\"onClickSubmitForm()\\\" style=\\\"width:100%\\\"><span>{{onEditOpen?\\\"Update Pincode\\\":\\\"Create Pincode\\\"}}</span></button> \\r\\n        </div>\\r\\n        <div nz-col nzSpan=\\\"2\\\" [nzOffset]=\\\"1\\\">\\r\\n          <button nz-button nzType=\\\"default\\\" (click)=\\\"close()\\\" style=\\\"width:100%\\\">close</button> \\r\\n    </div>\\r\\n      </div>\\r\\n    \\r\\n    </form>\\r\\n  </nz-card>\\r\\n  </div>\\r\\n</div> \"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { AppService } from '../app.service';\r\n\r\n@Component({\r\n  selector: 'app-PinCode',\r\n  templateUrl: './PinCode.component.html',\r\n  styleUrls: ['./PinCode.component.css']\r\n})\r\nexport class PinCodeComponent implements OnInit {\r\n\r\n  PincodeList=[]\r\n\r\n  skip = 0;\r\n  limit = 10;\r\n  addForm: FormGroup;\r\n  isTableListLoadin = false\r\n\r\n  Status: number;\r\n  Count: number;\r\n\r\n  currentPage: number = 1;\r\n  onEditOpen = false\r\n  viewForm= false;\r\n\r\n\r\n  selectedData: any;\r\n\r\n  StatesListArray=[]\r\n  DistrictListArray=[]\r\n  \r\n  DistrictList=[]\r\n\r\n  // DistrictID = new FormControl(null)\r\n  // StateID= new FormControl(null)\r\n  \r\n\r\n\r\n  constructor(    public _appService: AppService,\r\n    private nzMessageService: NzMessageService,\r\n    private fb: FormBuilder,) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    // this.getDistrictListArray()\r\n    this.getTableList()\r\n    // this.StateID.valueChanges.subscribe((data)=>{\r\n    //   this.getDistrictList()\r\n    // })\r\n    // this.DistrictID.valueChanges.subscribe((data)=>{\r\n    //   this.skip=0;\r\n    //   this.getPincodeList()\r\n    // })\r\n    this.onTabClick(1)\r\n    this.addForm = this.fb.group({\r\n      District_Name: [null, [Validators.required]],\r\n      State_Name: [null, [Validators.required]],\r\n         SNo: [null, [Validators.required]],\r\n         Pincode_id:[null, [Validators.required]],\r\n    });\r\n    this.addForm.get('State_Name').valueChanges.subscribe((data)=>{\r\n      if(data!=null){\r\n        this.addForm.get('District_Name').reset()\r\n        this.getDistrictListArray()\r\n      }else {\r\n        this.addForm.get('District_Name').reset()\r\n      }\r\n      \r\n    });\r\n    this.addForm.get('Pincode_id').valueChanges.subscribe((data)=>{\r\n      if(data!=null){\r\n      this.checkPincode(data)\r\n      }else {\r\n      }\r\n      \r\n    })\r\n\r\n  }\r\n\r\n  OnclickProductAdd(){\r\n    this.viewForm = true\r\n    this.onEditOpen = false\r\n  }\r\n  onTabClick(tabNumber: number) {\r\n    this.Status = tabNumber\r\n    this.getPincodeList()\r\n  }\r\n\r\n  getPincodeList(){\r\n    \r\n    this.isTableListLoadin=true\r\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      skip: this.skip,\r\n      limit: this.limit,\r\n      Status:this.Status,\r\n    }\r\n    try {\r\n\r\n      this._appService.postMethod('List_Pincodes', body)\r\n        .subscribe(resp => {\r\n          if (resp.success) {\r\n            this.isTableListLoadin = false\r\n            if (this.skip == 0) {\r\n              this.currentPage = 1\r\n              this.Count = resp.extras.Count\r\n            }\r\n           \r\n            this.PincodeList = resp.extras.Data\r\n            this.Count = resp.extras.Count\r\n          } else {\r\n            this.isTableListLoadin = false\r\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) { }\r\n  }\r\n\r\n  onEdit(data){\r\n    this.viewForm=true;\r\n    this.selectedData =data,\r\n    this.onEditOpen= true\r\n    this.addForm.patchValue({\r\n      District_Name:data.District_Name,\r\n      SNo:data.SNo,\r\n      Pincode_id:data.PincodeID \r\n\r\n    })\r\n  }\r\n  \r\n\r\n  onActionOnHelp(data){\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      PincodeID:data.PincodeID,\r\n      }\r\n      try {\r\n\r\n        this._appService.postMethod('Activate_Inactivate_Pincode', body)\r\n          .subscribe(resp => {\r\n            if (resp.success) {\r\n              let msg;\r\n              if (data.Status) {\r\n                msg = 'Inactivated Successfully'\r\n              } else {\r\n                msg = 'Activated Successfully'\r\n              }\r\n              this.getPincodeList()\r\n              this.nzMessageService.success(msg)\r\n  \r\n            } else {\r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n  \r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) { }\r\n    }\r\n\r\n\r\n    onClickSubmitForm(){\r\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\r\n      let body = {}\r\n      let url = ''\r\n      if (this.onEditOpen == true) {\r\n        url = 'Edit_Pincode'\r\n        body = {\r\n          AdminID: adminData.AdminID,\r\n          SessionID: adminData.SessionID,\r\n          Pincode: this.addForm.value.Pincode_id,\r\n          SNo: this.addForm.value.SNo,\r\n          DistrictID: this.addForm.value.District_Name,\r\n          StateID:this.addForm.value.State_Name,\r\n          PincodeID :this.selectedData.PincodeID\r\n        }\r\n      } else {\r\n        url = 'Add_Pincode'\r\n        body = {\r\n          AdminID: adminData.AdminID,\r\n          SessionID: adminData.SessionID,\r\n          Pincode: this.addForm.value.Pincode_id,\r\n          SNo: this.addForm.value.SNo,\r\n          DistrictID: this.addForm.value.District_Name,\r\n          StateID:this.addForm.value.State_Name,\r\n        }\r\n      }\r\n  \r\n      try {\r\n  \r\n        this._appService.postMethod(url, body)\r\n          .subscribe(resp => {\r\n            if (resp.success) {\r\n              if (this.onEditOpen == true) {\r\n                this.nzMessageService.success('Pincode Updated Sucessfully')\r\n              } else {\r\n                this.nzMessageService.success('Pincode Created Sucessfully')\r\n              }\r\n              this.close()\r\n              this.getPincodeList()\r\n             \r\n            } else {\r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) { }\r\n    }\r\n\r\n    close(){\r\n      this.viewForm = false;\r\n      this.onEditOpen = false\r\n      this.addForm.reset()\r\n    }\r\n\r\n    \r\n    getTableList() {\r\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\r\n      let body = {\r\n        AdminID: adminData.AdminID,\r\n        SessionID: adminData.SessionID,\r\n        skip:0,\r\n        limit: 100000,\r\n        Status:true\r\n      }\r\n      try {\r\n  \r\n        this._appService.postMethod('List_States', body)\r\n          .subscribe(resp => {\r\n            if (resp.success) {\r\n          \r\n             \r\n              this.StatesListArray = resp.extras.Data\r\n          \r\n            \r\n            } else {\r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) { }\r\n    }\r\n\r\n    getDistrictListArray(){\r\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\r\n      let body = {\r\n        AdminID: adminData.AdminID,\r\n        SessionID: adminData.SessionID,\r\n\r\n        skip:0,\r\n        limit: 100000,\r\n        Status:true,\r\n        StateID:this.addForm.get('State_Name').value\r\n      }\r\n      try {\r\n  \r\n        this._appService.postMethod('List_Districts', body)\r\n          .subscribe(resp => {\r\n            if (resp.success) {\r\n           \r\n             \r\n              this.DistrictListArray = resp.extras.Data\r\n              // if(this.DistrictListArray.length>0){\r\n              //   this.DistrictID.patchValue(this.DistrictListArray[0].DistrictID)\r\n              //   this.onTabClick(1)\r\n              // }\r\n          \r\n            } else {\r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) { }\r\n    }\r\n\r\n\r\n    // getDistrictList(){\r\n    //   let adminData: any = JSON.parse(localStorage.getItem('adminData'))\r\n    //   let body = {\r\n    //     AdminID: adminData.AdminID,\r\n    //     SessionID: adminData.SessionID,\r\n\r\n    //     skip:0,\r\n    //     limit: 100000,\r\n    //     Status:true,\r\n    //     StateID:this.StateID.value\r\n    //   }\r\n    //   try {\r\n  \r\n    //     this._appService.postMethod('List_Districts', body)\r\n    //       .subscribe(resp => {\r\n    //         if (resp.success) {\r\n           \r\n             \r\n    //           this.DistrictListArray = resp.extras.Data\r\n    //           if(this.DistrictListArray.length>0){\r\n    //             this.DistrictID.patchValue(this.DistrictListArray[0].DistrictID)\r\n               \r\n    //           }\r\n          \r\n    //         } else {\r\n    //           this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n    //         }\r\n    //       },\r\n    //         error => {\r\n  \r\n    //         })\r\n    //   } catch (e) { }\r\n    // }\r\n\r\n    \r\n    checkPincode(data:any){\r\n       let adminData: any = JSON.parse(localStorage.getItem('adminData'))\r\n      let body = {\r\n        AdminID: adminData.AdminID,\r\n        SessionID: adminData.SessionID,\r\n        Pincode:+data,\r\n        PincodeID:this.onEditOpen?this.selectedData.PincodeID:\"\" \r\n\r\n      }\r\n      try {\r\n  \r\n        this._appService.postMethod('Pincode', body)\r\n          .subscribe(resp => {\r\n            if (resp.success) {\r\n              console.log(resp);\r\n              \r\n             \r\n            } else {\r\n              \r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) { }\r\n    }\r\n\r\n    onNextPage(event: number) {\r\n      this.currentPage = event\r\n      this.skip = (event - 1) * this.limit\r\n      this.getPincodeList()\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PinCodeComponent } from './PinCode.component';\r\nimport { PinCodeRoutes } from './PinCode.routing';\r\nimport { SharedModule } from '../shared.modue';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PinCodeRoutes,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n  \r\n  ],\r\n  declarations: [PinCodeComponent]\r\n})\r\nexport class PinCodeModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { PinCodeComponent } from './PinCode.component';\r\n\r\nconst routes: Routes = [\r\n  { path:'',component:PinCodeComponent },\r\n];\r\n\r\nexport const PinCodeRoutes = RouterModule.forChild(routes);\r\n"],"sourceRoot":""}