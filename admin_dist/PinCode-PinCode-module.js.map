{"version":3,"sources":["webpack:///./src/app/PinCode/PinCode.component.css","webpack:///./src/app/PinCode/PinCode.component.html","webpack:///./src/app/PinCode/PinCode.component.ts","webpack:///./src/app/PinCode/PinCode.module.ts","webpack:///./src/app/PinCode/PinCode.routing.ts"],"names":[],"mappings":"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","file":"PinCode-PinCode-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BpbkNvZGUvUGluQ29kZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div nz-row *ngIf=\\\"viewForm==false\\\">\\n  <div nz-col nzSpan=\\\"4\\\" [nzOffset]=\\\"20\\\">\\n    <button nz-button nzType=\\\"primary\\\" style=\\\"float: right;width: 100%\\\" (click)=\\\"OnclickProductAdd()\\\">\\n      Add Pincode\\n      </button>\\n  </div>\\n \\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"padding: 20px 0px;\\\">\\n    <nz-tabset>\\n      <nz-tab (nzClick)=\\\"onTabClick(1)\\\" nzTitle=\\\"Active Pincode\\\">\\n      </nz-tab>\\n      <nz-tab (nzClick)=\\\"onTabClick(2)\\\" nzTitle=\\\"Inactivated Pincode\\\">\\n      </nz-tab>\\n    </nz-tabset>\\n  \\n  \\n    <nz-table #basicTable [nzLoading]=\\\"isTableListLoadin\\\" nzShowPagination=\\\"false\\\" [nzData]=\\\"PincodeList\\\"\\n    style=\\\"background: #FFF;\\\">\\n    <thead>\\n      <tr>\\n        <th>S.No</th>\\n        <!-- <th>State Name</th> -->\\n        <th>District Name</th>\\n        <th>Pincode </th>\\n        <th>created at</th>\\n        <th></th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let data of PincodeList\\\">\\n        <td>{{data.SNo}}</td>\\n        <!-- <td>{{data.StateData.State_Name}}</td> -->\\n        <td>{{data.DistrictData.District_Name}}</td>\\n        <td>{{data.Pincode}}</td>\\n        <td>{{data.created_at | date:\\\"medium\\\"}}</td>\\n\\n                <td> <a (click)=\\\"onEdit(data)\\\">Edit</a></td>\\n        <td>\\n          <span [ngSwitch]=\\\"data.Status\\\">\\n            <span *ngSwitchCase=true>\\n              <a nz-popconfirm (nzOnConfirm)=\\\"onActionOnHelp(data)\\\"\\n                nzTitle=\\\"Are you sure you want to Inactive this?\\\">Make Inactive</a>\\n            </span>\\n            <span *ngSwitchCase=false>\\n              <a style=\\\"color: red;\\\" nz-popconfirm (nzOnConfirm)=\\\"onActionOnHelp(data)\\\"\\n                nzTitle=\\\"Are you sure you want to Active this?\\\">Make Active</a>\\n            </span>\\n            <span *ngSwitchDefault>\\n              NA\\n            </span>\\n          </span>\\n        </td>\\n      </tr>\\n    </tbody>\\n  \\n  </nz-table>\\n  </div>\\n  <nz-pagination [nzShowTotal]=\\\"totalTemplate\\\" (nzPageIndexChange)=\\\"onNextPage($event)\\\" [nzPageSize]=\\\"limit\\\"\\n  [nzPageIndex]=\\\"currentPage\\\" [nzTotal]=\\\"Count\\\"></nz-pagination>\\n<ng-template #totalTemplate let-total>Total {{ Count }}</ng-template>\\n</div>\\n\\n<div nz-row *ngIf=\\\"viewForm==true\\\">\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"padding: 20px 0px;\\\">\\n    <nz-card>\\n    <form nz-form [formGroup]=\\\"addForm\\\" class=\\\"login-form\\\">\\n\\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"S_NO\\\">S NO</nz-form-label>\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"SNo\\\" nz-input placeholder=\\\"Please enter S NO\\\" />\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div>\\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >State </nz-form-label>\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n              <nz-select style=\\\"width: 100%;\\\" formControlName=\\\"State_Name\\\" nzShowSearch \\n              nzPlaceHolder=\\\"Select State\\\">\\n              <nz-option *ngFor=\\\"let item of StatesListArray; let i=index\\\" [nzValue]=\\\"item.StateID\\\"\\n                [nzLabel]=\\\"item.State_Name\\\"></nz-option>\\n            </nz-select>\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div> \\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >District </nz-form-label>\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n              <nz-select style=\\\"width: 100%;\\\" formControlName=\\\"District_Name\\\" nzShowSearch \\n              nzPlaceHolder=\\\"Select District\\\">\\n              <nz-option *ngFor=\\\"let item of DistrictListArray; let i=index\\\" [nzValue]=\\\"item.DistrictID\\\"\\n                [nzLabel]=\\\"item.District_Name\\\"></nz-option>\\n            </nz-select>\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div> \\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >Pincode</nz-form-label>\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n                <input type=\\\"text\\\"  formControlName=\\\"Pincode_id\\\" nz-input placeholder=\\\"Please enter Pincode\\\"\\n                oninput=\\\"this.value =this.value.replace(/[^0-9.]/g, '')\\\" [maxlength]=\\\"6\\\"/>\\n               \\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div>\\n   \\n\\n      <div nz-row style=\\\"margin-top: 30px;\\\">\\n       \\n        <div nz-col nzSpan=\\\"3\\\" [nzOffset]=\\\"3\\\">\\n              <button nz-button nzType=\\\"primary\\\" (click)=\\\"onClickSubmitForm()\\\" style=\\\"width:100%\\\"><span>{{onEditOpen?\\\"Update Pincode\\\":\\\"Create Pincode\\\"}}</span></button> \\n        </div>\\n        <div nz-col nzSpan=\\\"2\\\" [nzOffset]=\\\"1\\\">\\n          <button nz-button nzType=\\\"default\\\" (click)=\\\"close()\\\" style=\\\"width:100%\\\">close</button> \\n    </div>\\n      </div>\\n    \\n    </form>\\n  </nz-card>\\n  </div>\\n</div> \"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-PinCode',\n  templateUrl: './PinCode.component.html',\n  styleUrls: ['./PinCode.component.css']\n})\nexport class PinCodeComponent implements OnInit {\n\n  PincodeList=[]\n\n  skip = 0;\n  limit = 10;\n  addForm: FormGroup;\n  isTableListLoadin = false\n\n  Status: number;\n  Count: number;\n\n  currentPage: number = 1;\n  onEditOpen = false\n  viewForm= false;\n\n\n  selectedData: any;\n\n  StatesListArray=[]\n  DistrictListArray=[]\n  \n  DistrictList=[]\n\n  // DistrictID = new FormControl(null)\n  // StateID= new FormControl(null)\n  \n\n\n  constructor(    public _appService: AppService,\n    private nzMessageService: NzMessageService,\n    private fb: FormBuilder,) { }\n\n  ngOnInit() {\n\n\n    // this.getDistrictListArray()\n    this.getTableList()\n    // this.StateID.valueChanges.subscribe((data)=>{\n    //   this.getDistrictList()\n    // })\n    // this.DistrictID.valueChanges.subscribe((data)=>{\n    //   this.skip=0;\n    //   this.getPincodeList()\n    // })\n    this.onTabClick(1)\n    this.addForm = this.fb.group({\n      District_Name: [null, [Validators.required]],\n      State_Name: [null, [Validators.required]],\n         SNo: [null, [Validators.required]],\n         Pincode_id:[null, [Validators.required]],\n    });\n    this.addForm.get('State_Name').valueChanges.subscribe((data)=>{\n      if(data!=null){\n        this.addForm.get('District_Name').reset()\n        this.getDistrictListArray()\n      }else {\n        this.addForm.get('District_Name').reset()\n      }\n      \n    });\n    this.addForm.get('Pincode_id').valueChanges.subscribe((data)=>{\n      if(data!=null){\n      this.checkPincode(data)\n      }else {\n      }\n      \n    })\n\n  }\n\n  OnclickProductAdd(){\n    this.viewForm = true\n    this.onEditOpen = false\n  }\n  onTabClick(tabNumber: number) {\n    this.Status = tabNumber\n    this.getPincodeList()\n  }\n\n  getPincodeList(){\n    \n    this.isTableListLoadin=true\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      skip: this.skip,\n      limit: this.limit,\n      Status:this.Status,\n    }\n    try {\n\n      this._appService.postMethod('List_Pincodes', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            this.isTableListLoadin = false\n            if (this.skip == 0) {\n              this.currentPage = 1\n              this.Count = resp.extras.Count\n            }\n           \n            this.PincodeList = resp.extras.Data\n            this.Count = resp.extras.Count\n          } else {\n            this.isTableListLoadin = false\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n\n  onEdit(data){\n    this.viewForm=true;\n    this.selectedData =data,\n    this.onEditOpen= true\n    this.addForm.patchValue({\n      District_Name:data.District_Name,\n      SNo:data.SNo,\n      Pincode_id:data.PincodeID \n\n    })\n  }\n  \n\n  onActionOnHelp(data){\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      PincodeID:data.PincodeID,\n      }\n      try {\n\n        this._appService.postMethod('Activate_Inactivate_Pincode', body)\n          .subscribe(resp => {\n            if (resp.success) {\n              let msg;\n              if (data.Status) {\n                msg = 'Inactivated Successfully'\n              } else {\n                msg = 'Activated Successfully'\n              }\n              this.getPincodeList()\n              this.nzMessageService.success(msg)\n  \n            } else {\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n  \n            }\n          },\n            error => {\n  \n            })\n      } catch (e) { }\n    }\n\n\n    onClickSubmitForm(){\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n      let body = {}\n      let url = ''\n      if (this.onEditOpen == true) {\n        url = 'Edit_Pincode'\n        body = {\n          AdminID: adminData.AdminID,\n          SessionID: adminData.SessionID,\n          Pincode: this.addForm.value.Pincode_id,\n          SNo: this.addForm.value.SNo,\n          DistrictID: this.addForm.value.District_Name,\n          StateID:this.addForm.value.State_Name,\n          PincodeID :this.selectedData.PincodeID\n        }\n      } else {\n        url = 'Add_Pincode'\n        body = {\n          AdminID: adminData.AdminID,\n          SessionID: adminData.SessionID,\n          Pincode: this.addForm.value.Pincode_id,\n          SNo: this.addForm.value.SNo,\n          DistrictID: this.addForm.value.District_Name,\n          StateID:this.addForm.value.State_Name,\n        }\n      }\n  \n      try {\n  \n        this._appService.postMethod(url, body)\n          .subscribe(resp => {\n            if (resp.success) {\n              if (this.onEditOpen == true) {\n                this.nzMessageService.success('Pincode Updated Sucessfully')\n              } else {\n                this.nzMessageService.success('Pincode Created Sucessfully')\n              }\n              this.close()\n              this.getPincodeList()\n             \n            } else {\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n            }\n          },\n            error => {\n  \n            })\n      } catch (e) { }\n    }\n\n    close(){\n      this.viewForm = false;\n      this.onEditOpen = false\n      this.addForm.reset()\n    }\n\n    \n    getTableList() {\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n      let body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        skip:0,\n        limit: 100000,\n        Status:true\n      }\n      try {\n  \n        this._appService.postMethod('List_States', body)\n          .subscribe(resp => {\n            if (resp.success) {\n          \n             \n              this.StatesListArray = resp.extras.Data\n          \n            \n            } else {\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n            }\n          },\n            error => {\n  \n            })\n      } catch (e) { }\n    }\n\n    getDistrictListArray(){\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n      let body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n\n        skip:0,\n        limit: 100000,\n        Status:true,\n        StateID:this.addForm.get('State_Name').value\n      }\n      try {\n  \n        this._appService.postMethod('List_Districts', body)\n          .subscribe(resp => {\n            if (resp.success) {\n           \n             \n              this.DistrictListArray = resp.extras.Data\n              // if(this.DistrictListArray.length>0){\n              //   this.DistrictID.patchValue(this.DistrictListArray[0].DistrictID)\n              //   this.onTabClick(1)\n              // }\n          \n            } else {\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n            }\n          },\n            error => {\n  \n            })\n      } catch (e) { }\n    }\n\n\n    // getDistrictList(){\n    //   let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n    //   let body = {\n    //     AdminID: adminData.AdminID,\n    //     SessionID: adminData.SessionID,\n\n    //     skip:0,\n    //     limit: 100000,\n    //     Status:true,\n    //     StateID:this.StateID.value\n    //   }\n    //   try {\n  \n    //     this._appService.postMethod('List_Districts', body)\n    //       .subscribe(resp => {\n    //         if (resp.success) {\n           \n             \n    //           this.DistrictListArray = resp.extras.Data\n    //           if(this.DistrictListArray.length>0){\n    //             this.DistrictID.patchValue(this.DistrictListArray[0].DistrictID)\n               \n    //           }\n          \n    //         } else {\n    //           this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n    //         }\n    //       },\n    //         error => {\n  \n    //         })\n    //   } catch (e) { }\n    // }\n\n    \n    checkPincode(data:any){\n       let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n      let body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        Pincode:+data,\n        PincodeID:this.onEditOpen?this.selectedData.PincodeID:\"\" \n\n      }\n      try {\n  \n        this._appService.postMethod('Pincode', body)\n          .subscribe(resp => {\n            if (resp.success) {\n              console.log(resp);\n              \n             \n            } else {\n              \n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n            }\n          },\n            error => {\n  \n            })\n      } catch (e) { }\n    }\n\n    onNextPage(event: number) {\n      this.currentPage = event\n      this.skip = (event - 1) * this.limit\n      this.getPincodeList()\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PinCodeComponent } from './PinCode.component';\nimport { PinCodeRoutes } from './PinCode.routing';\nimport { SharedModule } from '../shared.modue';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PinCodeRoutes,\n    SharedModule,\n    ReactiveFormsModule,\n  \n  ],\n  declarations: [PinCodeComponent]\n})\nexport class PinCodeModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { PinCodeComponent } from './PinCode.component';\n\nconst routes: Routes = [\n  { path:'',component:PinCodeComponent },\n];\n\nexport const PinCodeRoutes = RouterModule.forChild(routes);\n"],"sourceRoot":""}