{"version":3,"sources":["webpack:///./src/app/District/District.component.css","webpack:///./src/app/District/District.component.html","webpack:///./src/app/District/District.component.ts","webpack:///./src/app/District/District.module.ts","webpack:///./src/app/District/District.routing.ts"],"names":[],"mappings":"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","file":"District-District-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0Rpc3RyaWN0L0Rpc3RyaWN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div nz-row *ngIf=\\\"viewForm==false\\\">\\n  <div nz-col nzSpan=\\\"4\\\" [nzOffset]=\\\"20\\\">\\n    <button nz-button nzType=\\\"primary\\\" style=\\\"float: right;width: 100%\\\" (click)=\\\"OnclickProductAdd()\\\">\\n      Add District\\n      </button>\\n  </div>\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"padding: 20px 0px;\\\">\\n    <nz-tabset>\\n      <nz-tab (nzClick)=\\\"onTabClick(1)\\\" nzTitle=\\\"Active Districts\\\">\\n      </nz-tab>\\n      <nz-tab (nzClick)=\\\"onTabClick(2)\\\" nzTitle=\\\"Inactivated Districts\\\">\\n      </nz-tab>\\n    </nz-tabset>\\n    <!-- <div nz-row nzGutter=\\\"8\\\">\\n      <div nz-col nzSpan=\\\"12\\\">\\n        <nz-form-item>\\n          <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >State </nz-form-label>\\n          <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n            <nz-select style=\\\"width: 100%;\\\" [formControl]=\\\"StateID\\\" nzShowSearch \\n            nzPlaceHolder=\\\"Select State\\\">\\n            <nz-option *ngFor=\\\"let item of StatesListArray; let i=index\\\" [nzValue]=\\\"item.StateID\\\"\\n              [nzLabel]=\\\"item.State_Name\\\"></nz-option>\\n          </nz-select>\\n          </nz-form-control>\\n        </nz-form-item>\\n      </div>\\n    </div> -->\\n    <nz-table #basicTable [nzLoading]=\\\"isTableListLoadin\\\" nzShowPagination=\\\"false\\\" [nzData]=\\\"DistrictListArray\\\"\\n    style=\\\"background: #FFF;\\\">\\n    <thead>\\n      <tr>\\n        <th>S.No</th>\\n        <th>State Name</th>\\n        <th>District Name</th>\\n        <th>created at</th>\\n        <th></th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let data of DistrictListArray\\\">\\n        <td>{{data.SNo}}</td> \\n         <td>{{data.StateData.State_Name}}</td>\\n        <td>{{data.District_Name}}</td>\\n        <td>{{data.created_at | date:\\\"medium\\\"}}</td>\\n\\n                <td> <a (click)=\\\"onEdit(data)\\\">Edit</a></td>\\n        <td>\\n          <span [ngSwitch]=\\\"data.Status\\\">\\n            <span *ngSwitchCase=true>\\n              <a nz-popconfirm (nzOnConfirm)=\\\"onActionOnHelp(data)\\\"\\n                nzTitle=\\\"Are you sure you want to Inactive this?\\\">Make Inactive</a>\\n            </span>\\n            <span *ngSwitchCase=false>\\n              <a style=\\\"color: red;\\\" nz-popconfirm (nzOnConfirm)=\\\"onActionOnHelp(data)\\\"\\n                nzTitle=\\\"Are you sure you want to Active this?\\\">Make Active</a>\\n            </span>\\n            <span *ngSwitchDefault>\\n              NA\\n            </span>\\n          </span>\\n        </td>\\n      </tr>\\n    </tbody>\\n  \\n  </nz-table>\\n  </div>\\n  <nz-pagination [nzShowTotal]=\\\"totalTemplate\\\" (nzPageIndexChange)=\\\"onNextPage($event)\\\" [nzPageSize]=\\\"limit\\\"\\n  [nzPageIndex]=\\\"currentPage\\\" [nzTotal]=\\\"Count\\\"></nz-pagination>\\n<ng-template #totalTemplate let-total>Total {{ Count }}</ng-template>\\n</div>\\n<div nz-row *ngIf=\\\"viewForm==true\\\">\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"padding: 20px 0px;\\\">\\n    <nz-card>\\n    <form nz-form [formGroup]=\\\"addForm\\\" class=\\\"login-form\\\">\\n\\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"S_NO\\\">S NO</nz-form-label>\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"SNo\\\" nz-input placeholder=\\\"Please enter S NO\\\" />\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div>\\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >State </nz-form-label>\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n              <nz-select style=\\\"width: 100%;\\\" formControlName=\\\"State_Name\\\" nzShowSearch \\n              nzPlaceHolder=\\\"Select State\\\">\\n              <nz-option *ngFor=\\\"let item of StatesListArray; let i=index\\\" [nzValue]=\\\"item.StateID\\\"\\n                [nzLabel]=\\\"item.State_Name\\\"></nz-option>\\n            </nz-select>\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div>\\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >District Name</nz-form-label>\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n                <input type=\\\"text\\\" formControlName=\\\"District_Name\\\" nz-input placeholder=\\\"Please enter District Name\\\" />\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div>\\n   \\n\\n      <div nz-row style=\\\"margin-top: 30px;\\\">\\n       \\n        <div nz-col nzSpan=\\\"3\\\" [nzOffset]=\\\"3\\\">\\n              <button nz-button nzType=\\\"primary\\\" (click)=\\\"onClickSubmitForm()\\\" style=\\\"width:100%\\\"><span>{{onEditOpen?\\\"Update District\\\":\\\"Create District\\\"}}</span></button> \\n        </div>\\n        <div nz-col nzSpan=\\\"2\\\" [nzOffset]=\\\"1\\\">\\n          <button nz-button nzType=\\\"default\\\" (click)=\\\"close()\\\" style=\\\"width:100%\\\">close</button> \\n    </div>\\n      </div>\\n    \\n    </form>\\n  </nz-card>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-District',\n  templateUrl: './District.component.html',\n  styleUrls: ['./District.component.css']\n})\nexport class DistrictComponent implements OnInit {\n\n  DistrictListArray=[];\n  \n  skip = 0;\n  limit = 10;\n  addForm: FormGroup;\n  isTableListLoadin = false\n\n  Status: number;\n  Count: number;\n\n  currentPage: number = 1;\n  onEditOpen = false\n  viewForm= false;\n\n  selectedData: any;\n  StatesListArray=[]\n\n\n\n\n  constructor(    public _appService: AppService,\n    private nzMessageService: NzMessageService,\n    private fb: FormBuilder,\n\n    ) { }\n\n  ngOnInit() {\n    this.getTableList()\n    this.onTabClick(1)\n    this.addForm = this.fb.group({\n      District_Name: [null, [Validators.required]],\n      State_Name: [null, [Validators.required]],\n         SNo: [null, [Validators.required]]\n    });\n  \n  }\n  OnclickProductAdd(){\n    this.viewForm = true\n    this.onEditOpen = false\n  }\n  onTabClick(tabNumber: number) {\n    this.Status = tabNumber\n    this.getDistrictListArray()\n  }\n\n  getDistrictListArray(){\n    this.isTableListLoadin=true\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      skip: this.skip,\n      limit: this.limit,\n      Status:this.Status,\n\n    }\n    try {\n\n      this._appService.postMethod('List_Districts', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            this.isTableListLoadin = false\n            if (this.skip == 0) {\n              this.currentPage = 1\n              this.Count = resp.extras.Count\n            }\n           \n            this.DistrictListArray = resp.extras.Data\n            this.Count = resp.extras.Count\n          } else {\n            this.isTableListLoadin = false\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n\n\n  onEdit(data){\n    this.viewForm=true;\n    this.selectedData =data,\n    this.onEditOpen= true\n    this.addForm.patchValue({\n      District_Name:data.District_Name,\n      SNo:data.SNo,\n      State_Name:data.StateID\n    })\n   }\n\n   onActionOnHelp(data){\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      DistrictID:data.DistrictID,\n      }\n      try {\n\n        this._appService.postMethod('Activate_Inactivate_District', body)\n          .subscribe(resp => {\n            if (resp.success) {\n              let msg;\n              if (data.Status) {\n                msg = 'Inactivated Successfully'\n              } else {\n                msg = 'Activated Successfully'\n              }\n              this.getDistrictListArray()\n              this.nzMessageService.success(msg)\n  \n            } else {\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n  \n            }\n          },\n            error => {\n  \n            })\n      } catch (e) { }\n    }\n    onNextPage(event: number) {\n      this.currentPage = event\n      this.skip = (event - 1) * this.limit\n      this.getDistrictListArray()\n    }\n\n    onClickSubmitForm(){\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n      let body = {}\n      let url = ''\n      if (this.onEditOpen == true) {\n        url = 'Edit_District'\n        body = {\n          AdminID: adminData.AdminID,\n          SessionID: adminData.SessionID,\n          District_Name: this.addForm.value.District_Name,\n          SNo: this.addForm.value.SNo,\n          DistrictID: this.selectedData.DistrictID,\n          StateID:this.addForm.value.State_Name\n  \n        }\n      } else {\n        url = 'Add_District'\n        body = {\n          AdminID: adminData.AdminID,\n          SessionID: adminData.SessionID,\n          District_Name: this.addForm.value.District_Name,\n          SNo: this.addForm.value.SNo,\n          StateID:this.addForm.value.State_Name\n\n        }\n      }\n  \n      try {\n  \n        this._appService.postMethod(url, body)\n          .subscribe(resp => {\n            if (resp.success) {\n              if (this.onEditOpen == true) {\n                this.nzMessageService.success('District Updated Sucessfully')\n              } else {\n                this.nzMessageService.success('District Created Sucessfully')\n              }\n              this.close()\n              this.getDistrictListArray()\n             \n            } else {\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n            }\n          },\n            error => {\n  \n            })\n      } catch (e) { }\n    }\n    close(){\n      this.viewForm = false;\n      this.onEditOpen = false\n      this.addForm.reset()\n    }\n\n    getTableList() {\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\n      let body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        skip:0,\n        limit: 100000,\n        Status:true\n      }\n      try {\n  \n        this._appService.postMethod('List_States', body)\n          .subscribe(resp => {\n            if (resp.success) {\n          \n             \n              this.StatesListArray = resp.extras.Data\n            \n            } else {\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n            }\n          },\n            error => {\n  \n            })\n      } catch (e) { }\n    }\n    \n  }\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DistrictComponent } from './District.component';\nimport { DistrictRoutes } from './District.routing';\nimport { SharedModule } from '../shared.modue';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DistrictRoutes,\n    SharedModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [DistrictComponent]\n})\nexport class DistrictModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { DistrictComponent } from './District.component';\n\nconst routes: Routes = [\n  {path:'',component:DistrictComponent  },\n];\n\nexport const DistrictRoutes = RouterModule.forChild(routes);\n"],"sourceRoot":""}