{"version":3,"sources":["webpack:///./src/app/District/District.component.css","webpack:///./src/app/District/District.component.html","webpack:///./src/app/District/District.component.ts","webpack:///./src/app/District/District.module.ts","webpack:///./src/app/District/District.routing.ts"],"names":[],"mappings":"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","file":"District-District-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0Rpc3RyaWN0L0Rpc3RyaWN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div nz-row *ngIf=\\\"viewForm==false\\\">\\r\\n  <div nz-col nzSpan=\\\"4\\\" [nzOffset]=\\\"20\\\">\\r\\n    <button nz-button nzType=\\\"primary\\\" style=\\\"float: right;width: 100%\\\" (click)=\\\"OnclickProductAdd()\\\">\\r\\n      Add District\\r\\n      </button>\\r\\n  </div>\\r\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"padding: 20px 0px;\\\">\\r\\n    <nz-tabset>\\r\\n      <nz-tab (nzClick)=\\\"onTabClick(1)\\\" nzTitle=\\\"Active Districts\\\">\\r\\n      </nz-tab>\\r\\n      <nz-tab (nzClick)=\\\"onTabClick(2)\\\" nzTitle=\\\"Inactivated Districts\\\">\\r\\n      </nz-tab>\\r\\n    </nz-tabset>\\r\\n    <!-- <div nz-row nzGutter=\\\"8\\\">\\r\\n      <div nz-col nzSpan=\\\"12\\\">\\r\\n        <nz-form-item>\\r\\n          <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >State </nz-form-label>\\r\\n          <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n            <nz-select style=\\\"width: 100%;\\\" [formControl]=\\\"StateID\\\" nzShowSearch \\r\\n            nzPlaceHolder=\\\"Select State\\\">\\r\\n            <nz-option *ngFor=\\\"let item of StatesListArray; let i=index\\\" [nzValue]=\\\"item.StateID\\\"\\r\\n              [nzLabel]=\\\"item.State_Name\\\"></nz-option>\\r\\n          </nz-select>\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <nz-table #basicTable [nzLoading]=\\\"isTableListLoadin\\\" nzShowPagination=\\\"false\\\" [nzData]=\\\"DistrictListArray\\\"\\r\\n    style=\\\"background: #FFF;\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>S.No</th>\\r\\n        <th>State Name</th>\\r\\n        <th>District Name</th>\\r\\n        <th>created at</th>\\r\\n        <th></th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let data of DistrictListArray\\\">\\r\\n        <td>{{data.SNo}}</td> \\r\\n         <td>{{data.StateData.State_Name}}</td>\\r\\n        <td>{{data.District_Name}}</td>\\r\\n        <td>{{data.created_at | date:\\\"medium\\\"}}</td>\\r\\n\\r\\n                <td> <a (click)=\\\"onEdit(data)\\\">Edit</a></td>\\r\\n        <td>\\r\\n          <span [ngSwitch]=\\\"data.Status\\\">\\r\\n            <span *ngSwitchCase=true>\\r\\n              <a nz-popconfirm (nzOnConfirm)=\\\"onActionOnHelp(data)\\\"\\r\\n                nzTitle=\\\"Are you sure you want to Inactive this?\\\">Make Inactive</a>\\r\\n            </span>\\r\\n            <span *ngSwitchCase=false>\\r\\n              <a style=\\\"color: red;\\\" nz-popconfirm (nzOnConfirm)=\\\"onActionOnHelp(data)\\\"\\r\\n                nzTitle=\\\"Are you sure you want to Active this?\\\">Make Active</a>\\r\\n            </span>\\r\\n            <span *ngSwitchDefault>\\r\\n              NA\\r\\n            </span>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  \\r\\n  </nz-table>\\r\\n  </div>\\r\\n  <nz-pagination [nzShowTotal]=\\\"totalTemplate\\\" (nzPageIndexChange)=\\\"onNextPage($event)\\\" [nzPageSize]=\\\"limit\\\"\\r\\n  [nzPageIndex]=\\\"currentPage\\\" [nzTotal]=\\\"Count\\\"></nz-pagination>\\r\\n<ng-template #totalTemplate let-total>Total {{ Count }}</ng-template>\\r\\n</div>\\r\\n<div nz-row *ngIf=\\\"viewForm==true\\\">\\r\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"padding: 20px 0px;\\\">\\r\\n    <nz-card>\\r\\n    <form nz-form [formGroup]=\\\"addForm\\\" class=\\\"login-form\\\">\\r\\n\\r\\n      <div nz-row nzGutter=\\\"8\\\">\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"S_NO\\\">S NO</nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n                <input type=\\\"number\\\" formControlName=\\\"SNo\\\" nz-input placeholder=\\\"Please enter S NO\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div nz-row nzGutter=\\\"8\\\">\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >State </nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n              <nz-select style=\\\"width: 100%;\\\" formControlName=\\\"State_Name\\\" nzShowSearch \\r\\n              nzPlaceHolder=\\\"Select State\\\">\\r\\n              <nz-option *ngFor=\\\"let item of StatesListArray; let i=index\\\" [nzValue]=\\\"item.StateID\\\"\\r\\n                [nzLabel]=\\\"item.State_Name\\\"></nz-option>\\r\\n            </nz-select>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div nz-row nzGutter=\\\"8\\\">\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired >District Name</nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n                <input type=\\\"text\\\" formControlName=\\\"District_Name\\\" nz-input placeholder=\\\"Please enter District Name\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n      </div>\\r\\n   \\r\\n\\r\\n      <div nz-row style=\\\"margin-top: 30px;\\\">\\r\\n       \\r\\n        <div nz-col nzSpan=\\\"3\\\" [nzOffset]=\\\"3\\\">\\r\\n              <button nz-button nzType=\\\"primary\\\" (click)=\\\"onClickSubmitForm()\\\" style=\\\"width:100%\\\"><span>{{onEditOpen?\\\"Update District\\\":\\\"Create District\\\"}}</span></button> \\r\\n        </div>\\r\\n        <div nz-col nzSpan=\\\"2\\\" [nzOffset]=\\\"1\\\">\\r\\n          <button nz-button nzType=\\\"default\\\" (click)=\\\"close()\\\" style=\\\"width:100%\\\">close</button> \\r\\n    </div>\\r\\n      </div>\\r\\n    \\r\\n    </form>\\r\\n  </nz-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { AppService } from '../app.service';\r\n\r\n@Component({\r\n  selector: 'app-District',\r\n  templateUrl: './District.component.html',\r\n  styleUrls: ['./District.component.css']\r\n})\r\nexport class DistrictComponent implements OnInit {\r\n\r\n  DistrictListArray=[];\r\n  \r\n  skip = 0;\r\n  limit = 10;\r\n  addForm: FormGroup;\r\n  isTableListLoadin = false\r\n\r\n  Status: number;\r\n  Count: number;\r\n\r\n  currentPage: number = 1;\r\n  onEditOpen = false\r\n  viewForm= false;\r\n\r\n  selectedData: any;\r\n  StatesListArray=[]\r\n\r\n\r\n\r\n\r\n  constructor(    public _appService: AppService,\r\n    private nzMessageService: NzMessageService,\r\n    private fb: FormBuilder,\r\n\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.getTableList()\r\n    this.onTabClick(1)\r\n    this.addForm = this.fb.group({\r\n      District_Name: [null, [Validators.required]],\r\n      State_Name: [null, [Validators.required]],\r\n         SNo: [null, [Validators.required]]\r\n    });\r\n  \r\n  }\r\n  OnclickProductAdd(){\r\n    this.viewForm = true\r\n    this.onEditOpen = false\r\n  }\r\n  onTabClick(tabNumber: number) {\r\n    this.Status = tabNumber\r\n    this.getDistrictListArray()\r\n  }\r\n\r\n  getDistrictListArray(){\r\n    this.isTableListLoadin=true\r\n    let adminData: any = JSON.parse(localStorage.getItem('adminData'))\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      skip: this.skip,\r\n      limit: this.limit,\r\n      Status:this.Status,\r\n\r\n    }\r\n    try {\r\n\r\n      this._appService.postMethod('List_Districts', body)\r\n        .subscribe(resp => {\r\n          if (resp.success) {\r\n            this.isTableListLoadin = false\r\n            if (this.skip == 0) {\r\n              this.currentPage = 1\r\n              this.Count = resp.extras.Count\r\n            }\r\n           \r\n            this.DistrictListArray = resp.extras.Data\r\n            this.Count = resp.extras.Count\r\n          } else {\r\n            this.isTableListLoadin = false\r\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) { }\r\n  }\r\n\r\n\r\n  onEdit(data){\r\n    this.viewForm=true;\r\n    this.selectedData =data,\r\n    this.onEditOpen= true\r\n    this.addForm.patchValue({\r\n      District_Name:data.District_Name,\r\n      SNo:data.SNo,\r\n      State_Name:data.StateID\r\n    })\r\n   }\r\n\r\n   onActionOnHelp(data){\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      DistrictID:data.DistrictID,\r\n      }\r\n      try {\r\n\r\n        this._appService.postMethod('Activate_Inactivate_District', body)\r\n          .subscribe(resp => {\r\n            if (resp.success) {\r\n              let msg;\r\n              if (data.Status) {\r\n                msg = 'Inactivated Successfully'\r\n              } else {\r\n                msg = 'Activated Successfully'\r\n              }\r\n              this.getDistrictListArray()\r\n              this.nzMessageService.success(msg)\r\n  \r\n            } else {\r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n  \r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) { }\r\n    }\r\n    onNextPage(event: number) {\r\n      this.currentPage = event\r\n      this.skip = (event - 1) * this.limit\r\n      this.getDistrictListArray()\r\n    }\r\n\r\n    onClickSubmitForm(){\r\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\r\n      let body = {}\r\n      let url = ''\r\n      if (this.onEditOpen == true) {\r\n        url = 'Edit_District'\r\n        body = {\r\n          AdminID: adminData.AdminID,\r\n          SessionID: adminData.SessionID,\r\n          District_Name: this.addForm.value.District_Name,\r\n          SNo: this.addForm.value.SNo,\r\n          DistrictID: this.selectedData.DistrictID,\r\n          StateID:this.addForm.value.State_Name\r\n  \r\n        }\r\n      } else {\r\n        url = 'Add_District'\r\n        body = {\r\n          AdminID: adminData.AdminID,\r\n          SessionID: adminData.SessionID,\r\n          District_Name: this.addForm.value.District_Name,\r\n          SNo: this.addForm.value.SNo,\r\n          StateID:this.addForm.value.State_Name\r\n\r\n        }\r\n      }\r\n  \r\n      try {\r\n  \r\n        this._appService.postMethod(url, body)\r\n          .subscribe(resp => {\r\n            if (resp.success) {\r\n              if (this.onEditOpen == true) {\r\n                this.nzMessageService.success('District Updated Sucessfully')\r\n              } else {\r\n                this.nzMessageService.success('District Created Sucessfully')\r\n              }\r\n              this.close()\r\n              this.getDistrictListArray()\r\n             \r\n            } else {\r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) { }\r\n    }\r\n    close(){\r\n      this.viewForm = false;\r\n      this.onEditOpen = false\r\n      this.addForm.reset()\r\n    }\r\n\r\n    getTableList() {\r\n      let adminData: any = JSON.parse(localStorage.getItem('adminData'))\r\n      let body = {\r\n        AdminID: adminData.AdminID,\r\n        SessionID: adminData.SessionID,\r\n        skip:0,\r\n        limit: 100000,\r\n        Status:true\r\n      }\r\n      try {\r\n  \r\n        this._appService.postMethod('List_States', body)\r\n          .subscribe(resp => {\r\n            if (resp.success) {\r\n          \r\n             \r\n              this.StatesListArray = resp.extras.Data\r\n            \r\n            } else {\r\n              this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n            }\r\n          },\r\n            error => {\r\n  \r\n            })\r\n      } catch (e) { }\r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DistrictComponent } from './District.component';\r\nimport { DistrictRoutes } from './District.routing';\r\nimport { SharedModule } from '../shared.modue';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DistrictRoutes,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [DistrictComponent]\r\n})\r\nexport class DistrictModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { DistrictComponent } from './District.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:DistrictComponent  },\r\n];\r\n\r\nexport const DistrictRoutes = RouterModule.forChild(routes);\r\n"],"sourceRoot":""}