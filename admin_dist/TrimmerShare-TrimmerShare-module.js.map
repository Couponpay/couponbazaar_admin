{"version":3,"sources":["webpack:///./src/app/TrimmerShare/TrimmerShare.component.css","webpack:///./src/app/TrimmerShare/TrimmerShare.component.html","webpack:///./src/app/TrimmerShare/TrimmerShare.component.ts","webpack:///./src/app/TrimmerShare/TrimmerShare.module.ts","webpack:///./src/app/TrimmerShare/TrimmerShare.routing.ts"],"names":[],"mappings":"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","file":"TrimmerShare-TrimmerShare-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1RyaW1tZXJTaGFyZS9UcmltbWVyU2hhcmUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nz-form-item>\\r\\n  <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Select Date</nz-form-label>\\r\\n  <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n    <nz-date-picker [(ngModel)]=\\\"date\\\" (ngModelChange)=\\\"onChange($event)\\\"></nz-date-picker>\\r\\n\\r\\n  </nz-form-control>\\r\\n</nz-form-item>\\r\\n\\r\\n\\r\\n<nz-card style=\\\"margin-bottom: 10px;\\\" nzTitle=\\\"Amount Details\\\">\\r\\n  <div nz-row>\\r\\n    <div nz-col nzSpan=\\\"6\\\">\\r\\n      Available Amount:{{trimmerShareData.Available_Amount| number}}\\r\\n    </div>\\r\\n    <div nz-col nzSpan=\\\"6\\\">\\r\\n      Withdrawn Amount:{{trimmerShareData.Withdrawn_Amount| number}}\\r\\n    </div>\\r\\n\\r\\n    <div nz-col nzSpan=\\\"6\\\">\\r\\n      Total Amount:{{trimmerShareData.Total_Amount| number}}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</nz-card>\\r\\n<nz-card>\\r\\n  <nz-list [nzDataSource]=\\\"trimmerData\\\" [nzLoading]=\\\"isLoadingLogs\\\" [nzRenderItem]=\\\"conar\\\"\\r\\n    [nzItemLayout]=\\\"'horizontal'\\\">\\r\\n    <ng-template #conar let-item>\\r\\n      <ng-container *ngIf=\\\"item.Type==1\\\">\\r\\n        <nz-list-item [nzContent]=\\\"desc\\\">\\r\\n          <nz-list-item-meta [nzTitle]=\\\"title\\\" nzAvatar=\\\" \\\" [nzDescription]=\\\"content\\\">\\r\\n          </nz-list-item-meta>\\r\\n          <ng-template #title>\\r\\n            <span style=\\\"    color: #00897b;\\\">Amount Credited For Shop's billings</span>\\r\\n          </ng-template>\\r\\n          <ng-template #desc>\\r\\n            <a style=\\\"margin-right: 30%\\\">{{item.Amount | number}} Inr (C)</a> {{item.Time | date:'medium'}}\\r\\n          </ng-template>\\r\\n          <ng-template #content>\\r\\n            {{item.Data.Buyer_Name}} purchased {{item.Data.ProductData.Product_Name}} -\\r\\n            {{item.Data.ProductData.Product_Quantity}} at {{item.Data.Shop_Name}}.Total bill is\\r\\n            {{item.Data.ProductData.Product_Sub_Total}} and bill number <b>{{item.Data.BillNumber}}</b>\\r\\n          </ng-template>\\r\\n        </nz-list-item>\\r\\n      </ng-container>\\r\\n      <ng-container *ngIf=\\\"item.Type==2\\\">\\r\\n        <nz-list-item [nzContent]=\\\"desc\\\">\\r\\n          <nz-list-item-meta [nzTitle]=\\\"title\\\" nzAvatar=\\\" \\\" [nzDescription]=\\\"content\\\">\\r\\n          </nz-list-item-meta>\\r\\n          <ng-template #title>\\r\\n            <span style=\\\"color: #ff4500;\\\">Amount Debited at End of the Day for distribute to the buyers</span>\\r\\n          </ng-template>\\r\\n          <ng-template #desc>\\r\\n            <a style=\\\"margin-right: 30%\\\"><span style=\\\"color: #ff4500;\\\">{{item.Amount | number}} Inr (D)</span></a>\\r\\n            {{item.Time | date:'medium'}}\\r\\n          </ng-template>\\r\\n          <ng-template #content>\\r\\n            {{item.Amount | number}} Inr distributed to all <a>Buyers</a>\\r\\n          </ng-template>\\r\\n        </nz-list-item>\\r\\n      </ng-container>\\r\\n    </ng-template>\\r\\n  </nz-list>\\r\\n</nz-card>\\r\\n\\r\\n\\r\\n<!-- <div nz-row class=\\\"logtable\\\">\\r\\n  <div nz-col nzSpan=\\\"24\\\">\\r\\n    <nz-table class=\\\"logTable\\\" nzShowPagination=\\\"false\\\"\\r\\n     #basicTable [nzData]=\\\"trimmerData\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Shop Name</th>\\r\\n          <th>Shop Phone Number</th>\\r\\n          <th>Buyer Name</th>\\r\\n          <th>Buyer PhoneNumber</th>\\r\\n          <th>Product Name</th>\\r\\n          <th>Product Details  \\r\\n              <i class=\\\"fa fa-info-circle\\\" \\r\\n              nzTitle=\\\"PriceXQuantity=Total\\\" nzPlacement=\\\"topLeft\\\" \\r\\n              nz-tooltip nzTrigger=\\\"hover\\\" style=\\\"font-size:15px\\\"></i>\\r\\n          </th>\\r\\n          <th>Amount</th>\\r\\n          <th>Time</th>\\r\\n\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let data of trimmerData;let i = index\\\">\\r\\n          <td>{{data.Data.Shop_Name}}</td>\\r\\n          <td>{{data.Data.Shop_CountryCode}}{{data.Data.Shop_PhoneNumber}}</td>\\r\\n\\r\\n          <td>{{data.Data.Buyer_Name}}</td>\\r\\n          <td>{{data.Data.Buyer_PhoneNumber}}</td>\\r\\n          <td>{{data.Data.ProductData.Product_Name}}</td>\\r\\n          <td>{{data.Data.ProductData.Product_Price}}X{{data.Data.ProductData.Product_Quantity}}={{data.Data.ProductData.Product_Sub_Total}}</td>\\r\\n\\r\\n          <td>{{data.Amount| number}}({{data.Data.ProductData.Product_Price_Divisions.Trimer_Share}}%)</td>\\r\\n<td>{{data.Time | date:'shortTime' }}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </nz-table>\\r\\n\\r\\n  </div>\\r\\n</div> -->\\r\\n<nz-pagination (nzPageIndexChange)=\\\"onNextPage($event)\\\" [nzPageSize]=\\\"limit\\\" [nzPageIndex]=\\\"currentPage\\\"  [nzTotal]=\\\"totalItem\\\"></nz-pagination>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppService } from '../app.service';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n  selector: 'app-TrimmerShare',\r\n  templateUrl: './TrimmerShare.component.html',\r\n  styleUrls: ['./TrimmerShare.component.css']\r\n})\r\nexport class TrimmerShareComponent implements OnInit {\r\n  date = new Date();\r\n  totalItem: any;\r\n  trimmerData: any=[];\r\n  trimmerShareData: any=[];\r\n  isLoadingLogs: boolean;\r\n  limit=this._appService.limit\r\n  currentPage=1\r\n  constructor(private route: ActivatedRoute,\r\n    private _appService: AppService,\r\n    private nzMessageService: NzMessageService) {}\r\n  ngOnInit() {\r\n    this.getrimmershare(0,this.date)\r\n  }\r\n\r\n  getrimmershare( skip,date:Date) {\r\n    this.isLoadingLogs=true\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      Date:`${date.getDate()}-${date.getMonth()+1}-${date.getFullYear()}`,\r\n      skip: skip,\r\n      limit: this._appService.limit\r\n    }\r\n    try {\r\n\r\n      this._appService.postMethod('Trimmer_Share_Information_and_Logs_By_Date', body)\r\n        .subscribe(resp => {\r\n          this.isLoadingLogs=false\r\n\r\n          if (resp.success) {\r\n            if(skip==0){\r\n              this.currentPage=1\r\n            }\r\n            this.totalItem = resp.extras.Count\r\n            this.trimmerData = resp.extras.Data\r\n            this.trimmerShareData=resp.extras.Trimmer_Share_Data\r\n           \r\n\r\n\r\n          } else {\r\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n\r\n\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n  onNextPage(event:number){\r\n    this.currentPage=event\r\n    let skip=(event-1)*this._appService.limit\r\n    this.getrimmershare(skip,this.date)\r\n  }\r\n  onChange(date:Date){\r\n    if(date!=undefined){\r\n      this.getrimmershare(0,date)\r\n    }else{\r\n      this.nzMessageService.warning('please select Date')\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TrimmerShareComponent } from './TrimmerShare.component';\r\nimport { SharedModule } from '../shared.modue';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TrimmerShareRoutes } from './TrimmerShare.routing';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    TrimmerShareRoutes\r\n  ],\r\n  declarations: [TrimmerShareComponent]\r\n})\r\nexport class TrimmerShareModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { TrimmerShareComponent } from './TrimmerShare.component';\r\n\r\nconst routes: Routes = [\r\n  { path:'',component:TrimmerShareComponent },\r\n];\r\n\r\nexport const TrimmerShareRoutes = RouterModule.forChild(routes);\r\n"],"sourceRoot":""}