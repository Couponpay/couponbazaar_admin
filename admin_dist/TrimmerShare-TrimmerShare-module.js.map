{"version":3,"sources":["webpack:///./src/app/TrimmerShare/TrimmerShare.component.css","webpack:///./src/app/TrimmerShare/TrimmerShare.component.html","webpack:///./src/app/TrimmerShare/TrimmerShare.component.ts","webpack:///./src/app/TrimmerShare/TrimmerShare.module.ts","webpack:///./src/app/TrimmerShare/TrimmerShare.routing.ts"],"names":[],"mappings":"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","file":"TrimmerShare-TrimmerShare-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1RyaW1tZXJTaGFyZS9UcmltbWVyU2hhcmUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nz-form-item>\\n  <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">Select Date</nz-form-label>\\n  <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n    <nz-date-picker [(ngModel)]=\\\"date\\\" (ngModelChange)=\\\"onChange($event)\\\"></nz-date-picker>\\n\\n  </nz-form-control>\\n</nz-form-item>\\n\\n\\n<nz-card style=\\\"margin-bottom: 10px;\\\" nzTitle=\\\"Amount Details\\\">\\n  <div nz-row>\\n    <div nz-col nzSpan=\\\"6\\\">\\n      Available Amount:{{trimmerShareData.Available_Amount| number}}\\n    </div>\\n    <div nz-col nzSpan=\\\"6\\\">\\n      Withdrawn Amount:{{trimmerShareData.Withdrawn_Amount| number}}\\n    </div>\\n\\n    <div nz-col nzSpan=\\\"6\\\">\\n      Total Amount:{{trimmerShareData.Total_Amount| number}}\\n    </div>\\n  </div>\\n\\n</nz-card>\\n<nz-card>\\n  <nz-list [nzDataSource]=\\\"trimmerData\\\" [nzLoading]=\\\"isLoadingLogs\\\" [nzRenderItem]=\\\"conar\\\"\\n    [nzItemLayout]=\\\"'horizontal'\\\">\\n    <ng-template #conar let-item>\\n      <ng-container *ngIf=\\\"item.Type==1\\\">\\n        <nz-list-item [nzContent]=\\\"desc\\\">\\n          <nz-list-item-meta [nzTitle]=\\\"title\\\" nzAvatar=\\\" \\\" [nzDescription]=\\\"content\\\">\\n          </nz-list-item-meta>\\n          <ng-template #title>\\n            <span style=\\\"    color: #00897b;\\\">Amount Credited For Shop's billings</span>\\n          </ng-template>\\n          <ng-template #desc>\\n            <a style=\\\"margin-right: 30%\\\">{{item.Amount | number}} Inr (C)</a> {{item.Time | date:'medium'}}\\n          </ng-template>\\n          <ng-template #content>\\n            {{item.Data.Buyer_Name}} purchased {{item.Data.ProductData.Product_Name}} -\\n            {{item.Data.ProductData.Product_Quantity}} at {{item.Data.Shop_Name}}.Total bill is\\n            {{item.Data.ProductData.Product_Sub_Total}} and bill number <b>{{item.Data.BillNumber}}</b>\\n          </ng-template>\\n        </nz-list-item>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"item.Type==2\\\">\\n        <nz-list-item [nzContent]=\\\"desc\\\">\\n          <nz-list-item-meta [nzTitle]=\\\"title\\\" nzAvatar=\\\" \\\" [nzDescription]=\\\"content\\\">\\n          </nz-list-item-meta>\\n          <ng-template #title>\\n            <span style=\\\"color: #ff4500;\\\">Amount Debited at End of the Day for distribute to the buyers</span>\\n          </ng-template>\\n          <ng-template #desc>\\n            <a style=\\\"margin-right: 30%\\\"><span style=\\\"color: #ff4500;\\\">{{item.Amount | number}} Inr (D)</span></a>\\n            {{item.Time | date:'medium'}}\\n          </ng-template>\\n          <ng-template #content>\\n            {{item.Amount | number}} Inr distributed to all <a>Buyers</a>\\n          </ng-template>\\n        </nz-list-item>\\n      </ng-container>\\n    </ng-template>\\n  </nz-list>\\n</nz-card>\\n\\n\\n<!-- <div nz-row class=\\\"logtable\\\">\\n  <div nz-col nzSpan=\\\"24\\\">\\n    <nz-table class=\\\"logTable\\\" nzShowPagination=\\\"false\\\"\\n     #basicTable [nzData]=\\\"trimmerData\\\">\\n      <thead>\\n        <tr>\\n          <th>Shop Name</th>\\n          <th>Shop Phone Number</th>\\n          <th>Buyer Name</th>\\n          <th>Buyer PhoneNumber</th>\\n          <th>Product Name</th>\\n          <th>Product Details  \\n              <i class=\\\"fa fa-info-circle\\\" \\n              nzTitle=\\\"PriceXQuantity=Total\\\" nzPlacement=\\\"topLeft\\\" \\n              nz-tooltip nzTrigger=\\\"hover\\\" style=\\\"font-size:15px\\\"></i>\\n          </th>\\n          <th>Amount</th>\\n          <th>Time</th>\\n\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let data of trimmerData;let i = index\\\">\\n          <td>{{data.Data.Shop_Name}}</td>\\n          <td>{{data.Data.Shop_CountryCode}}{{data.Data.Shop_PhoneNumber}}</td>\\n\\n          <td>{{data.Data.Buyer_Name}}</td>\\n          <td>{{data.Data.Buyer_PhoneNumber}}</td>\\n          <td>{{data.Data.ProductData.Product_Name}}</td>\\n          <td>{{data.Data.ProductData.Product_Price}}X{{data.Data.ProductData.Product_Quantity}}={{data.Data.ProductData.Product_Sub_Total}}</td>\\n\\n          <td>{{data.Amount| number}}({{data.Data.ProductData.Product_Price_Divisions.Trimer_Share}}%)</td>\\n<td>{{data.Time | date:'shortTime' }}</td>\\n        </tr>\\n      </tbody>\\n    </nz-table>\\n\\n  </div>\\n</div> -->\\n<nz-pagination (nzPageIndexChange)=\\\"onNextPage($event)\\\" [nzPageSize]=\\\"limit\\\" [nzPageIndex]=\\\"currentPage\\\"  [nzTotal]=\\\"totalItem\\\"></nz-pagination>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppService } from '../app.service';\nimport { NzMessageService } from 'ng-zorro-antd';\n\n@Component({\n  selector: 'app-TrimmerShare',\n  templateUrl: './TrimmerShare.component.html',\n  styleUrls: ['./TrimmerShare.component.css']\n})\nexport class TrimmerShareComponent implements OnInit {\n  date = new Date();\n  totalItem: any;\n  trimmerData: any=[];\n  trimmerShareData: any=[];\n  isLoadingLogs: boolean;\n  limit=this._appService.limit\n  currentPage=1\n  constructor(private route: ActivatedRoute,\n    private _appService: AppService,\n    private nzMessageService: NzMessageService) {}\n  ngOnInit() {\n    this.getrimmershare(0,this.date)\n  }\n\n  getrimmershare( skip,date:Date) {\n    this.isLoadingLogs=true\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      Date:`${date.getDate()}-${date.getMonth()+1}-${date.getFullYear()}`,\n      skip: skip,\n      limit: this._appService.limit\n    }\n    try {\n\n      this._appService.postMethod('Trimmer_Share_Information_and_Logs_By_Date', body)\n        .subscribe(resp => {\n          this.isLoadingLogs=false\n\n          if (resp.success) {\n            if(skip==0){\n              this.currentPage=1\n            }\n            this.totalItem = resp.extras.Count\n            this.trimmerData = resp.extras.Data\n            this.trimmerShareData=resp.extras.Trimmer_Share_Data\n           \n\n\n          } else {\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) {\n\n    }\n  }\n  onNextPage(event:number){\n    this.currentPage=event\n    let skip=(event-1)*this._appService.limit\n    this.getrimmershare(skip,this.date)\n  }\n  onChange(date:Date){\n    if(date!=undefined){\n      this.getrimmershare(0,date)\n    }else{\n      this.nzMessageService.warning('please select Date')\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TrimmerShareComponent } from './TrimmerShare.component';\nimport { SharedModule } from '../shared.modue';\nimport { FormsModule } from '@angular/forms';\nimport { TrimmerShareRoutes } from './TrimmerShare.routing';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    TrimmerShareRoutes\n  ],\n  declarations: [TrimmerShareComponent]\n})\nexport class TrimmerShareModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { TrimmerShareComponent } from './TrimmerShare.component';\n\nconst routes: Routes = [\n  { path:'',component:TrimmerShareComponent },\n];\n\nexport const TrimmerShareRoutes = RouterModule.forChild(routes);\n"],"sourceRoot":""}