{"version":3,"sources":["webpack:///./src/app/bonanza/Bonanza.routing.ts","webpack:///./src/app/bonanza/bonanza.component.css","webpack:///./src/app/bonanza/bonanza.component.html","webpack:///./src/app/bonanza/bonanza.component.ts","webpack:///./src/app/bonanza/bonanza.module.ts"],"names":[],"mappings":"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","file":"bonanza-bonanza-module.js","sourcesContent":["import { Routes, RouterModule } from '@angular/router';\r\nimport { BonanzaComponent } from './bonanza.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: BonanzaComponent },\r\n];\r\n\r\nexport const BonanzaRoutes = RouterModule.forChild(routes);\r\n","module.exports = \".removeButton{\\r\\n    margin-top: 32px;\\r\\n    margin-left: 20px;\\r\\n    border-radius: 50px;\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    padding: 4px 12px 10px 8px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9uYW56YS9ib25hbnphLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsWUFBWTtJQUNaLDBCQUEwQjtBQUM5QiIsImZpbGUiOiJzcmMvYXBwL2JvbmFuemEvYm9uYW56YS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlbW92ZUJ1dHRvbntcclxuICAgIG1hcmdpbi10b3A6IDMycHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGhlaWdodDogMzBweDtcclxuICAgIHBhZGRpbmc6IDRweCAxMnB4IDEwcHggOHB4O1xyXG59Il19 */\"","module.exports = \"<div nz-row style=\\\"margin-top: 25px;\\\" *ngIf=\\\"!visible\\\">\\r\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"text-align: right;\\\">\\r\\n    <button nz-button nzType=\\\"primary\\\" (click)=\\\"open()\\\" class=\\\"primary_button\\\">Add Bonanza</button>\\r\\n  </div>\\r\\n</div>\\r\\n<div nz-row style=\\\"margin-top: 25px;\\\" *ngIf=\\\"visible\\\">\\r\\n  <div nz-col nzSpan=\\\"18\\\">\\r\\n    <form nz-form [formGroup]=\\\"addBonanzaForm\\\">\\r\\n      <div nz-row nzGutter=\\\"8\\\">\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label>Bonanza Name</nz-form-label>\\r\\n            <nz-form-control nzSpan=\\\"24\\\" nzRequired >\\r\\n              <input type=\\\"text\\\" nz-input formControlName=\\\"Name\\\" placeholder=\\\"please enter Bonanza Name\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label>Bonanza Type</nz-form-label>\\r\\n            <nz-form-control nzSpan=\\\"24\\\" nzRequired>\\r\\n              <nz-input-group>\\r\\n                <nz-select style=\\\"width: 100%;\\\" formControlName=\\\"Bonanza_Type\\\" nzShowSearch nzAllowClear\\r\\n                  nzPlaceHolder=\\\"Select Bonanza Type\\\">\\r\\n                  <nz-option *ngFor=\\\"let item of BonanzaType; let i=index\\\" [nzValue]=\\\"item.ind\\\" [nzLabel]=\\\"item.type\\\">\\r\\n                  </nz-option>\\r\\n                </nz-select>\\r\\n              </nz-input-group>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div nz-row nzGutter=\\\"8\\\" *ngIf=\\\"addBonanzaForm.get('Bonanza_Type').value == 1 || addBonanzaForm.get('Bonanza_Type').value == 3\\\">\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label>Bonanza Amount</nz-form-label>\\r\\n            <nz-form-control nzRequired>\\r\\n              <input nz-input formControlName=\\\"Amount\\\" placeholder=\\\"please enter Bonanza Amount\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label>Bonanza Points</nz-form-label>\\r\\n            <nz-form-control nzRequired>\\r\\n              <input nz-input formControlName=\\\"Points\\\" placeholder=\\\"please enter Bonanza Points\\\" />\\r\\n\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div nz-row nzGutter=\\\"8\\\">\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <div nz-row nzGutter=\\\"8\\\">\\r\\n            <div nz-col nzSpan=\\\"12\\\">\\r\\n              <nz-form-item>\\r\\n                <nz-form-label>From Date</nz-form-label>\\r\\n                <nz-form-control nzRequired>\\r\\n                  <nz-date-picker nzPlaceHolder=\\\"From Date\\\" formControlName=\\\"Start_Date\\\"></nz-date-picker>\\r\\n                </nz-form-control>\\r\\n              </nz-form-item>\\r\\n            </div>\\r\\n            <div nz-col nzSpan=\\\"12\\\">\\r\\n              <nz-form-item>\\r\\n                <nz-form-label>End Date</nz-form-label>\\r\\n                <nz-form-control nzRequired>\\r\\n                  <nz-date-picker formControlName=\\\"End_Date\\\"></nz-date-picker>\\r\\n\\r\\n                </nz-form-control>\\r\\n              </nz-form-item>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n\\r\\n        <div nz-col nzSpan=\\\"12\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label>Bonanza Description</nz-form-label>\\r\\n            <nz-form-control nzRequired>\\r\\n              <textarea nz-input style=\\\"height: 120px;\\\" formControlName=\\\"Description\\\" placeholder=\\\"please enter Bonanza Description\\\" ></textarea>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n        <div nz-row [nzGutter]=\\\"16\\\" *ngIf=\\\"addBonanzaForm.get('Bonanza_Type').value == 1 || addBonanzaForm.get('Bonanza_Type').value == 3\\\">\\r\\n          <div nz-col nzSpan=\\\"12\\\">\\r\\n            <nz-form-item>\\r\\n              <nz-form-label nzFor=\\\"Cluster\\\" nzRequired>Points Level Data</nz-form-label>\\r\\n              <nz-form-control>\\r\\n                <div style=\\\"margin-bottom: 10px;\\\">\\r\\n                  <button nz-button nz-tooltip nzTitle=\\\"Add Points Level Data\\\" (click)=\\\"addPointsLevelControls()\\\"><i\\r\\n                      class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Add Points Level Data</button>\\r\\n                </div>\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div nz-row [nzGutter]=\\\"16\\\">\\r\\n          <div nz-col nzSpan=\\\"24\\\">\\r\\n            <nz-form-item formArrayName=\\\"Bonanza_Points_Data\\\">\\r\\n              <ng-container *ngFor=\\\"let authCotrols of arrayControls.controls; let j=index\\\">\\r\\n                <div [formGroupName]=\\\"j\\\">\\r\\n                  <div nz-row nzGutter=\\\"8\\\">\\r\\n                    <div nz-col nzSpan=\\\"5\\\">\\r\\n                      <nz-form-item>\\r\\n                        <nz-form-label nzSpan=\\\"24\\\">Points Levels</nz-form-label>\\r\\n                        <nz-form-control nzSpan=\\\"24\\\" nzRequired>\\r\\n                          <input formControlName=\\\"Levels\\\" nz-input placeholder=\\\"please enter Points Levels\\\" />\\r\\n                        </nz-form-control>\\r\\n                      </nz-form-item>\\r\\n                    </div>\\r\\n                    <div nz-col nzSpan=\\\"5\\\">\\r\\n                      <nz-form-item>\\r\\n                        <nz-form-label nzSpan=\\\"24\\\">Min Points</nz-form-label>\\r\\n                        <nz-form-control nzSpan=\\\"24\\\">\\r\\n                          <input formControlName=\\\"Min_Points\\\" nz-input placeholder=\\\"please enter Min Points\\\" />\\r\\n                        </nz-form-control>\\r\\n                      </nz-form-item>\\r\\n                    </div>\\r\\n                    <div nz-col nzSpan=\\\"5\\\">\\r\\n                      <nz-form-item>\\r\\n                        <nz-form-label nzSpan=\\\"24\\\">Max Points</nz-form-label>\\r\\n                        <nz-form-control nzSpan=\\\"24\\\">\\r\\n                          <input formControlName=\\\"Max_Points\\\" nz-input placeholder=\\\"please enter Max Points\\\" />\\r\\n                        </nz-form-control>\\r\\n                      </nz-form-item>\\r\\n                    </div>\\r\\n                    <div nz-col nzSpan=\\\"5\\\">\\r\\n                      <nz-form-item>\\r\\n                        <nz-form-label nzSpan=\\\"24\\\">Winning</nz-form-label>\\r\\n                        <nz-form-control nzSpan=\\\"24\\\">\\r\\n                          <input formControlName=\\\"Winning\\\" nz-input placeholder=\\\"please enter Winning\\\" />\\r\\n                        </nz-form-control>\\r\\n                      </nz-form-item>\\r\\n                    </div>\\r\\n                    <div nz-col nzSpan=\\\"2\\\">\\r\\n                      <nz-form-item>\\r\\n                        <nz-form-control>\\r\\n                          <button nz-button nzType=\\\"link\\\" nz-tooltip nzTitle=\\\"Remove Points Level Data\\\"\\r\\n                            [disabled]=\\\"addBonanzaForm.get('Bonanza_Points_Data').value.length==1\\\"\\r\\n                            (click)=\\\"onRemovePointsLevelDataControls(j)\\\" class=\\\"removeButton\\\"><i class=\\\"fa fa-minus\\\"\\r\\n                              aria-hidden=\\\"true\\\"></i></button>\\r\\n                        </nz-form-control>\\r\\n                      </nz-form-item>\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </nz-form-item>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div nz-row [nzGutter]=\\\"16\\\" *ngIf=\\\"addBonanzaForm.get('Bonanza_Type').value == 2 || addBonanzaForm.get('Bonanza_Type').value == 3\\\">\\r\\n          <div nz-col nzSpan=\\\"12\\\">\\r\\n            <nz-form-item>\\r\\n              <nz-form-label nzFor=\\\"Cluster\\\" nzRequired>Matrix Levels Data</nz-form-label>\\r\\n              <nz-form-control>\\r\\n                <div style=\\\"margin-bottom: 10px;\\\">\\r\\n                  <button nz-button nz-tooltip nzTitle=\\\"Add Matrix Levels Data\\\" (click)=\\\"addMatrixLevelsControls()\\\"><i\\r\\n                      class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Add Matrix Levels Data</button>\\r\\n                </div>\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div nz-row [nzGutter]=\\\"16\\\">\\r\\n          <div nz-col nzSpan=\\\"24\\\">\\r\\n            <nz-form-item formArrayName=\\\"Bonanza_Matrix_Data\\\">\\r\\n              <ng-container *ngFor=\\\"let authCotrols of MatrixLevelsControls.controls; let i=index\\\">\\r\\n                <div [formGroupName]=\\\"i\\\">\\r\\n                  <div nz-row nzGutter=\\\"8\\\">\\r\\n                    <div nz-col nzSpan=\\\"5\\\">\\r\\n                      <nz-form-item>\\r\\n                        <nz-form-label nzSpan=\\\"24\\\">Matrix Levels</nz-form-label>\\r\\n                        <nz-form-control nzSpan=\\\"24\\\">\\r\\n                          <input formControlName=\\\"Levels\\\" nz-input placeholder=\\\"please enter Matrix Levels\\\" />\\r\\n                        </nz-form-control>\\r\\n                      </nz-form-item>\\r\\n                    </div>\\r\\n                    <div nz-col nzSpan=\\\"5\\\">\\r\\n                      <nz-form-item>\\r\\n                        <nz-form-label nzSpan=\\\"24\\\">Matrix</nz-form-label>\\r\\n                        <nz-form-control nzSpan=\\\"24\\\">\\r\\n                          <input formControlName=\\\"Matrix\\\" nz-input placeholder=\\\"please enter Matrix\\\" />\\r\\n                        </nz-form-control>\\r\\n                      </nz-form-item>\\r\\n                    </div>\\r\\n                    <div nz-col nzSpan=\\\"5\\\">\\r\\n                      <nz-form-item>\\r\\n                        <nz-form-label nzSpan=\\\"24\\\">Winning</nz-form-label>\\r\\n                        <nz-form-control nzSpan=\\\"24\\\">\\r\\n                          <input formControlName=\\\"Winning\\\" nz-input placeholder=\\\"please enter Winning\\\" />\\r\\n                        </nz-form-control>\\r\\n                      </nz-form-item>\\r\\n                    </div>\\r\\n\\r\\n                    <div nz-col nzSpan=\\\"2\\\">\\r\\n                      <nz-form-item>\\r\\n                        <nz-form-control>\\r\\n                          <button nz-button nzType=\\\"link\\\" nz-tooltip nzTitle=\\\"Remove Matrix Levels Data\\\"\\r\\n                            [disabled]=\\\"addBonanzaForm.get('Bonanza_Matrix_Data').value.length==1\\\"\\r\\n                            (click)=\\\"onRemoveMatrixLevelsDataControls(i)\\\" class=\\\"removeButton\\\"><i class=\\\"fa fa-minus\\\"\\r\\n                              aria-hidden=\\\"true\\\"></i></button>\\r\\n                        </nz-form-control>\\r\\n                      </nz-form-item>\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </nz-form-item>\\r\\n          </div>\\r\\n        </div>\\r\\n      <div class=\\\"footer\\\">\\r\\n        <div nz-row [nzGutter]=\\\"16\\\">\\r\\n          <div nz-col nzSpan=\\\"3\\\">\\r\\n            <button nz-button nzType=\\\"default\\\" class=\\\"primary_button1 ant-btn ant-btn-defalt\\\"\\r\\n              (click)=\\\"BonanzaClose()\\\"><span>Cancel</span></button>\\r\\n          </div>\\r\\n              <div nz-col nzSpan=\\\"3\\\">\\r\\n            <button nz-button nzType=\\\"primary\\\" [nzLoading]=\\\"isAddBtnLoading\\\" class=\\\"primary_button1 ant-btn ant-btn-primary\\\"\\r\\n              (click)=\\\"SubmitBonanzaForm()\\\"><span>{{!isBonanzaEditing ?'Create Bonanza':'Update Bonanza'}}</span></button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- {{addBonanzaForm.value| json}} -->\\r\\n    </form>\\r\\n    <!-- </nz-drawer> -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div nz-row *ngIf=\\\"!visible\\\">\\r\\n  <div nz-col nzSpan=\\\"24\\\">\\r\\n    <form nz-form [nzLayout]=\\\"'inline'\\\" [formGroup]=\\\"selectBonanzaStatusForm\\\">\\r\\n      <div nz-row>\\r\\n        <div nz-col nzSpan=\\\"10\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label>Selected Date</nz-form-label>\\r\\n            <nz-form-control>\\r\\n              <nz-range-picker [nzFormat]=\\\"'dd-MM-yyyy'\\\" formControlName=\\\"daterange\\\"></nz-range-picker>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </div>\\r\\n\\r\\n        <div nz-col nzSpan=\\\"8\\\">\\r\\n          <div nz-col nzSpan=\\\"24\\\">\\r\\n            <nz-form-item>\\r\\n              <nz-form-label nzFor=\\\"CountryName\\\" nzRequired>Bonanza Status</nz-form-label>\\r\\n              <nz-form-control class=\\\"countryListDropdown\\\">\\r\\n                <nz-select style=\\\"width: 180px;\\\" formControlName=\\\"Bonanza_Status\\\" nzShowSearch\\r\\n                  nzPlaceHolder=\\\"Select Bonanza Status\\\">\\r\\n                  <nz-option *ngFor=\\\"let item of BonanzaStatusData; let i=index\\\" [nzValue]=\\\"item.ind\\\"\\r\\n                    [nzLabel]=\\\"item.Bonanza_Status\\\"></nz-option>\\r\\n                </nz-select>\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n     \\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"margin-top: 20px;\\\">\\r\\n    <nz-table #basicTable nzShowPagination=\\\"false\\\" [nzLoading]=\\\"isloading\\\" nzLoadingDelay=\\\"1\\\"\\r\\n      [nzData]=\\\"ListAllBonanzaData\\\" style=\\\"background: #FFF;margin:30px 0px;\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Bonanza Code</th>\\r\\n          <th>Bonanza Name</th>\\r\\n          <th>Bonanza Type</th>\\r\\n          <th>Description</th>\\r\\n          <th>Amount</th>\\r\\n          <th>Start & End Date</th>\\r\\n          <th *ngIf=\\\"selectBonanzaStatusForm.get('Bonanza_Status').value == 5\\\">Status</th>\\r\\n          <th>Edit</th>\\r\\n          <th>Actions</th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <ng-container *ngFor=\\\"let data of ListAllBonanzaData;let i=index\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              <a (click)=\\\"onDetail_View(data,i)\\\">\\r\\n                <i class=\\\"fa fa-caret-down\\\" style=\\\"cursor: pointer;font-size: 18px\\\" *ngIf=\\\"isDetailsView!=i\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i>\\r\\n                <i class=\\\"fa fa-caret-up\\\" style=\\\"cursor: pointer;font-size: 18px\\\" *ngIf=\\\"isDetailsView==i\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n            <td>{{data.Bonanza_Code}}</td>\\r\\n            <td>{{data.Name}}</td>\\r\\n            <td *ngIf=\\\"data.Bonanza_Type==1\\\">Points</td>\\r\\n            <td *ngIf=\\\"data.Bonanza_Type==2\\\">Matrix</td>\\r\\n            <td *ngIf=\\\"data.Bonanza_Type==3\\\">both</td>\\r\\n            <td>{{data.Description}}</td>\\r\\n            <td>{{data.Points_Calculation_Data.Amount}}</td>\\r\\n            <td>{{data.Start_Date | date:'medium'}} To<br/> {{data.End_Date | date:'medium'}}</td>\\r\\n            <td *ngIf=\\\"selectBonanzaStatusForm.get('Bonanza_Status').value == 5\\\">\\r\\n              <span *ngIf=\\\"data.Bonanza_Status == 1\\\">Live</span>\\r\\n              <span *ngIf=\\\"data.Bonanza_Status == 2\\\">Completed</span>\\r\\n              <span *ngIf=\\\"data.Bonanza_Status == 3\\\">Cancelled</span>\\r\\n              <span *ngIf=\\\"data.Bonanza_Status == 4\\\">Upcoming</span>\\r\\n            </td>\\r\\n            <td><span (click)=\\\"onEditBonanza(data)\\\"><i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\"></i></span></td>\\r\\n           \\r\\n              <td>\\r\\n                <span [ngSwitch]=\\\"data.Bonanza_Status\\\">\\r\\n                  <span *ngSwitchCase=1>\\r\\n                    <a nz-popconfirm (nzOnConfirm)=\\\"onAction(data)\\\"\\r\\n                      nzTitle=\\\"Are you sure you want to Inactive this?\\\">Make Inactive</a>\\r\\n                  </span>\\r\\n                  <span *ngSwitchCase=3>\\r\\n                    <a style=\\\"color: red;\\\" nz-popconfirm (nzOnConfirm)=\\\"onAction(data)\\\"\\r\\n                      nzTitle=\\\"Are you sure you want to Active this?\\\">Make Active</a>\\r\\n                  </span> \\r\\n  \\r\\n                  <span *ngSwitchDefault>\\r\\n                    NA\\r\\n                  </span>\\r\\n                </span>\\r\\n              </td>\\r\\n              <td><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\" style=\\\"color: red;\\\" \\r\\n                nz-popconfirm nzTitle=\\\"Are you sure delete this ?\\\" (nzOnConfirm)=\\\"onDeletedBonanza(data,i)\\\"></i></td>\\r\\n          </tr>\\r\\n          <tr [nzExpand]=\\\"isDetailsView==i\\\">\\r\\n            <td></td>\\r\\n            <td colspan=\\\"9\\\">\\r\\n              <nz-tabset>\\r\\n                <nz-tab nzTitle=\\\"Bonanza Points Data\\\">\\r\\n                  <nz-table #basicTable nzShowPagination=\\\"false\\\"\\r\\n                    [nzData]=\\\"data.Bonanza_Points_Data\\\" style=\\\"background: #FFF;margin:30px 0px;\\\">\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                        <th>Levels</th>\\r\\n                        <th>Max Points</th>\\r\\n                        <th>Min Points</th>\\r\\n                        <th>Winning</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of data.Bonanza_Points_Data;let i=index\\\">\\r\\n          <td>{{item.Levels}}</td>\\r\\n          <td>{{item.Max_Points}}</td>\\r\\n          <td>{{item.Min_Points}}</td>\\r\\n          <td>{{item.Winning}}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </nz-table>\\r\\n    </nz-tab>\\r\\n    <nz-tab nzTitle=\\\"Bonanza Matrix Data\\\">\\r\\n      <nz-table #basicTable nzShowPagination=\\\"false\\\"\\r\\n        [nzData]=\\\"data.Bonanza_Matrix_Data\\\" style=\\\"background: #FFF;margin:30px 0px;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Levels</th>\\r\\n            <th>Matrix</th>\\r\\n            <th>Winning</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data.Bonanza_Matrix_Data;let i=index\\\">\\r\\n            <td>{{item.Levels}}</td>\\r\\n            <td>{{item.Matrix}}</td>\\r\\n            <td>{{item.Winning}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </nz-table>\\r\\n    </nz-tab>\\r\\n    </nz-tabset>\\r\\n    </td>\\r\\n    </tr>\\r\\n    </ng-container>\\r\\n    </tbody>\\r\\n    </nz-table>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { AppService } from '../app.service';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n  selector: 'app-bonanza',\r\n  templateUrl: './bonanza.component.html',\r\n  styleUrls: ['./bonanza.component.css']\r\n})\r\nexport class BonanzaComponent implements OnInit {\r\n  isAddBtnLoading = false\r\n  isBonanzaEditing = false\r\n  isDetailsView: number;\r\n  IsVisible_data: number = 1\r\n\r\n  BonanzaType = [\r\n    {\r\n      ind: 1,\r\n      type: \"Points\",\r\n    },\r\n    {\r\n      ind: 2,\r\n      type: \"Matrix\",\r\n    },\r\n    {\r\n      ind: 3,\r\n      type: \"Points & Matrix\",\r\n    },\r\n\r\n  ]\r\n  BonanzaStatusData = [\r\n    {\r\n      ind: 1,\r\n      Bonanza_Status: \"Live\",\r\n    },\r\n    {\r\n      ind: 2,\r\n      Bonanza_Status: \"Completed\",\r\n    },\r\n    {\r\n      ind: 3,\r\n      Bonanza_Status: \"Cancelled\",\r\n    },\r\n    {\r\n      ind: 4,\r\n      Bonanza_Status: \"Upcoming\",\r\n    },\r\n    {\r\n      ind: 5,\r\n      Bonanza_Status: \"All\",\r\n    },\r\n  ]\r\n\r\n\r\n  limit = 10\r\n  skip = 0\r\n  addBonanzaForm: FormGroup\r\n  selectBonanzaStatusForm: FormGroup\r\n  isloading: boolean;\r\n  currentPage = 1\r\n  TotalItems: any;\r\n  ListAllBonanzaData = []\r\n  visible: boolean\r\n  Bonanza_Points_Data = [];\r\n  Bonanza_Matrix_Data = [];\r\n  BonanzaID: any;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private _appService: AppService,\r\n    private nzMessageService: NzMessageService) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.selectBonanzaStatusForm = this.fb.group({\r\n      Bonanza_Status: [5, [Validators.required]],\r\n      daterange: [[]],\r\n    })\r\n\r\n    let StartDate: Date = this.selectBonanzaStatusForm.value.daterange[0]\r\n    let EndDate: Date = this.selectBonanzaStatusForm.value.daterange[1]\r\n\r\n    this.selectBonanzaStatusForm.get('daterange').valueChanges.subscribe((data: any) => {\r\n\r\n      if (this.selectBonanzaStatusForm.get('daterange').valid) {\r\n        console.log(data)\r\n        this.skip = 0\r\n        this.BonanzaList()\r\n      }\r\n    })\r\n\r\n    this.selectBonanzaStatusForm.get('Bonanza_Status').valueChanges.subscribe((data: any) => {\r\n\r\n      if (this.selectBonanzaStatusForm.get('Bonanza_Status').valid) {\r\n        this.skip = 0\r\n        this.BonanzaList()\r\n      }\r\n    })\r\n    this.addBonanzaForm = this.fb.group({\r\n      Bonanza_Type: [this.BonanzaType[0].ind, [Validators.required]],\r\n      Name: [null, [Validators.required]],\r\n      Description: [null, [Validators.required]],\r\n      Start_Date: [null, [Validators.required]],\r\n      End_Date: [null, [Validators.required]],\r\n      Amount: [null, [Validators.required]],\r\n      Points: [null, [Validators.required]],\r\n      Bonanza_Points_Data: this.fb.array([]),\r\n      Bonanza_Matrix_Data: this.fb.array([])\r\n    });\r\n    this.addBonanzaForm.get('Bonanza_Type').valueChanges.subscribe((data: any) => {\r\n\r\n      if (this.addBonanzaForm.get('Bonanza_Type').valid) {\r\n        const arr = <FormArray>this.addBonanzaForm.controls.Bonanza_Points_Data;\r\n        arr.controls = [];\r\n\r\n        const arr1 = <FormArray>this.addBonanzaForm.controls.Bonanza_Matrix_Data;\r\n        arr1.controls = [];\r\n      }\r\n    })\r\n    this.BonanzaList()\r\n  }\r\n\r\n\r\n\r\n\r\n  BonanzaList() {\r\n    this.isloading = true\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n\r\n    let StartDate: Date = this.selectBonanzaStatusForm.get('daterange').value[0]\r\n    let EndDate: Date = this.selectBonanzaStatusForm.get('daterange').value[1]\r\n    let userdata = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      Bonanza_Status: this.selectBonanzaStatusForm.get('Bonanza_Status').value,\r\n      Whether_Date_Filter: this.selectBonanzaStatusForm.get('daterange').value.length > 0 ?true : false,\r\n      Start_Date:this.selectBonanzaStatusForm.get('daterange').value.length > 0 ? StartDate:'',\r\n      End_Date:this.selectBonanzaStatusForm.get('daterange').value.length > 0 ? EndDate:'',\r\n      skip: this.skip,\r\n      limit: this.limit\r\n    }\r\n    try {\r\n\r\n      this._appService.postMethod('List_All_Bonanza', userdata)\r\n        .subscribe(resp => {\r\n          this.isloading = false\r\n\r\n          if (resp.success) {\r\n            this.ListAllBonanzaData = resp.extras.Data\r\n          } else {\r\n            this.isloading = false\r\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n\r\n\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onDetail_View(data, i: number) {\r\n    let index = i;\r\n    if (this.isDetailsView == index) {\r\n      this.isDetailsView = -1\r\n    }\r\n    else {\r\n      this.isDetailsView = index\r\n      // this.BonanzaList()\r\n    }\r\n\r\n  }\r\n  onClickpoints(data, type) {\r\n    if (type == 1) {\r\n      this.Bonanza_Points_Data = data.Bonanza_Points_Data\r\n      console.log(this.Bonanza_Points_Data)\r\n    } else if (type == 2) {\r\n      this.Bonanza_Matrix_Data = data.Bonanza_Matrix_Data\r\n    }\r\n\r\n\r\n  }\r\n\r\n  SubmitBonanzaForm() {\r\n    // for (const i in this.addBonanzaForm.controls) {\r\n    //   this.addBonanzaForm.controls[i].markAsDirty();\r\n    //   this.addBonanzaForm.controls[i].updateValueAndValidity();\r\n    // }\r\n    // if(this.addBonanzaForm.invalid){\r\n    //   this.nzMessageService.warning('Enter All tags')\r\n    //   return false\r\n    // }\r\n    this.isAddBtnLoading = true\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n    let body = {}\r\n    let url = ''\r\n\r\n    if (this.isBonanzaEditing == true) {\r\n      body = {\r\n        AdminID: adminData.AdminID,\r\n        SessionID: adminData.SessionID,\r\n        Bonanza_Type: this.addBonanzaForm.value.Bonanza_Type,\r\n        Name: this.addBonanzaForm.value.Name,\r\n        Description: this.addBonanzaForm.value.Description,\r\n        Start_Date: this.addBonanzaForm.value.Start_Date,\r\n        End_Date: this.addBonanzaForm.value.End_Date,\r\n        Amount: this.addBonanzaForm.value.Amount,\r\n        Points: this.addBonanzaForm.value.Points,\r\n        Bonanza_Points_Data: this.addBonanzaForm.value.Bonanza_Points_Data,\r\n        Bonanza_Matrix_Data: this.addBonanzaForm.value.Bonanza_Matrix_Data,\r\n        BonanzaID: this.BonanzaID\r\n      }\r\n      url = 'Edit_Bonanza'\r\n    } else {\r\n      body = {\r\n        AdminID: adminData.AdminID,\r\n        SessionID: adminData.SessionID,\r\n        Bonanza_Type: this.addBonanzaForm.value.Bonanza_Type,\r\n        Name: this.addBonanzaForm.value.Name,\r\n        Description: this.addBonanzaForm.value.Description,\r\n        Start_Date: this.addBonanzaForm.value.Start_Date,\r\n        End_Date: this.addBonanzaForm.value.End_Date,\r\n        Amount: this.addBonanzaForm.value.Amount,\r\n        Points: this.addBonanzaForm.value.Points,\r\n        Bonanza_Points_Data: this.addBonanzaForm.value.Bonanza_Points_Data,\r\n        Bonanza_Matrix_Data: this.addBonanzaForm.value.Bonanza_Matrix_Data,\r\n\r\n      }\r\n      url = 'Create_Bonanza'\r\n    }\r\n\r\n\r\n    try {\r\n      this._appService.postMethod(url, body)\r\n        .subscribe(resp => {\r\n          if (resp.success) {\r\n            this.isAddBtnLoading = false\r\n            this.visible = false;\r\n            this.BonanzaList()\r\n            if (this.isBonanzaEditing) {\r\n              this.nzMessageService.success('Bonanza Update Sucessfully')\r\n            } else {\r\n              this.nzMessageService.success('Bonanza Added Sucessfully')\r\n            }\r\n            this.BonanzaClose()\r\n          } else {\r\n            this.isAddBtnLoading = false\r\n            // this.visible = false;\r\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) {\r\n    }\r\n  }\r\n  open() {\r\n    this.visible = true;\r\n    this.isBonanzaEditing = false\r\n    this.addBonanzaForm.reset({\r\n      Bonanza_Type: 1\r\n    })\r\n  }\r\n  BonanzaClose(): void {\r\n    this.visible = false;\r\n    this.isAddBtnLoading = false\r\n    this.addBonanzaForm.reset({\r\n      Bonanza_Type: 1\r\n    })\r\n\r\n    // const control = this.addBonanzaForm.controls.Bonanza_Points_Data as FormArray;\r\n    // console.log(control.length)\r\n    // for (let i = 0; i < control.length; i++){\r\n    //   control.removeAt(i);\r\n    // }\r\n    const arr = <FormArray>this.addBonanzaForm.controls.Bonanza_Points_Data;\r\n    arr.controls = [];\r\n\r\n    const arr1 = <FormArray>this.addBonanzaForm.controls.Bonanza_Matrix_Data;\r\n    arr1.controls = [];\r\n  }\r\n\r\n  addPointsLevelControls() {\r\n    const control = this.addBonanzaForm.controls.Bonanza_Points_Data as FormArray;\r\n    control.push(this.onPushArrayControls());\r\n  }\r\n  onRemovePointsLevelDataControls(j) {\r\n    const control = <FormArray>this.addBonanzaForm.controls['Bonanza_Points_Data'];\r\n    control.removeAt(j);\r\n  }\r\n\r\n  addMatrixLevelsControls() {\r\n    const control = <FormArray>this.addBonanzaForm.controls['Bonanza_Matrix_Data'];\r\n    control.push(this.onPushMatrixLevelsControls());\r\n  }\r\n\r\n  onRemoveMatrixLevelsDataControls(i) {\r\n    const control = <FormArray>this.addBonanzaForm.controls['Bonanza_Matrix_Data'];\r\n    control.removeAt(i);\r\n  }\r\n  onEditBonanza(type) {\r\n    this.visible = true\r\n    this.BonanzaID = type.BonanzaID\r\n\r\n   if(type.Bonanza_Type == 1 || type.Bonanza_Type == 3){\r\n    let Bonanza_Points_Data = []\r\n    Bonanza_Points_Data = type.Bonanza_Points_Data\r\n    for (let i = 0; i < Bonanza_Points_Data.length; i++) {\r\n      this.addPointsLevelControls()\r\n    }\r\n   }\r\n    if(type.Bonanza_Type == 2 || type.Bonanza_Type ==3){\r\n      let Bonanza_Matrix_Data = []\r\n      Bonanza_Matrix_Data = type.Bonanza_Matrix_Data\r\n      for (let i = 0; i < Bonanza_Matrix_Data.length; i++) {\r\n        this.addMatrixLevelsControls()\r\n      }\r\n    }\r\n    this.addBonanzaForm.patchValue({\r\n      Bonanza_Type: type.Bonanza_Type,\r\n      Name: type.Name,\r\n      Description: type.Description,\r\n      Start_Date: type.Start_Date,\r\n      End_Date: type.End_Date,\r\n      Amount: type.Points_Calculation_Data.Amount,\r\n      Points: type.Points_Calculation_Data.Points,\r\n      Bonanza_Points_Data: type.Bonanza_Points_Data,\r\n      Bonanza_Matrix_Data: type.Bonanza_Matrix_Data,\r\n    },{emitEvent: false})\r\n    this.isBonanzaEditing = true\r\n\r\n  }\r\n  onPushArrayControls() {\r\n    return this.fb.group({\r\n      Levels: [null, [Validators.required]],\r\n      Min_Points: [null, [Validators.required]],\r\n      Max_Points: [null, [Validators.required]],\r\n      Winning: [null, [Validators.required]],\r\n    });\r\n\r\n  }\r\n  onPushMatrixLevelsControls() {\r\n    return this.fb.group({\r\n      Levels: [null, [Validators.required]],\r\n      Matrix: [null, [Validators.required]],\r\n      Winning: [null, [Validators.required]],\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  get arrayControls() {\r\n    return this.addBonanzaForm.get('Bonanza_Points_Data') as FormGroup;\r\n  }\r\n  get MatrixLevelsControls() {\r\n    return this.addBonanzaForm.get('Bonanza_Matrix_Data') as FormGroup;\r\n  }\r\n  onDeletedBonanza(data, index) {\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n\r\n    let body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      BonanzaID: data.BonanzaID\r\n    }\r\n    try {\r\n\r\n      this._appService.postMethod('Delete_Bonanza', body)\r\n        .subscribe(resp => {\r\n          this.isloading = false\r\n          if (resp.success) {\r\n            this.nzMessageService.success('Bonanza Deleted Sucessfully')\r\n            this.BonanzaList()\r\n          } else {\r\n            this.isloading = false\r\n            this.nzMessageService.error(resp.extras.msg)\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onAction(data) {\r\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\r\n    const body = {\r\n      AdminID: adminData.AdminID,\r\n      SessionID: adminData.SessionID,\r\n      BonanzaID: data.BonanzaID\r\n    }\r\n    try {\r\n      this._appService.postMethod('Activate_Inactivate_Bonanza', body)\r\n        .subscribe(resp => {\r\n          if (resp.success) {\r\n            let msg;\r\n            if (data.Status) {\r\n              msg = 'Inactivated Successfully'\r\n            } else {\r\n              msg = 'Activated Successfully'\r\n            }\r\n            this.BonanzaList()\r\n            this.nzMessageService.success(msg)\r\n          } else {\r\n            this.nzMessageService.error(resp.extras.msg)\r\n\r\n          }\r\n        },\r\n          error => {\r\n\r\n          })\r\n    } catch (e) { }\r\n  }\r\n  closePreferncesBonanza() {\r\n    this.addBonanzaForm.reset({\r\n      Bonanza_Type: 1\r\n    })\r\n    this.isAddBtnLoading = false\r\n\r\n    const arr = <FormArray>this.addBonanzaForm.controls.Bonanza_Points_Data;\r\n    arr.controls = [];\r\n\r\n    const arr1 = <FormArray>this.addBonanzaForm.controls.Bonanza_Matrix_Data;\r\n    arr1.controls = [];\r\n    // const control = this.addBonanzaForm.controls.Bonanza_Points_Data as FormArray;\r\n    // control.clear()\r\n    // const bonanzapoints = <FormArray>this.addBonanzaForm.controls['Bonanza_Points_Data'];\r\n    // bonanzapoints.cle;\r\n    // const BonanzaMatrix = <FormArray>this.addBonanzaForm.controls['Bonanza_Matrix_Data'];\r\n    // BonanzaMatrix.clear();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BonanzaComponent } from './bonanza.component';\r\nimport { BonanzaRoutes } from './Bonanza.routing';\r\nimport { SharedModule } from '../shared.modue';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BonanzaRoutes,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [BonanzaComponent]\r\n})\r\nexport class BonanzaModule { }\r\n"],"sourceRoot":""}