{"version":3,"sources":["webpack:///./src/app/bonanza/Bonanza.routing.ts","webpack:///./src/app/bonanza/bonanza.component.css","webpack:///./src/app/bonanza/bonanza.component.html","webpack:///./src/app/bonanza/bonanza.component.ts","webpack:///./src/app/bonanza/bonanza.module.ts"],"names":[],"mappings":"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","file":"bonanza-bonanza-module.js","sourcesContent":["import { Routes, RouterModule } from '@angular/router';\nimport { BonanzaComponent } from './bonanza.component';\n\nconst routes: Routes = [\n  { path: '', component: BonanzaComponent },\n];\n\nexport const BonanzaRoutes = RouterModule.forChild(routes);\n","module.exports = \".removeButton{\\n    margin-top: 32px;\\n    margin-left: 20px;\\n    border-radius: 50px;\\n    width: 30px;\\n    height: 30px;\\n    padding: 4px 12px 10px 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9uYW56YS9ib25hbnphLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsWUFBWTtJQUNaLDBCQUEwQjtBQUM5QiIsImZpbGUiOiJzcmMvYXBwL2JvbmFuemEvYm9uYW56YS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlbW92ZUJ1dHRvbntcbiAgICBtYXJnaW4tdG9wOiAzMnB4O1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHBhZGRpbmc6IDRweCAxMnB4IDEwcHggOHB4O1xufSJdfQ== */\"","module.exports = \"<div nz-row style=\\\"margin-top: 25px;\\\" *ngIf=\\\"!visible\\\">\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"text-align: right;\\\">\\n    <button nz-button nzType=\\\"primary\\\" (click)=\\\"open()\\\" class=\\\"primary_button\\\">Add Bonanza</button>\\n  </div>\\n</div>\\n<div nz-row style=\\\"margin-top: 25px;\\\" *ngIf=\\\"visible\\\">\\n  <div nz-col nzSpan=\\\"18\\\">\\n    <form nz-form [formGroup]=\\\"addBonanzaForm\\\">\\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label>Bonanza Name</nz-form-label>\\n            <nz-form-control nzSpan=\\\"24\\\" nzRequired >\\n              <input type=\\\"text\\\" nz-input formControlName=\\\"Name\\\" placeholder=\\\"please enter Bonanza Name\\\" />\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label>Bonanza Type</nz-form-label>\\n            <nz-form-control nzSpan=\\\"24\\\" nzRequired>\\n              <nz-input-group>\\n                <nz-select style=\\\"width: 100%;\\\" formControlName=\\\"Bonanza_Type\\\" nzShowSearch nzAllowClear\\n                  nzPlaceHolder=\\\"Select Bonanza Type\\\">\\n                  <nz-option *ngFor=\\\"let item of BonanzaType; let i=index\\\" [nzValue]=\\\"item.ind\\\" [nzLabel]=\\\"item.type\\\">\\n                  </nz-option>\\n                </nz-select>\\n              </nz-input-group>\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div>\\n      <div nz-row nzGutter=\\\"8\\\" *ngIf=\\\"addBonanzaForm.get('Bonanza_Type').value == 1 || addBonanzaForm.get('Bonanza_Type').value == 3\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label>Bonanza Amount</nz-form-label>\\n            <nz-form-control nzRequired>\\n              <input nz-input formControlName=\\\"Amount\\\" placeholder=\\\"please enter Bonanza Amount\\\" />\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label>Bonanza Points</nz-form-label>\\n            <nz-form-control nzRequired>\\n              <input nz-input formControlName=\\\"Points\\\" placeholder=\\\"please enter Bonanza Points\\\" />\\n\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n      </div>\\n      <div nz-row nzGutter=\\\"8\\\">\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <div nz-row nzGutter=\\\"8\\\">\\n            <div nz-col nzSpan=\\\"12\\\">\\n              <nz-form-item>\\n                <nz-form-label>From Date</nz-form-label>\\n                <nz-form-control nzRequired>\\n                  <nz-date-picker nzPlaceHolder=\\\"From Date\\\" formControlName=\\\"Start_Date\\\"></nz-date-picker>\\n                </nz-form-control>\\n              </nz-form-item>\\n            </div>\\n            <div nz-col nzSpan=\\\"12\\\">\\n              <nz-form-item>\\n                <nz-form-label>End Date</nz-form-label>\\n                <nz-form-control nzRequired>\\n                  <nz-date-picker formControlName=\\\"End_Date\\\"></nz-date-picker>\\n\\n                </nz-form-control>\\n              </nz-form-item>\\n            </div>\\n          </div>\\n        </div>\\n        \\n\\n        <div nz-col nzSpan=\\\"12\\\">\\n          <nz-form-item>\\n            <nz-form-label>Bonanza Description</nz-form-label>\\n            <nz-form-control nzRequired>\\n              <textarea nz-input style=\\\"height: 120px;\\\" formControlName=\\\"Description\\\" placeholder=\\\"please enter Bonanza Description\\\" ></textarea>\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n\\n      </div>\\n\\n\\n        <div nz-row [nzGutter]=\\\"16\\\" *ngIf=\\\"addBonanzaForm.get('Bonanza_Type').value == 1 || addBonanzaForm.get('Bonanza_Type').value == 3\\\">\\n          <div nz-col nzSpan=\\\"12\\\">\\n            <nz-form-item>\\n              <nz-form-label nzFor=\\\"Cluster\\\" nzRequired>Points Level Data</nz-form-label>\\n              <nz-form-control>\\n                <div style=\\\"margin-bottom: 10px;\\\">\\n                  <button nz-button nz-tooltip nzTitle=\\\"Add Points Level Data\\\" (click)=\\\"addPointsLevelControls()\\\"><i\\n                      class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Add Points Level Data</button>\\n                </div>\\n              </nz-form-control>\\n            </nz-form-item>\\n          </div>\\n        </div>\\n\\n        <div nz-row [nzGutter]=\\\"16\\\">\\n          <div nz-col nzSpan=\\\"24\\\">\\n            <nz-form-item formArrayName=\\\"Bonanza_Points_Data\\\">\\n              <ng-container *ngFor=\\\"let authCotrols of arrayControls.controls; let j=index\\\">\\n                <div [formGroupName]=\\\"j\\\">\\n                  <div nz-row nzGutter=\\\"8\\\">\\n                    <div nz-col nzSpan=\\\"5\\\">\\n                      <nz-form-item>\\n                        <nz-form-label nzSpan=\\\"24\\\">Points Levels</nz-form-label>\\n                        <nz-form-control nzSpan=\\\"24\\\" nzRequired>\\n                          <input formControlName=\\\"Levels\\\" nz-input placeholder=\\\"please enter Points Levels\\\" />\\n                        </nz-form-control>\\n                      </nz-form-item>\\n                    </div>\\n                    <div nz-col nzSpan=\\\"5\\\">\\n                      <nz-form-item>\\n                        <nz-form-label nzSpan=\\\"24\\\">Min Points</nz-form-label>\\n                        <nz-form-control nzSpan=\\\"24\\\">\\n                          <input formControlName=\\\"Min_Points\\\" nz-input placeholder=\\\"please enter Min Points\\\" />\\n                        </nz-form-control>\\n                      </nz-form-item>\\n                    </div>\\n                    <div nz-col nzSpan=\\\"5\\\">\\n                      <nz-form-item>\\n                        <nz-form-label nzSpan=\\\"24\\\">Max Points</nz-form-label>\\n                        <nz-form-control nzSpan=\\\"24\\\">\\n                          <input formControlName=\\\"Max_Points\\\" nz-input placeholder=\\\"please enter Max Points\\\" />\\n                        </nz-form-control>\\n                      </nz-form-item>\\n                    </div>\\n                    <div nz-col nzSpan=\\\"5\\\">\\n                      <nz-form-item>\\n                        <nz-form-label nzSpan=\\\"24\\\">Winning</nz-form-label>\\n                        <nz-form-control nzSpan=\\\"24\\\">\\n                          <input formControlName=\\\"Winning\\\" nz-input placeholder=\\\"please enter Winning\\\" />\\n                        </nz-form-control>\\n                      </nz-form-item>\\n                    </div>\\n                    <div nz-col nzSpan=\\\"2\\\">\\n                      <nz-form-item>\\n                        <nz-form-control>\\n                          <button nz-button nzType=\\\"link\\\" nz-tooltip nzTitle=\\\"Remove Points Level Data\\\"\\n                            [disabled]=\\\"addBonanzaForm.get('Bonanza_Points_Data').value.length==1\\\"\\n                            (click)=\\\"onRemovePointsLevelDataControls(j)\\\" class=\\\"removeButton\\\"><i class=\\\"fa fa-minus\\\"\\n                              aria-hidden=\\\"true\\\"></i></button>\\n                        </nz-form-control>\\n                      </nz-form-item>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n              </ng-container>\\n            </nz-form-item>\\n          </div>\\n        </div>\\n\\n        <div nz-row [nzGutter]=\\\"16\\\" *ngIf=\\\"addBonanzaForm.get('Bonanza_Type').value == 2 || addBonanzaForm.get('Bonanza_Type').value == 3\\\">\\n          <div nz-col nzSpan=\\\"12\\\">\\n            <nz-form-item>\\n              <nz-form-label nzFor=\\\"Cluster\\\" nzRequired>Matrix Levels Data</nz-form-label>\\n              <nz-form-control>\\n                <div style=\\\"margin-bottom: 10px;\\\">\\n                  <button nz-button nz-tooltip nzTitle=\\\"Add Matrix Levels Data\\\" (click)=\\\"addMatrixLevelsControls()\\\"><i\\n                      class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Add Matrix Levels Data</button>\\n                </div>\\n              </nz-form-control>\\n            </nz-form-item>\\n          </div>\\n        </div>\\n\\n        <div nz-row [nzGutter]=\\\"16\\\">\\n          <div nz-col nzSpan=\\\"24\\\">\\n            <nz-form-item formArrayName=\\\"Bonanza_Matrix_Data\\\">\\n              <ng-container *ngFor=\\\"let authCotrols of MatrixLevelsControls.controls; let i=index\\\">\\n                <div [formGroupName]=\\\"i\\\">\\n                  <div nz-row nzGutter=\\\"8\\\">\\n                    <div nz-col nzSpan=\\\"5\\\">\\n                      <nz-form-item>\\n                        <nz-form-label nzSpan=\\\"24\\\">Matrix Levels</nz-form-label>\\n                        <nz-form-control nzSpan=\\\"24\\\">\\n                          <input formControlName=\\\"Levels\\\" nz-input placeholder=\\\"please enter Matrix Levels\\\" />\\n                        </nz-form-control>\\n                      </nz-form-item>\\n                    </div>\\n                    <div nz-col nzSpan=\\\"5\\\">\\n                      <nz-form-item>\\n                        <nz-form-label nzSpan=\\\"24\\\">Matrix</nz-form-label>\\n                        <nz-form-control nzSpan=\\\"24\\\">\\n                          <input formControlName=\\\"Matrix\\\" nz-input placeholder=\\\"please enter Matrix\\\" />\\n                        </nz-form-control>\\n                      </nz-form-item>\\n                    </div>\\n                    <div nz-col nzSpan=\\\"5\\\">\\n                      <nz-form-item>\\n                        <nz-form-label nzSpan=\\\"24\\\">Winning</nz-form-label>\\n                        <nz-form-control nzSpan=\\\"24\\\">\\n                          <input formControlName=\\\"Winning\\\" nz-input placeholder=\\\"please enter Winning\\\" />\\n                        </nz-form-control>\\n                      </nz-form-item>\\n                    </div>\\n\\n                    <div nz-col nzSpan=\\\"2\\\">\\n                      <nz-form-item>\\n                        <nz-form-control>\\n                          <button nz-button nzType=\\\"link\\\" nz-tooltip nzTitle=\\\"Remove Matrix Levels Data\\\"\\n                            [disabled]=\\\"addBonanzaForm.get('Bonanza_Matrix_Data').value.length==1\\\"\\n                            (click)=\\\"onRemoveMatrixLevelsDataControls(i)\\\" class=\\\"removeButton\\\"><i class=\\\"fa fa-minus\\\"\\n                              aria-hidden=\\\"true\\\"></i></button>\\n                        </nz-form-control>\\n                      </nz-form-item>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n              </ng-container>\\n            </nz-form-item>\\n          </div>\\n        </div>\\n      <div class=\\\"footer\\\">\\n        <div nz-row [nzGutter]=\\\"16\\\">\\n          <div nz-col nzSpan=\\\"3\\\">\\n            <button nz-button nzType=\\\"default\\\" class=\\\"primary_button1 ant-btn ant-btn-defalt\\\"\\n              (click)=\\\"BonanzaClose()\\\"><span>Cancel</span></button>\\n          </div>\\n              <div nz-col nzSpan=\\\"3\\\">\\n            <button nz-button nzType=\\\"primary\\\" [nzLoading]=\\\"isAddBtnLoading\\\" class=\\\"primary_button1 ant-btn ant-btn-primary\\\"\\n              (click)=\\\"SubmitBonanzaForm()\\\"><span>{{!isBonanzaEditing ?'Create Bonanza':'Update Bonanza'}}</span></button>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- {{addBonanzaForm.value| json}} -->\\n    </form>\\n    <!-- </nz-drawer> -->\\n  </div>\\n</div>\\n\\n\\n<div nz-row *ngIf=\\\"!visible\\\">\\n  <div nz-col nzSpan=\\\"24\\\">\\n    <form nz-form [nzLayout]=\\\"'inline'\\\" [formGroup]=\\\"selectBonanzaStatusForm\\\">\\n      <div nz-row>\\n        <div nz-col nzSpan=\\\"10\\\">\\n          <nz-form-item>\\n            <nz-form-label>Selected Date</nz-form-label>\\n            <nz-form-control>\\n              <nz-range-picker [nzFormat]=\\\"'dd-MM-yyyy'\\\" formControlName=\\\"daterange\\\"></nz-range-picker>\\n            </nz-form-control>\\n          </nz-form-item>\\n        </div>\\n\\n        <div nz-col nzSpan=\\\"8\\\">\\n          <div nz-col nzSpan=\\\"24\\\">\\n            <nz-form-item>\\n              <nz-form-label nzFor=\\\"CountryName\\\" nzRequired>Bonanza Status</nz-form-label>\\n              <nz-form-control class=\\\"countryListDropdown\\\">\\n                <nz-select style=\\\"width: 180px;\\\" formControlName=\\\"Bonanza_Status\\\" nzShowSearch\\n                  nzPlaceHolder=\\\"Select Bonanza Status\\\">\\n                  <nz-option *ngFor=\\\"let item of BonanzaStatusData; let i=index\\\" [nzValue]=\\\"item.ind\\\"\\n                    [nzLabel]=\\\"item.Bonanza_Status\\\"></nz-option>\\n                </nz-select>\\n              </nz-form-control>\\n            </nz-form-item>\\n          </div>\\n        </div>\\n      </div>\\n     \\n    </form>\\n  </div>\\n\\n  <div nz-col nzSpan=\\\"24\\\" style=\\\"margin-top: 20px;\\\">\\n    <nz-table #basicTable nzShowPagination=\\\"false\\\" [nzLoading]=\\\"isloading\\\" nzLoadingDelay=\\\"1\\\"\\n      [nzData]=\\\"ListAllBonanzaData\\\" style=\\\"background: #FFF;margin:30px 0px;\\\">\\n      <thead>\\n        <tr>\\n          <th></th>\\n          <th>Bonanza Code</th>\\n          <th>Bonanza Name</th>\\n          <th>Bonanza Type</th>\\n          <th>Description</th>\\n          <th>Amount</th>\\n          <th>Start & End Date</th>\\n          <th *ngIf=\\\"selectBonanzaStatusForm.get('Bonanza_Status').value == 5\\\">Status</th>\\n          <th>Edit</th>\\n          <th>Actions</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <ng-container *ngFor=\\\"let data of ListAllBonanzaData;let i=index\\\">\\n          <tr>\\n            <td>\\n              <a (click)=\\\"onDetail_View(data,i)\\\">\\n                <i class=\\\"fa fa-caret-down\\\" style=\\\"cursor: pointer;font-size: 18px\\\" *ngIf=\\\"isDetailsView!=i\\\"\\n                  aria-hidden=\\\"true\\\"></i>\\n                <i class=\\\"fa fa-caret-up\\\" style=\\\"cursor: pointer;font-size: 18px\\\" *ngIf=\\\"isDetailsView==i\\\"\\n                  aria-hidden=\\\"true\\\"></i>\\n              </a>\\n            </td>\\n            <td>{{data.Bonanza_Code}}</td>\\n            <td>{{data.Name}}</td>\\n            <td *ngIf=\\\"data.Bonanza_Type==1\\\">Points</td>\\n            <td *ngIf=\\\"data.Bonanza_Type==2\\\">Matrix</td>\\n            <td *ngIf=\\\"data.Bonanza_Type==3\\\">both</td>\\n            <td>{{data.Description}}</td>\\n            <td>{{data.Points_Calculation_Data.Amount}}</td>\\n            <td>{{data.Start_Date | date:'medium'}} To<br/> {{data.End_Date | date:'medium'}}</td>\\n            <td *ngIf=\\\"selectBonanzaStatusForm.get('Bonanza_Status').value == 5\\\">\\n              <span *ngIf=\\\"data.Bonanza_Status == 1\\\">Live</span>\\n              <span *ngIf=\\\"data.Bonanza_Status == 2\\\">Completed</span>\\n              <span *ngIf=\\\"data.Bonanza_Status == 3\\\">Cancelled</span>\\n              <span *ngIf=\\\"data.Bonanza_Status == 4\\\">Upcoming</span>\\n            </td>\\n            <td><span (click)=\\\"onEditBonanza(data)\\\"><i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\"></i></span></td>\\n           \\n              <td>\\n                <span [ngSwitch]=\\\"data.Bonanza_Status\\\">\\n                  <span *ngSwitchCase=1>\\n                    <a nz-popconfirm (nzOnConfirm)=\\\"onAction(data)\\\"\\n                      nzTitle=\\\"Are you sure you want to Inactive this?\\\">Make Inactive</a>\\n                  </span>\\n                  <span *ngSwitchCase=3>\\n                    <a style=\\\"color: red;\\\" nz-popconfirm (nzOnConfirm)=\\\"onAction(data)\\\"\\n                      nzTitle=\\\"Are you sure you want to Active this?\\\">Make Active</a>\\n                  </span> \\n  \\n                  <span *ngSwitchDefault>\\n                    NA\\n                  </span>\\n                </span>\\n              </td>\\n              <td><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\" style=\\\"color: red;\\\" \\n                nz-popconfirm nzTitle=\\\"Are you sure delete this ?\\\" (nzOnConfirm)=\\\"onDeletedBonanza(data,i)\\\"></i></td>\\n          </tr>\\n          <tr [nzExpand]=\\\"isDetailsView==i\\\">\\n            <td></td>\\n            <td colspan=\\\"9\\\">\\n              <nz-tabset>\\n                <nz-tab nzTitle=\\\"Bonanza Points Data\\\">\\n                  <nz-table #basicTable nzShowPagination=\\\"false\\\"\\n                    [nzData]=\\\"data.Bonanza_Points_Data\\\" style=\\\"background: #FFF;margin:30px 0px;\\\">\\n                    <thead>\\n                      <tr>\\n                        <th>Levels</th>\\n                        <th>Max Points</th>\\n                        <th>Min Points</th>\\n                        <th>Winning</th>\\n                      </tr>\\n                    </thead>\\n\\n      <tbody>\\n        <tr *ngFor=\\\"let item of data.Bonanza_Points_Data;let i=index\\\">\\n          <td>{{item.Levels}}</td>\\n          <td>{{item.Max_Points}}</td>\\n          <td>{{item.Min_Points}}</td>\\n          <td>{{item.Winning}}</td>\\n        </tr>\\n      </tbody>\\n    </nz-table>\\n    </nz-tab>\\n    <nz-tab nzTitle=\\\"Bonanza Matrix Data\\\">\\n      <nz-table #basicTable nzShowPagination=\\\"false\\\"\\n        [nzData]=\\\"data.Bonanza_Matrix_Data\\\" style=\\\"background: #FFF;margin:30px 0px;\\\">\\n        <thead>\\n          <tr>\\n            <th>Levels</th>\\n            <th>Matrix</th>\\n            <th>Winning</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr *ngFor=\\\"let item of data.Bonanza_Matrix_Data;let i=index\\\">\\n            <td>{{item.Levels}}</td>\\n            <td>{{item.Matrix}}</td>\\n            <td>{{item.Winning}}</td>\\n          </tr>\\n        </tbody>\\n      </nz-table>\\n    </nz-tab>\\n    </nz-tabset>\\n    </td>\\n    </tr>\\n    </ng-container>\\n    </tbody>\\n    </nz-table>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { AppService } from '../app.service';\nimport { NzMessageService } from 'ng-zorro-antd';\n\n@Component({\n  selector: 'app-bonanza',\n  templateUrl: './bonanza.component.html',\n  styleUrls: ['./bonanza.component.css']\n})\nexport class BonanzaComponent implements OnInit {\n  isAddBtnLoading = false\n  isBonanzaEditing = false\n  isDetailsView: number;\n  IsVisible_data: number = 1\n\n  BonanzaType = [\n    {\n      ind: 1,\n      type: \"Points\",\n    },\n    {\n      ind: 2,\n      type: \"Matrix\",\n    },\n    {\n      ind: 3,\n      type: \"Points & Matrix\",\n    },\n\n  ]\n  BonanzaStatusData = [\n    {\n      ind: 1,\n      Bonanza_Status: \"Live\",\n    },\n    {\n      ind: 2,\n      Bonanza_Status: \"Completed\",\n    },\n    {\n      ind: 3,\n      Bonanza_Status: \"Cancelled\",\n    },\n    {\n      ind: 4,\n      Bonanza_Status: \"Upcoming\",\n    },\n    {\n      ind: 5,\n      Bonanza_Status: \"All\",\n    },\n  ]\n\n\n  limit = 10\n  skip = 0\n  addBonanzaForm: FormGroup\n  selectBonanzaStatusForm: FormGroup\n  isloading: boolean;\n  currentPage = 1\n  TotalItems: any;\n  ListAllBonanzaData = []\n  visible: boolean\n  Bonanza_Points_Data = [];\n  Bonanza_Matrix_Data = [];\n  BonanzaID: any;\n\n  constructor(private fb: FormBuilder,\n    private _appService: AppService,\n    private nzMessageService: NzMessageService) { }\n\n\n  ngOnInit() {\n\n    this.selectBonanzaStatusForm = this.fb.group({\n      Bonanza_Status: [5, [Validators.required]],\n      daterange: [[]],\n    })\n\n    let StartDate: Date = this.selectBonanzaStatusForm.value.daterange[0]\n    let EndDate: Date = this.selectBonanzaStatusForm.value.daterange[1]\n\n    this.selectBonanzaStatusForm.get('daterange').valueChanges.subscribe((data: any) => {\n\n      if (this.selectBonanzaStatusForm.get('daterange').valid) {\n        console.log(data)\n        this.skip = 0\n        this.BonanzaList()\n      }\n    })\n\n    this.selectBonanzaStatusForm.get('Bonanza_Status').valueChanges.subscribe((data: any) => {\n\n      if (this.selectBonanzaStatusForm.get('Bonanza_Status').valid) {\n        this.skip = 0\n        this.BonanzaList()\n      }\n    })\n    this.addBonanzaForm = this.fb.group({\n      Bonanza_Type: [this.BonanzaType[0].ind, [Validators.required]],\n      Name: [null, [Validators.required]],\n      Description: [null, [Validators.required]],\n      Start_Date: [null, [Validators.required]],\n      End_Date: [null, [Validators.required]],\n      Amount: [null, [Validators.required]],\n      Points: [null, [Validators.required]],\n      Bonanza_Points_Data: this.fb.array([]),\n      Bonanza_Matrix_Data: this.fb.array([])\n    });\n    this.addBonanzaForm.get('Bonanza_Type').valueChanges.subscribe((data: any) => {\n\n      if (this.addBonanzaForm.get('Bonanza_Type').valid) {\n        const arr = <FormArray>this.addBonanzaForm.controls.Bonanza_Points_Data;\n        arr.controls = [];\n\n        const arr1 = <FormArray>this.addBonanzaForm.controls.Bonanza_Matrix_Data;\n        arr1.controls = [];\n      }\n    })\n    this.BonanzaList()\n  }\n\n\n\n\n  BonanzaList() {\n    this.isloading = true\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n\n    let StartDate: Date = this.selectBonanzaStatusForm.get('daterange').value[0]\n    let EndDate: Date = this.selectBonanzaStatusForm.get('daterange').value[1]\n    let userdata = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      Bonanza_Status: this.selectBonanzaStatusForm.get('Bonanza_Status').value,\n      Whether_Date_Filter: this.selectBonanzaStatusForm.get('daterange').value.length > 0 ?true : false,\n      Start_Date:this.selectBonanzaStatusForm.get('daterange').value.length > 0 ? StartDate:'',\n      End_Date:this.selectBonanzaStatusForm.get('daterange').value.length > 0 ? EndDate:'',\n      skip: this.skip,\n      limit: this.limit\n    }\n    try {\n\n      this._appService.postMethod('List_All_Bonanza', userdata)\n        .subscribe(resp => {\n          this.isloading = false\n\n          if (resp.success) {\n            this.ListAllBonanzaData = resp.extras.Data\n          } else {\n            this.isloading = false\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) {\n\n    }\n\n  }\n\n  onDetail_View(data, i: number) {\n    let index = i;\n    if (this.isDetailsView == index) {\n      this.isDetailsView = -1\n    }\n    else {\n      this.isDetailsView = index\n      // this.BonanzaList()\n    }\n\n  }\n  onClickpoints(data, type) {\n    if (type == 1) {\n      this.Bonanza_Points_Data = data.Bonanza_Points_Data\n      console.log(this.Bonanza_Points_Data)\n    } else if (type == 2) {\n      this.Bonanza_Matrix_Data = data.Bonanza_Matrix_Data\n    }\n\n\n  }\n\n  SubmitBonanzaForm() {\n    // for (const i in this.addBonanzaForm.controls) {\n    //   this.addBonanzaForm.controls[i].markAsDirty();\n    //   this.addBonanzaForm.controls[i].updateValueAndValidity();\n    // }\n    // if(this.addBonanzaForm.invalid){\n    //   this.nzMessageService.warning('Enter All tags')\n    //   return false\n    // }\n    this.isAddBtnLoading = true\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n    let body = {}\n    let url = ''\n\n    if (this.isBonanzaEditing == true) {\n      body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        Bonanza_Type: this.addBonanzaForm.value.Bonanza_Type,\n        Name: this.addBonanzaForm.value.Name,\n        Description: this.addBonanzaForm.value.Description,\n        Start_Date: this.addBonanzaForm.value.Start_Date,\n        End_Date: this.addBonanzaForm.value.End_Date,\n        Amount: this.addBonanzaForm.value.Amount,\n        Points: this.addBonanzaForm.value.Points,\n        Bonanza_Points_Data: this.addBonanzaForm.value.Bonanza_Points_Data,\n        Bonanza_Matrix_Data: this.addBonanzaForm.value.Bonanza_Matrix_Data,\n        BonanzaID: this.BonanzaID\n      }\n      url = 'Edit_Bonanza'\n    } else {\n      body = {\n        AdminID: adminData.AdminID,\n        SessionID: adminData.SessionID,\n        Bonanza_Type: this.addBonanzaForm.value.Bonanza_Type,\n        Name: this.addBonanzaForm.value.Name,\n        Description: this.addBonanzaForm.value.Description,\n        Start_Date: this.addBonanzaForm.value.Start_Date,\n        End_Date: this.addBonanzaForm.value.End_Date,\n        Amount: this.addBonanzaForm.value.Amount,\n        Points: this.addBonanzaForm.value.Points,\n        Bonanza_Points_Data: this.addBonanzaForm.value.Bonanza_Points_Data,\n        Bonanza_Matrix_Data: this.addBonanzaForm.value.Bonanza_Matrix_Data,\n\n      }\n      url = 'Create_Bonanza'\n    }\n\n\n    try {\n      this._appService.postMethod(url, body)\n        .subscribe(resp => {\n          if (resp.success) {\n            this.isAddBtnLoading = false\n            this.visible = false;\n            this.BonanzaList()\n            if (this.isBonanzaEditing) {\n              this.nzMessageService.success('Bonanza Update Sucessfully')\n            } else {\n              this.nzMessageService.success('Bonanza Added Sucessfully')\n            }\n            this.BonanzaClose()\n          } else {\n            this.isAddBtnLoading = false\n            // this.visible = false;\n            this.nzMessageService.create('error', this._appService.apiMessages[resp.extras.msg]);\n          }\n        },\n          error => {\n\n          })\n    } catch (e) {\n    }\n  }\n  open() {\n    this.visible = true;\n    this.isBonanzaEditing = false\n    this.addBonanzaForm.reset({\n      Bonanza_Type: 1\n    })\n  }\n  BonanzaClose(): void {\n    this.visible = false;\n    this.isAddBtnLoading = false\n    this.addBonanzaForm.reset({\n      Bonanza_Type: 1\n    })\n\n    // const control = this.addBonanzaForm.controls.Bonanza_Points_Data as FormArray;\n    // console.log(control.length)\n    // for (let i = 0; i < control.length; i++){\n    //   control.removeAt(i);\n    // }\n    const arr = <FormArray>this.addBonanzaForm.controls.Bonanza_Points_Data;\n    arr.controls = [];\n\n    const arr1 = <FormArray>this.addBonanzaForm.controls.Bonanza_Matrix_Data;\n    arr1.controls = [];\n  }\n\n  addPointsLevelControls() {\n    const control = this.addBonanzaForm.controls.Bonanza_Points_Data as FormArray;\n    control.push(this.onPushArrayControls());\n  }\n  onRemovePointsLevelDataControls(j) {\n    const control = <FormArray>this.addBonanzaForm.controls['Bonanza_Points_Data'];\n    control.removeAt(j);\n  }\n\n  addMatrixLevelsControls() {\n    const control = <FormArray>this.addBonanzaForm.controls['Bonanza_Matrix_Data'];\n    control.push(this.onPushMatrixLevelsControls());\n  }\n\n  onRemoveMatrixLevelsDataControls(i) {\n    const control = <FormArray>this.addBonanzaForm.controls['Bonanza_Matrix_Data'];\n    control.removeAt(i);\n  }\n  onEditBonanza(type) {\n    this.visible = true\n    this.BonanzaID = type.BonanzaID\n\n   if(type.Bonanza_Type == 1 || type.Bonanza_Type == 3){\n    let Bonanza_Points_Data = []\n    Bonanza_Points_Data = type.Bonanza_Points_Data\n    for (let i = 0; i < Bonanza_Points_Data.length; i++) {\n      this.addPointsLevelControls()\n    }\n   }\n    if(type.Bonanza_Type == 2 || type.Bonanza_Type ==3){\n      let Bonanza_Matrix_Data = []\n      Bonanza_Matrix_Data = type.Bonanza_Matrix_Data\n      for (let i = 0; i < Bonanza_Matrix_Data.length; i++) {\n        this.addMatrixLevelsControls()\n      }\n    }\n    this.addBonanzaForm.patchValue({\n      Bonanza_Type: type.Bonanza_Type,\n      Name: type.Name,\n      Description: type.Description,\n      Start_Date: type.Start_Date,\n      End_Date: type.End_Date,\n      Amount: type.Points_Calculation_Data.Amount,\n      Points: type.Points_Calculation_Data.Points,\n      Bonanza_Points_Data: type.Bonanza_Points_Data,\n      Bonanza_Matrix_Data: type.Bonanza_Matrix_Data,\n    },{emitEvent: false})\n    this.isBonanzaEditing = true\n\n  }\n  onPushArrayControls() {\n    return this.fb.group({\n      Levels: [null, [Validators.required]],\n      Min_Points: [null, [Validators.required]],\n      Max_Points: [null, [Validators.required]],\n      Winning: [null, [Validators.required]],\n    });\n\n  }\n  onPushMatrixLevelsControls() {\n    return this.fb.group({\n      Levels: [null, [Validators.required]],\n      Matrix: [null, [Validators.required]],\n      Winning: [null, [Validators.required]],\n    });\n\n  }\n\n\n\n  get arrayControls() {\n    return this.addBonanzaForm.get('Bonanza_Points_Data') as FormGroup;\n  }\n  get MatrixLevelsControls() {\n    return this.addBonanzaForm.get('Bonanza_Matrix_Data') as FormGroup;\n  }\n  onDeletedBonanza(data, index) {\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n\n    let body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      BonanzaID: data.BonanzaID\n    }\n    try {\n\n      this._appService.postMethod('Delete_Bonanza', body)\n        .subscribe(resp => {\n          this.isloading = false\n          if (resp.success) {\n            this.nzMessageService.success('Bonanza Deleted Sucessfully')\n            this.BonanzaList()\n          } else {\n            this.isloading = false\n            this.nzMessageService.error(resp.extras.msg)\n          }\n        },\n          error => {\n\n          })\n    } catch (e) {\n\n    }\n\n  }\n\n  onAction(data) {\n    let adminData: any = JSON.parse(localStorage.getItem(\"adminData\"))\n    const body = {\n      AdminID: adminData.AdminID,\n      SessionID: adminData.SessionID,\n      BonanzaID: data.BonanzaID\n    }\n    try {\n      this._appService.postMethod('Activate_Inactivate_Bonanza', body)\n        .subscribe(resp => {\n          if (resp.success) {\n            let msg;\n            if (data.Status) {\n              msg = 'Inactivated Successfully'\n            } else {\n              msg = 'Activated Successfully'\n            }\n            this.BonanzaList()\n            this.nzMessageService.success(msg)\n          } else {\n            this.nzMessageService.error(resp.extras.msg)\n\n          }\n        },\n          error => {\n\n          })\n    } catch (e) { }\n  }\n  closePreferncesBonanza() {\n    this.addBonanzaForm.reset({\n      Bonanza_Type: 1\n    })\n    this.isAddBtnLoading = false\n\n    const arr = <FormArray>this.addBonanzaForm.controls.Bonanza_Points_Data;\n    arr.controls = [];\n\n    const arr1 = <FormArray>this.addBonanzaForm.controls.Bonanza_Matrix_Data;\n    arr1.controls = [];\n    // const control = this.addBonanzaForm.controls.Bonanza_Points_Data as FormArray;\n    // control.clear()\n    // const bonanzapoints = <FormArray>this.addBonanzaForm.controls['Bonanza_Points_Data'];\n    // bonanzapoints.cle;\n    // const BonanzaMatrix = <FormArray>this.addBonanzaForm.controls['Bonanza_Matrix_Data'];\n    // BonanzaMatrix.clear();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BonanzaComponent } from './bonanza.component';\nimport { BonanzaRoutes } from './Bonanza.routing';\nimport { SharedModule } from '../shared.modue';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BonanzaRoutes,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n  ],\n  declarations: [BonanzaComponent]\n})\nexport class BonanzaModule { }\n"],"sourceRoot":""}